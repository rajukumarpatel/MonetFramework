package appfunction;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.apache.commons.compress.archivers.dump.InvalidFormatException;
import org.apache.commons.math3.distribution.TriangularDistribution;
import org.apache.poi.EncryptedDocumentException;
import org.bouncycastle.asn1.BEROctetStringGenerator;
import org.openqa.selenium.Keys;
import org.openxmlformats.schemas.drawingml.x2006.main.impl.CTStyleMatrixReferenceImpl;

import excelmethod.ExcelMethods;
import generalMethods.GeneralFunc;

public class AppFunc
{
	GeneralFunc gf;
	Robot rb;
	public AppFunc (GeneralFunc gf)
	{
	this.gf=gf;
	}
	File LocFile=new File("C:\\Users\\ASTR-34\\Desktop\\MonetFramework\\src\\objectRepository\\login.propFile");
    Properties p=new Properties(); 
	public void Loadpropfile() throws FileNotFoundException, IOException
	{
		p.load(new FileInputStream( LocFile));
		}
	public void login(String user,String pass)
    {      gf.implicitwait(20);
		   String username=p.getProperty("un.text.loc");
		   String password=p.getProperty("pwd.text.loc");
		   String log=p.getProperty("login.text.loc");
		   //String alert=p.getProperty("get.alert.mspath");
		   //gf.VerifyElementPresent("xpath", username);
		   gf.sendKeys("xpath",username,user);
		   //gf.VerifyElementPresent("xpath",password);
		   gf.sleep(2000);
		   gf.sendKeys("xpath",password,pass);
		   gf.VerifyElementPresent("xpath",log);
		   gf.sleep(2000);
		   gf.click("xpath",log);
	       }
	public void logout()
	{      String dropdownclick=p.getProperty("dropdown.text.path");
	       String logoutxpath=p.getProperty("log.text.path");
	       String logbutton=p.getProperty("logbutton.text.path");
	       String logoutbtclick=p.getProperty("log.text.logoutpath");
	       //String loggedoutmsg=p.getProperty("log.text.loggedoutmsgpath");
	       gf.click("xpath",dropdownclick);
	       gf.sleep(4000);
	       gf.click("xpath",logoutxpath);
	       gf.sleep(3000);
	       gf.verifyText("xpath",logbutton,"Logout");
	       gf.click("xpath",logoutbtclick);
	       //Get logged out message
	       //gf.verifyText("xpath",loggedoutmsg,"Logged out");
		   }
    public void signup() throws AWTException, FileNotFoundException, IOException
	{    Loadpropfile();
		 String signupbutton=p.getProperty("signup.text.signupath");
		 String signupbuttonpath=p.getProperty("signup.text.path");
		 String companyname=p.getProperty("signup.text.companyname");
		 String adminName=p.getProperty("signup.text.adminname");
		 String companymail=p.getProperty("signup.text.companyemail");
		 String password=p.getProperty("signup.text.password");
		 String confirmpassword=p.getProperty("signup.text.confirmpassword");
		 String zipcode=p.getProperty("signup.text.zipcode");
		 String address=p.getProperty("signup.text.address");
		 String robot=p.getProperty("signup.text.robotclassenterfunc");
		 String createaccountbtn=p.getProperty("signup.text.signuppath");
		 String createbtnpath=p.getProperty("signup.text.creataccount");
		 ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
		 String companyName=xcel.getCellData("signup",1,12);
		 gf.VerifyElementPresent("xpath",signupbutton);	
	     gf.sleep(5000);
	     gf.click("xpath",signupbuttonpath);
	     /*company Name */
	     gf.sleep(4000);
	     gf.sendKeys("xpath",companyname,companyName);
         /*Admin Name*/
	     String AdminName=xcel.getCellData("signup",1,13);
	     gf.sendKeys("xpath",adminName,AdminName);
         /* Company mail id */
	     String email=xcel.getCellData("signup",1,14);
	     gf.sendKeys("cssSelector",companymail,email);
	     String pass=xcel.getCellData("signup",1,15);
	     gf.sendKeys("cssSelector",password,pass);
	     String confpass=xcel.getCellData("signup",1,16);
	     gf.sendKeys("cssSelector",confirmpassword,confpass);	
	     String Zipcode=xcel.getCellData("signup",1,17);
	     gf.sendKeys("cssSelector",zipcode, Zipcode);
	     String addresses=xcel.getCellData("signup",1,18);
	     gf.sendKeys("cssSelector",address,addresses);
	     gf.robotclssenterfunctionality("cssSelector",robot);
	     gf.sleep(3000);
	     gf.VerifyElementPresent("cssSelector",createaccountbtn);
	     gf.click("cssSelector",createbtnpath);
	     //String Existmailtoastmsg=p.getProperty("signup.text.mailexisttoastmsg");
	     //String successmsg=p.getProperty("signup.text.succsmsg");
	     gf.sleep(3000);
	     
	     }
	public void signupNegativeTestCase() throws FileNotFoundException, IOException, AWTException
	 {   Loadpropfile();
		 String signup=p.getProperty("signup.text.signupath");
		 String createaccobtn=p.getProperty("Neg.text.createbtn");
		 String cmperrormsg=p.getProperty("neg.text.cmpname");
		 String cmpname=p.getProperty("signup.text.companyname");
		 String adname=p.getProperty("neg.text.adname");
		 String adminname=p.getProperty("signup.text.adminname");
		 String cmpemailerrormsg=p.getProperty("neg.text.cmpemail");
		 String cmpemail=p.getProperty("signup.text.companyemail");
		 String cmpzpcode=p.getProperty("neg.text.zpcode");
		 String zpcode=p.getProperty("signup.text.zipcode");
		 String add=p.getProperty("neg.text.add");
		 String addrs=p.getProperty("signup.text.address");
		 String toastmsg=p.getProperty("neg.text.alerterrormsg");
		 ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
		 String comptoastmsg=xcel.getCellData("signup",1,0);
		 gf.click("xpath",signup);
         gf.sleep(5000);
         gf.click("xpath",createaccobtn);
         gf.sleep(2000);
		 gf.getTextmsg("xpath",cmperrormsg,comptoastmsg);
		 String compname=xcel.getCellData("signup",1,1);
		 gf.sendKeys("xpath",cmpname,compname);
		 String Admintoastmsg=xcel.getCellData("signup",1,3);  
		 gf.getTextmsg("xpath",adname,Admintoastmsg);
		 String AdminName=xcel.getCellData("signup",1,2);
		 gf.sendKeys("xpath",adminname,AdminName);
		 String cmpemailtoastmsg=xcel.getCellData("signup",1,4);
		 gf.getTextmsg("xpath",cmpemailerrormsg,cmpemailtoastmsg);
		 String compemail=xcel.getCellData("signup",1,5);
		 gf.sendKeys("cssSelector",cmpemail,compemail);
		 String cmpzipcodetoastmsg=xcel.getCellData("signup",1,6);
		 gf.getTextmsg("xpath",cmpzpcode,cmpzipcodetoastmsg);
		 String compzipcode=xcel.getCellData("signup",1,7);
		 gf.sendKeys("cssSelector",zpcode,compzipcode);
		 String addresstoastmsg=xcel.getCellData("signup",1,8);
		 gf.getTextmsg("xpath",add,addresstoastmsg);
		 String address=xcel.getCellData("signup",1,9);
		 gf.sendKeys("cssSelector",addrs,address);
		 gf.sleep(4000);
		 gf.click("xpath",createaccobtn);
		 gf.sleep(2000);
		 String commontoastmsg=xcel.getCellData("signup",1,10);
		 gf.getTextmsg("xpath",toastmsg,commontoastmsg);
		 String cancelbtn=p.getProperty("signup.text.cancelbtn");
		 /* Verification of Scroll Functionality of Sign up Frame */
		 gf.click("xpath",cancelbtn);
		 gf.sleep(1000);
		 gf.click("xpath",signup);
		 gf.scrollpageDown();
		 gf.sleep(2000);
		 gf.scrollpgeUp();
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_04");
		 /*Verification of Re-creation of pre-existing user (admin) account*/
		 String password=p.getProperty("signup.text.password");
		 String confirmpassword=p.getProperty("signup.text.confirmpassword");
		 gf.sendKeys("xpath",cmpname,compname);
		 gf.sendKeys("xpath",adminname,AdminName);
		 gf.sendKeys("cssSelector",cmpemail,compemail);
		 String pass=xcel.getCellData("signup",1,15);
	     gf.sendKeys("cssSelector",password,pass);
	     String confpass=xcel.getCellData("signup",1,16);
	     gf.sendKeys("cssSelector",confirmpassword,confpass);
		 gf.sendKeys("cssSelector",zpcode,compzipcode);
		 gf.sendKeys("cssSelector",addrs,address);
		 gf.sleep(4000);
		 gf.click("xpath",createaccobtn);
		 gf.sleep(2000);
		 String Existmailtoastmsg=p.getProperty("signup.text.mailexisttoastmsg");
		 gf.gettextofwebelement("xpath", Existmailtoastmsg);
		 /*Company Email Field should not accepts only Special Character*/
		 gf.click("xpath",cancelbtn);
		 gf.sleep(1000);
		 gf.click("xpath",signup);
		 String specialcharemail=xcel.getCellData("signup",1,19);
		 gf.sendKeys("cssSelector",cmpemail,specialcharemail);
		 gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_24");
		 String emailerrormsg=p.getProperty("signup.text.emailtexterrormsg");
		 gf.gettextofwebelement("xpath",emailerrormsg);
		 /*Company Email Field should not accepts only numerical characters */
		 gf.cleartext("cssSelector",cmpemail);
		 String numericemail=xcel.getCellData("signup",1,20);
		 gf.sendKeys("cssSelector",cmpemail,numericemail);
		 gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_27");
		 gf.gettextofwebelement("xpath",emailerrormsg);
		 /*Company Email Field should be case-insensitive */
		 gf.cleartext("cssSelector",cmpemail);
		 String casesensitiveemail=xcel.getCellData("signup",1,21);
		 gf.sendKeys("cssSelector",cmpemail,casesensitiveemail);
		 gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_28");
		 /*Password Field must contain atleast 1 special character SU_34*/
		 String passworderrormsg=p.getProperty("signup.text.passowrderrormsg");
		 gf.cleartext("cssSelector",cmpemail);
		 String passwithspecialchar=xcel.getCellData("signup",1,22);
	     gf.sendKeys("cssSelector",password,passwithspecialchar);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_34");
		 gf.gettextofwebelement("xpath",passworderrormsg);
	     /*Password Field must contain atleast 1 numerical character */
		 gf.cleartext("cssSelector",password);
		 gf.sleep(1000);
		 String Atleast1numericpass=xcel.getCellData("signup",1,23);
	     gf.sendKeys("cssSelector",password,Atleast1numericpass);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_36");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Password Field must contain atleast 1 upper case character */
		 gf.cleartext("cssSelector",password);
		 gf.sleep(1000);
		 String Atleast1Upercase=xcel.getCellData("signup",1,24);
	     gf.sendKeys("cssSelector",password,Atleast1Upercase);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_37");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Password Field  must not accepts only upper case character */
		 gf.cleartext("cssSelector",password);
		 gf.sleep(1000);
		 String passwordmustnotUppercase=xcel.getCellData("signup",1,25);
	     gf.sendKeys("cssSelector",password,passwordmustnotUppercase);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_38");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /* Password Field must contain atleast 1 lower case character*/
		 gf.cleartext("cssSelector",password);
		 gf.sleep(1000);
		 String Atleastonelowercase=xcel.getCellData("signup",1,26);
	     gf.sendKeys("cssSelector",password,Atleastonelowercase);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_41");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Password Field must not accepts only lower case character*/
		 gf.cleartext("cssSelector",password);
		 gf.sleep(1000);
		 String passnotacceptonlylowercase=xcel.getCellData("signup",1,27);
	     gf.sendKeys("cssSelector",password,passnotacceptonlylowercase);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_42");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Password Field must be case-sensitive */
		 gf.cleartext("cssSelector",password);
		 gf.sleep(1000);
		 String passwithcasesensitive=xcel.getCellData("signup",1,28);
	     gf.sendKeys("cssSelector",password,passwithcasesensitive);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_43");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must not accepts space as a character*/
		 gf.cleartext("cssSelector",password);
		 gf.sleep(1000);
		 String confirmpasswitspace=xcel.getCellData("signup",1,29);
	     gf.sendKeys("cssSelector",confirmpassword,confirmpasswitspace);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_51");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must not accepts only special characters */
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirmpasswithSpecialcharonly=xcel.getCellData("signup",1,30);
	     gf.sendKeys("cssSelector",confirmpassword,confirmpasswithSpecialcharonly);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_52");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must contain atleast 1 special character */
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirpassatleast1specialchar=xcel.getCellData("signup",1,31);
	     gf.sendKeys("cssSelector",confirmpassword,confirpassatleast1specialchar);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_53");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must not accepts only numerical character*/
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirpasswithnumericno=xcel.getCellData("signup",1,32);
	     gf.sendKeys("cssSelector",confirmpassword,confirpasswithnumericno);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_54");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /* Confirm Password field must contain atleast 1 numerical character */
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirpasstleastonenumeric=xcel.getCellData("signup",1,33);
	     gf.sendKeys("cssSelector",confirmpassword,confirpasstleastonenumeric);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_55");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must not accepts only upper case character*/
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirpasswithupercaseonly=xcel.getCellData("signup",1,34);
	     gf.sendKeys("cssSelector",confirmpassword,confirpasswithupercaseonly);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_56");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must not accepts only lower case character*/
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirmpasswithlowercase=xcel.getCellData("signup",1,35);
	     gf.sendKeys("cssSelector",confirmpassword,confirmpasswithlowercase);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_58");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must atleast 1 lower case character */
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirmpassatleast1lowercase=xcel.getCellData("signup",1,36);
	     gf.sendKeys("cssSelector",confirmpassword,confirmpassatleast1lowercase);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_59");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Confirm Password Field must not accepts a blanked space as a first character */
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirmpasswithfirstcharasblankspace=xcel.getCellData("signup",1,37);
		 gf.space("cssSelector",confirmpassword,Keys.SPACE);
		 gf.space("cssSelector",confirmpassword,Keys.SPACE);
	     gf.sendKeys("cssSelector",confirmpassword,confirmpasswithfirstcharasblankspace);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_60");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /* Confirm Password Field must also be case-sensitive */
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String confirmpasswithcasesensitive=xcel.getCellData("signup",1,38);
	     gf.sendKeys("cssSelector",confirmpassword,confirmpasswithcasesensitive);
	     gf.keyboardtab(1);
		 gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_61");
		 gf.gettextofwebelement("xpath",passworderrormsg);
		 /*Zip Code Field should not accepts only space characters*/
		 gf.cleartext("cssSelector",confirmpassword);
		 gf.sleep(1000);
		 String zipcodewithspace=xcel.getCellData("signup",1,39);
		 gf.sendKeys("cssSelector",zpcode,zipcodewithspace);
		 gf.keyboardtab(1);
	     gf.sleep(2000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_67");
		 /*Scroll Functionality in Address Field must be working fine*/
		 String addresswithlongdata =xcel.getCellData("signup",1,40);
		 gf.sendKeys("cssSelector",addrs,addresswithlongdata);
		 gf.keyboardUp(15);
		 gf.sleep(1000);
		 gf.keyboardDown(15);
		 gf.sleep(1000);
		 gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","SU_74");
		 gf.cleartext("cssSelector",addrs);
		  }
	public void signin(String user,String pass) throws EncryptedDocumentException, InvalidFormatException, IOException
    {      gf.implicitwait(20);
	       String username=p.getProperty("un.text.loc");
		   String password=p.getProperty("pwd.text.loc");
		   String log=p.getProperty("login.text.loc");
		   String alert=p.getProperty("get.alert.mspath");
	       //gf.VerifyElementPresent("xpath", username);
		   gf.sendKeys("xpath",username,user);
	       //gf.VerifyElementPresent("xpath",password);
		   gf.sleep(2000);
		   gf.sendKeys("xpath",password,pass);
	       gf.VerifyElementPresent("xpath",log);
	       gf.sleep(2000);
		   gf.click("xpath",log);
		   gf.sleep(3000);
	       gf.VerifyElementPresent("xpath",alert);  
	       }
	public void signinNegtiveTestcase(String invauser,String invapass) throws IOException, AWTException
	{      String invausername=p.getProperty("un.text.loc");
	       String invapassword=p.getProperty("pwd.text.loc");
	       String invalog=p.getProperty("login.text.loc");
		   String eyeicon=p.getProperty("signin.text.eyeicon");
		   String invalert=p.getProperty("sigin.text.errortostmsg");
		   String trialplan=p.getProperty("signin.text.trialplanexpire");
		   ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
		   String Emailid=xcel.getCellData("Signin",1,0);
		   //gf.VerifyElementPresent("xpath", username);
	       gf.sendKeys("xpath",invausername,invauser);
		   //gf.VerifyElementPresent("xpath",password);
		   gf.sendKeys("xpath",invapassword,invapass);
		   gf.sleep(5000);
		   gf.click("xpath",eyeicon);
		   gf.sleep(5000);
		   gf.VerifyElementPresent("xpath",invalog);
		   gf.click("xpath",invalog);
		   gf.sleep(3000);
		   if(gf.IsDisplayed("xpath",trialplan))
		   {
		   gf.gettextofwebelement("xpath", trialplan);   
		   }
		   else
		   if(gf.IsDisplayed("xpath",invalert))
		   {
		   gf.getTextmsg("xpath", invalert, "Wrong password.Try again");
		   } 
		   /* Verification of Reload Icon */
		   gf.sleep(2000);
		   gf.refreshBrowser();
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_03");
		   gf.sleep(2000);
		   /* Verify that user (admin) cannot login without  providing Email*/
		   gf.sendKeys("xpath",invapassword,invapass); 
		   gf.sleep(1000);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_12");
		   /* Verify that user (admin) cannot login without providing Password */
		   gf.cleartext("xpath",invapassword);
		   gf.sendKeys("xpath",invausername,invauser);
		   gf.sleep(1000);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_13");
		   gf.cleartext("xpath",invausername);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_14");
		   gf.sleep(2000);
		   /* Email Field should be case-sensitive */
		   String password=xcel.getCellData("Signin",1,1);
		   login(Emailid,password);
		   gf.sleep(200);
		   logout();
		  /* Password field must not accepts only numerical character */
		   String passworderrormessage=p.getProperty("signin.text.passwordErrormessage");
		   String Numericpassword=xcel.getCellData("Signin",2,1);
		   login(Emailid,Numericpassword);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",passworderrormessage);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_26");
		   gf.cleartext("xpath",invausername);
		   gf.cleartext("xpath",invapassword);
		   String Upercasepasswordonly=xcel.getCellData("Signin",3,1);
		   /* Password field must not accepts only upper case character*/
		   login(Emailid,Upercasepasswordonly);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",passworderrormessage);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_28");
		   /* Password field must not accepts only lower case character*/
		   gf.cleartext("xpath",invausername);
		   gf.cleartext("xpath",invapassword);
		   String Lowercasepassword=xcel.getCellData("Signin",4,1);
		   login(Emailid,Lowercasepassword);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",passworderrormessage);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_30");
		   /* Password field must not accepts only special character*/
		   gf.cleartext("xpath",invausername);
		   gf.cleartext("xpath",invapassword);
		   String passwordspecialchar=xcel.getCellData("Signin",5,1);
		   login(Emailid,passwordspecialchar);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",passworderrormessage);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_32");
		   /*Password field must not accepts space between the character*/
		   gf.cleartext("xpath",invausername);
		   gf.cleartext("xpath",invapassword);
		   String Spacebetweenchar=xcel.getCellData("Signin",6,1);
		   login(Emailid,Spacebetweenchar);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",passworderrormessage);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_33");
		   /* Password Field must be case-sensitive */
		   gf.cleartext("xpath",invausername);
		   gf.cleartext("xpath",invapassword);
		   String casensitivepassword=xcel.getCellData("Signin",7,1);
		   login(Emailid,casensitivepassword);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",passworderrormessage);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_34");
		   /*Verification of Email Field inside Reset Password  Sign In_41 */
		   String Forgotpass=p.getProperty("signin.text.forgotpassword");
		   gf.click("xpath",Forgotpass);
		   gf.sleep(1000);
		   String Emailtextbox=p.getProperty("signin.text.emailtextbox");
		   gf.sendKeys("xpath",Emailtextbox,Emailid);
		   gf.sleep(2000);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_41");
	       gf.sleep(1000);
	       /* Email must not be invalid */
	       gf.cleartext("xpath",Emailtextbox);
	       String invalidemail=xcel.getCellData("Signin",2,0);
	       gf.sendKeys("xpath",Emailtextbox,invalidemail);
	       gf.sleep(1000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_42");
	       /* Verification of Back Icon inside Reset Password Frame */
	       String keyboardlefticon=p.getProperty("signin.text.keyboardleftrrow");
	       gf.click("xpath",keyboardlefticon);
	       /* The text appeared inside ACTIVATION MAIL SENT window seems to be ambigous between link and OTP We have sent the activation link to your email address, the link is valid for 30 minutes Kindly check your inbox to reset your password. Resend Link*/
           String sendotpbtn=p.getProperty("signin.text.sendotpbtn");
           gf.click("xpath",Forgotpass);
		   gf.sleep(1000);
		   gf.sendKeys("xpath",Emailtextbox,Emailid);
		   gf.click("xpath",sendotpbtn);
	       gf.sleep(2000);
	       String activationmailmsg=p.getProperty("signin.text.sendactivationmailmsg");
	       gf.gettextofwebelement("xpath",activationmailmsg);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_47");
	       /*Verification of Confirm tab */
	       String verifyotpbtn=p.getProperty("signin.text.verifyotp");
	       gf.click("xpath",verifyotpbtn);
	       gf.sleep(2000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_49");
	       /*OTP fields must not be blanked*/
	       String FirstOtpbox=p.getProperty("signin.text.firstotptextbox");
	       String SecondOtpbox=p.getProperty("signin.text.secondtextbox");
	       String Thirdotptextbox=p.getProperty("signin.text.thirdtextbox");
	       String Fourthotptextbox=p.getProperty("signin.text.Fourthtextbox");
	       gf.sendKeys("xpath",FirstOtpbox,"1");
	       gf.sendKeys("xpath", SecondOtpbox,"2");
	       gf.sendKeys("xpath",Thirdotptextbox,"4");
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_55");
	       /*Confirm tab should be highlighted after providing 4 digit OTP*/
	       gf.sendKeys("xpath",Fourthotptextbox,"2");
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","Sign In_50");
	       /*Verification of Reset tab  Sign In_58 */
	       
		   }
    public void forgotpassword() throws FileNotFoundException, IOException
	{      gf.implicitwait(20);
	       Loadpropfile();
	       String forgotpass=p.getProperty("forgot.text.fgpass");
	       String Previousicon=p.getProperty("forgot.text.nexticon");
	       String email=p.getProperty("forgot.text.email");
	       String sendotpbtn=p.getProperty("forgot.text.sendotp");
	       String sendotpalertmsg=p.getProperty("forgot.text.otpalertmsg");
	       String gettext=p.getProperty("forgot.text.textmessag");
	       String verifybtn=p.getProperty("forgot.text.verifyotp");
	       //String gettextmsg=p.getProperty("forgot.text.getmsg");
	       //String gettexterrormsg=p.getProperty("forgot.text.gettextmsg");
	       String confirmbtn=p.getProperty("forgot.text.confirm");
	       /*String FirstOtpboxs=p.getProperty("forgot.text.firstboxs");
	       String secondotpboxs=p.getProperty("forgot.text.secontboxs");
	       String thirdotpboxs=p.getProperty("forgot.text.thirdboxs");
	       String FourthotpBoxs=p.getProperty("forgot.text.fourthboxs"); */
	       String signinlink=p.getProperty("gmail.text.signin");
	       String signinemail=p.getProperty("gmail.text.senemil");
	       String signinnextbtn=p.getProperty("gmail.text.nextbtn");
	       String signinpassword=p.getProperty("gmail.text.password");
	       String signinnextbtnpath=p.getProperty("gmail.text.nextpath");
	       String gmailLink=p.getProperty("gmail.text.gmaillink");
	       String morelinksofgmail=p.getProperty("gmail.text.more");
	       String spamlinks=p.getProperty("gmal.text.spam");
	      // String inboxlink=p.getProperty("gmail.text.clicklink");
	       String newpass=p.getProperty("create.text.newpass");
	       String newpasseyeicon=p.getProperty("create.text.eyeicon");
	       String confirnewpass=p.getProperty("create.text.confirm");
	       String confirmeyeicon=p.getProperty("create.text.confeyeicon");
	       String resetlink=p.getProperty("create.text.resetlink");
	       String resetalertmsg=p.getProperty("create.text.resetpassalertmsg");
	       String resettextmsg=p.getProperty("create.text.resetpasstextmsg");
	       String login=p.getProperty("crete.text.login");
      	   gf.click("xpath", forgotpass);
	       gf.sleep(2000);
	       gf.click("cssSelector",Previousicon);
	       gf.sleep(3000);
	       gf.click("xpath", forgotpass);
	       gf.sleep(3000);
	       gf.sendKeys("cssSelector",email,"shiv.singh@ashmar.in");
	       gf.sleep(3000);
	       gf.click("cssSelector",sendotpbtn);
	       gf.sleep(3000);
	       //verify Otp
	       gf.otpverification("xpath",sendotpalertmsg);
	       gf.sleep(2000);
	       gf.gettextofwebelement("cssSelector",gettext);
	       gf.sleep(5000);
	       gf.opennewTab("https://google.com");
	       /*   Signin into gmail */
	       gf.sleep(4000);
	       gf.click("cssSelector",signinlink);
	       gf.sleep(3000);
	       gf.sendKeys("cssSelector",signinemail,"shiv.singh@ashmar.in");
	       gf.sleep(5000);
	       gf.click("xpath",signinnextbtn);
	       gf.sleep(3000);
	       gf.sendKeys("cssSelector",signinpassword,"shiv31394");
	       gf.sleep(2000);
	       gf.click("xpath", signinnextbtnpath);
	       gf.sleep(5000);
	       gf.click("xpath",gmailLink );
	       gf.click("xpath",morelinksofgmail);
	       gf.sleep(3000);
	       gf.click("xpath",spamlinks);
	       gf.sleep(4000);
	      ///gf.click("xpath",inboxlink); 
	       gf.sleep(4000);
	       gf.BacktoOldTab();
	       gf.sleep(5000);
	       gf.click("cssSelector",verifybtn);
	       gf.sleep(8000);
	      /*gf.sendKeys("cssSelector",FirstOtpboxs,"1");
	       gf.sleep(2000);
	       gf.sendKeys("cssSelector",secondotpboxs,"2");
	       gf.sleep(2000);
	       gf.sendKeys("cssSelector",thirdotpboxs,"1");
	       gf.sleep(2000);
	       gf.sendKeys("cssSelector",FourthotpBoxs,"3");
	       */
	      // gf.sleep(3000);
	      // gf.gettextofwebelement("cssSelector",gettextmsg);
	       /*
	       gf.gettextofwebelement("xpath",gettexterrormsg); */
	      //gf.sleep(5000);
	       gf.click("cssSelector",confirmbtn); 
	       gf.sleep(2000);
	       gf.sendKeys("xpath",newpass,"Rajukumar@123");
	       gf.sleep(2000);
	       gf.click("xpath",newpasseyeicon);
	       gf.sendKeys("xpath",confirnewpass,"Rajukumar@123");
	       gf.sleep(2000);
	       gf.click("xpath",confirmeyeicon);
	       gf.sleep(2000);
	       gf.click("xpath",resetlink);
	       gf.sleep(3000);
	       gf.getTextmsg("xpath",resetalertmsg,"The password has been reset.");
	       gf.gettextofwebelement("xpath",resettextmsg);
	       gf.sleep(2000);
	       gf.click("xpath",login);
	        }
	public void ForgotPassWithInvalidOtp() throws FileNotFoundException, IOException
	  {    Loadpropfile();
		   String forgotpass=p.getProperty("forgot.text.fgpass");
		   String email=p.getProperty("forgot.text.email");
		   String sendotpbtn=p.getProperty("forgot.text.sendotp");
		   String sendotpalertmsg=p.getProperty("forgot.text.otpalertmsg");
		   String gettext=p.getProperty("forgot.text.textmessag");
		   String verifybtn=p.getProperty("forgot.text.verifyotp");
		   String gettextmsg=p.getProperty("forgot.text.getmsg");
		   String gettexterrormsg=p.getProperty("forgot.text.gettextmsg");
		   String confirmbtn=p.getProperty("forgot.text.confirm");
		   String FirstOtpbox=p.getProperty("forgot.text.firstbox");
		   String secondotpbox=p.getProperty("forgot.text.secontbox");
		   String thirdotpbox=p.getProperty("forgot.text.thirdbox");
		   String FourthotpBox=p.getProperty("forgot.text.fourthbox");
		   String otperrormsg=p.getProperty("forgot.text.errormsg");
	       gf.VerifyElementPresent("xpath", forgotpass);
		   gf.click("xpath", forgotpass);
		   gf.sleep(5000);
		   gf.sendKeys("cssSelector",email,"shive@mailinator.com");
		   gf.sleep(5000);
		   gf.click("cssSelector",sendotpbtn);
		   gf.sleep(3000);
		   //verify Otp
		   gf.otpverification("xpath",sendotpalertmsg);
		   gf.sleep(3000);
		   gf.gettextofwebelement("cssSelector",gettext);
		   gf.sleep(2000);
		   gf.click("cssSelector",verifybtn);
		   gf.sleep(3000);
		   gf.gettextofwebelement("cssSelector",gettextmsg);
		   gf.gettextofwebelement("xpath",gettexterrormsg);
		   gf.sendKeys("cssSelector",FirstOtpbox,"1");
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",secondotpbox,"2");
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",thirdotpbox,"1");
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",FourthotpBox,"3");
		   gf.sleep(5000);
		   gf.click("cssSelector",confirmbtn);  
		   gf.gettextofwebelement("xpath",otperrormsg);
		    }
	public void indexpage() throws IOException
	{      gf.implicitwait(20);
		   String logo=p.getProperty("index.text.logo");
		   String more=p.getProperty("index.text.more");
		   String profile=p.getProperty("index.text.profile");
		   String support=p.getProperty("index.text.support");
		   String logout=p.getProperty("index.text.logout");
		   String sociallink=p.getProperty("index.text.sociallink");
		   String fblink=p.getProperty("index.text.fblink");
		   String twitter=p.getProperty("index.text.twitter");
		   String linkedin=p.getProperty("index.text.linkedin");
		   String officessin=p.getProperty("index.text.officesin");
		   String Barcelona=p.getProperty("index.text.Barcelona");
		   String chicago=p.getProperty("index.text.chicago");
		   String Delhi=p.getProperty("index.text.delhi");
		   String losanglese=p.getProperty("index.text.losanglese");
		   String london=p.getProperty("index.text.london");
		   String mexcocity=p.getProperty("index.ntext.mexicocity");
		   String seattle=p.getProperty("index.text.seattle");
		   String dubai=p.getProperty("index.text.dubai");
		   String video=p.getProperty("index.text.video");
		   String watchnow=p.getProperty("index.text.watchnow");
		   String dashboard=p.getProperty("index.text.dashboard");
		   String create=p.getProperty("index.text.create");
		   gf.click("xpath",logo);
		   gf.sleep(5000);
		   gf.click("xpath",more);
		   gf.getTextmsg("xpath",profile,"Profile");
		   gf.sleep(2000);
		   gf.getTextmsg("xpath",support,"Support");
		   gf.sleep(2000);
		   gf.getTextmsg("xpath",logout,"Logout");
		   gf.sleep(2000);
		   gf.click("xpath",support);
		   gf.sleep(5000);
		   gf.currentpageUrl();
		   gf.click("xpath",sociallink);
		   gf.sleep(5000);
		   gf.back();
		   gf.sleep(3000);
		   gf.click("xpath",fblink);
		   gf.currentpageUrl();
		   gf.sleep(2000);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","FacebookPage");
		   gf.back();
		   gf.sleep(3000);
		   gf.click("xpath",twitter);
		   gf.currentpageUrl();
		   gf.sleep(3000);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","TwitterPage");
		   gf.back();
		   gf.sleep(2000);
		   gf.click("xpath",linkedin);
		   gf.currentpageUrl();
		   gf.sleep(3000);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","linkedinPage");
		   gf.back();
		   gf.gettextofwebelement("xpath",officessin);
		   gf.gettextofwebelement("xpath",Barcelona);
		   gf.gettextofwebelement("xpath",chicago);
		   gf.gettextofwebelement("xpath",Delhi);
		   gf.gettextofwebelement("xpath",losanglese);
		   gf.gettextofwebelement("xpath",london);
		   gf.gettextofwebelement("xpath",mexcocity);
		   gf.gettextofwebelement("xpath",seattle);
		   gf.gettextofwebelement("xpath",dubai);
		   gf.sleep(2000);
		   gf.back();
		   gf.sleep(2000);
		   gf.click("xpath",more);
		   gf.sleep(2000);
		   gf.click("xpath",profile);
		   gf.sleep(3000);
		   gf.back();
		   gf.sleep(3000);
		   gf.click("xpath",video);
		   gf.sleep(6000);
		   gf.refreshBrowser();
		   gf.sleep(2000);
		   gf.click("xpath",watchnow);
		   gf.sleep(5000);
		   gf.refreshBrowser();
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",dashboard);
		   gf.sleep(1000);
		   gf.click("xpath",dashboard);
		   gf.sleep(3000);
		   gf.back();
		   gf.sleep(2000);
		   gf.click("xpath",create);
		   gf.sleep(3000);
		   gf.back();
		   gf.sleep(2000);
		   gf.scrollpageDown();
		   gf.sleep(2000);
		   gf.scrollpgeUp();
		   gf.sleep(3000);
		   /*Verification of Title Bars appears in the Index Page */
		   String EmotionAnalysis=p.getProperty("index.text.emotionanalysis");
		   String ReactionAnalysis=p.getProperty("index.text.Reactionanalysis");
		   String SalientScene=p.getProperty("index.text.SalientScene");
		   String LiveComments=p.getProperty("index.text.livecomment");
		   String heatmap=p.getProperty("index.text.Heatmap");
		   String wordcloud=p.getProperty("index.text.wordcloud");
		   String assetcomparison=p.getProperty("index.text.assetcomparison");
		   String valancecomparison=p.getProperty("index.text.valancecomparison");
		   gf.click("xpath",EmotionAnalysis);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","IP_22");
		   gf.sleep(1000);
		   gf.click("xpath",ReactionAnalysis);
		   gf.sleep(1000);
		   gf.scrollpageDown();
		   gf.sleep(2000);
		   gf.click("xpath",SalientScene);
		   gf.sleep(1000);
		   gf.click("xpath",LiveComments);
		   gf.sleep(1000);
		   gf.click("xpath",heatmap);
		   gf.sleep(1000);
		   gf.click("xpath",wordcloud);
		   gf.sleep(1000);
		   gf.click("xpath",assetcomparison);
		   gf.sleep(1000);
		   gf.click("xpath", valancecomparison);
		   gf.sleep(2000);
		   gf.scrollpgeUp();
		   gf.sleep(3000);
		   gf.click("xpath",more);
		   gf.sleep(2000);
		   gf.click("xpath",logout);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","LoginPage");
		   
			}
	public void dashboard() 
	{       gf.implicitwait(20);
			String optionmenue=p.getProperty("dashboard.text.optionmenue");
			String visitprofile=p.getProperty("dashboard.text.visitprofile");
			String logo=p.getProperty("index.text.logo");
			String dashboard=p.getProperty("dashboard.text.dashboard");
			String newcompain=p.getProperty("dashboard.text.newcompain");
			String searchicon=p.getProperty("dashboard.text.searchicon");
			String searchtextbox=p.getProperty("dashboard.text.searhtext");
			String profileicon=p.getProperty("dashboard.text.profileicon");
			String profilename=p.getProperty("dashboard.text.profilename");
			String help=p.getProperty("dashboard.text.help");
			String overview=p.getProperty("dashboard.text.overview");
			String support=p.getProperty("dashboard.text.support");
			String visitprofiles=p.getProperty("dashboard.text.visitpro");
			String logout=p.getProperty("dashboard.text.logout");
			String cancel=p.getProperty("dashboard.text.cancel");
			gf.click("xpath",optionmenue);
			gf.sleep(3000);
			gf.click("xpath",visitprofile);
			gf.sleep(3000);
			gf.back();
			gf.sleep(2000);
			gf.click("xpath",logo);
			gf.sleep(5000);
			gf.click("xpath",dashboard );
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",newcompain);
			gf.sleep(2000);
			gf.click("xpath",newcompain);
		    gf.sleep(2000);
		    gf.back();
		    gf.sleep(2000);
		    gf.click("xpath",searchicon);
		    gf.sleep(3000);
		    gf.sendKeys("cssSelector",searchtextbox,"dfgsdfgsdf");
		    gf.sleep(2000);
		    gf.click("xpath",searchicon);
		    gf.sleep(2000);
		    gf.click("xpath",profileicon);
		    gf.sleep(2000);
		    gf.back();
		    gf.sleep(5000);
		    gf.click("xpath",profilename);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",help);
		    gf.sleep(2000);
		    gf.click("xpath",help);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",overview);
		    gf.sleep(2000);
		    gf.click("xpath",overview);
		    gf.sleep(3000);
		    gf.gettextofwebelement("xpath",support);
		    gf.sleep(2000);
		    gf.click("xpath",support);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",visitprofiles);
		    gf.sleep(2000);
		    gf.click("xpath",visitprofiles);
		    gf.sleep(3000);
		    gf.click("xpath",optionmenue);
		    gf.sleep(3000);
		    gf.gettextofwebelement("xpath",logout);
		    gf.sleep(2000);
		    gf.click("xpath",logout);
		    gf.sleep(2000);
		    gf.click("xpath",cancel);
		    }
    public void profilepage() throws IOException, AWTException
	{       gf.implicitwait(20);
            String optionmenue=p.getProperty("dashboard.text.optionmenue");
			String visitprofile=p.getProperty("dashboard.text.visitprofile");
			String dashboard=p.getProperty("dashboard.text.dashboard");
			String editprofile=p.getProperty("profile.text.edit");
			String compname=p.getProperty("profile.text.compname");
			String adminname=p.getProperty("profile.text.adminname");
			String contactno=p.getProperty("profile.text.contactNo");
			String address=p.getProperty("profile.text.address");
			String zipcode=p.getProperty("profile.text.zipcode");
			String savechanges=p.getProperty("profile.text.savechanges");
			String toastmsg=p.getProperty("profile.text.toastmsg");
			String proimage=p.getProperty("profile.text.image");
		    String profilephoto=p.getProperty("profile.text.photo");
		    String addcard=p.getProperty("profile.text.addcard");
		    String cardname=p.getProperty("profile.text.cardname");
		    String cardno=p.getProperty("profile.text.16-digitno");
		    String cvv=p.getProperty("profile.text.cvv");
		    String bilAdd=p.getProperty("profile.text.biaddres");
		    //String addcarfdbtn=p.getProperty("profile.text.addcardbtn");
		    String cardtoastmsg=p.getProperty("profile.text.cardtoastmsg");
			String viewplans=p.getProperty("profile.text.viewplans");
			String selectplan=p.getProperty("profile.text.selectplan");
			ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
		    String companyname=xcel.getCellData("profilepage", 1, 0);
			gf.click("xpath",optionmenue);
			gf.sleep(2000);
			gf.click("xpath",visitprofile);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",dashboard);
			gf.click("xpath",dashboard);
			gf.sleep(3000);
	        gf.back();
	        gf.sleep(2000);
	        gf.click("xpath",editprofile);
	        gf.sleep(2000);
	        gf.click("xpath",savechanges);
	        gf.implicitwait(20);
			gf.gettextofwebelement("xpath",toastmsg);
			gf.sleep(3000);
			gf.click("xpath",editprofile);
			gf.sleep(2000);
	        gf.cleartext("cssSelector",compname);
	        gf.sleep(2000);
	        gf.sendKeys("cssSelector",compname,companyname);
			gf.sleep(2000);
			gf.cleartext("cssSelector",adminname);
			gf.sleep(2000);
			String AdminName=xcel.getCellData("profilepage", 1, 1);
			gf.sendKeys("cssSelector",adminname,AdminName);
			gf.sleep(2000);
			String ContactNumber=xcel.getCellData("profilepage", 1, 2);
			gf.cleartext("cssSelector",contactno);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",contactno,ContactNumber);
			gf.sleep(2000);
			gf.cleartext("cssSelector",address);
			gf.sleep(2000);
			String Addresses=xcel.getCellData("profilepage", 1, 3);
			gf.sendKeys("cssSelector",address,Addresses);
			gf.sleep(2000);
			gf.cleartext("cssSelector",zipcode);
			gf.sleep(2000);
			String ZipCode=xcel.getCellData("profilepage", 1, 4);
			gf.sendKeys("cssSelector",zipcode,ZipCode);
			gf.sleep(3000);
			gf.click("xpath",savechanges);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",toastmsg);
			gf.sleep(2000); 
		    /*Verification of Profile pic of Profile Info*/
			gf.click("xpath",proimage);
			gf.sleep(2000);
			gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",profilephoto); 
			gf.sleep(2000);
		    /*Verification of add cards */
			gf.click("xpath", addcard);
			gf.sleep(1000);
			String CardName=xcel.getCellData("profilepage", 1,5);
			gf.sendKeys("cssSelector",cardname,CardName);
			gf.sleep(1000);
			String CardNumbere=xcel.getCellData("profilepage", 1,6);
			gf.sendKeys("cssSelector",cardno,CardNumbere);
			gf.keyboardtab(1);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(1000);
			gf.keyboardDown(1);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(1000);
		    gf.keyboardDown(1);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    String Cvv=xcel.getCellData("profilepage", 1,7);
		    gf.sendKeys("cssSelector",cvv,Cvv);
		    gf.sleep(1000);
		    String BillingAddress=xcel.getCellData("profilepage",1,8);
		    gf.sendKeys("cssSelector",bilAdd,BillingAddress);
		    gf.sleep(1000);
		    // gf.click("xpath",addcarfdbtn);
		    gf.keyboardtab(2);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",cardtoastmsg);
		    gf.sleep(2000);
	        /*Verification of view Plans */
		    gf.gettextofwebelement("xpath", viewplans);
		    gf.sleep(1000);
		    gf.click("xpath", viewplans);
		    gf.sleep(2000);
		    gf.back();
		    /* Verification of select Plan*/
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",selectplan);
		    gf.sleep(1000);
		    gf.click("xpath",selectplan);
		    gf.sleep(2000);
		    gf.back();
		    gf.sleep(3000);
		    /* Verification of Graphlink that displayed inside Support window frame */
		    String profilename=p.getProperty("profile.text.profilename");
		    String support=p.getProperty("profile.text.support");
		    String graphlink=p.getProperty("profile.text.graphlink");
		    String monetlinks=p.getProperty("profile.text.monetlinks");
		    String Usage=p.getProperty("profile.text.usagesSection");
		    String validityDate=p.getProperty("profile.text.validity");
		    String remainingdate=p.getProperty("profile.text.remainingdate");
		    String assetremaining=p.getProperty("profile.text.assetremaining");
		    String NumberofAsset=p.getProperty("profile.text.numberofassetsleft");
		    String Remainingassets=p.getProperty("profile.text.remainingassets");
		    gf.refreshBrowser();
            gf.click("xpath",profilename);
            gf.sleep(2000);
            gf.click("xpath",support);
            gf.sleep(12000);
		    gf.mousemorehover("cssSelector",graphlink);
		    gf.sleep(3000);
		    gf.click("xpath",monetlinks);
		    gf.sleep(4000);
		    gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","moneturlissue");
		    gf.back();
		    gf.sleep(3000);
		    /*Verification of Validity under Usage Section*/
		    gf.gettextofwebelement("xpath", Usage);
		    gf.sleep(1000);
		    gf.gettextofwebelement("xpath", validityDate);
		    gf.sleep(1000);
		    gf.gettextofwebelement("xpath", remainingdate);
		    gf.sleep(1000);
		    /*Verification of Asset Remaining under Usage Section*/
		    gf.gettextofwebelement("xpath", assetremaining);
		    gf.sleep(1000);
		    gf.gettextofwebelement("xpath", NumberofAsset);
		    gf.sleep(1000);
		    gf.gettextofwebelement("xpath",Remainingassets);
		    gf.sleep(2000);
		    /*Verification of 16-digits card number field inside Card Details*/
		    gf.click("xpath",addcard);
		    gf.sleep(1000);
			gf.sendKeys("cssSelector",cardno,CardNumbere);
			gf.sleep(1000);
		    gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_71");
		    String notnowbtn=p.getProperty("proflie.text.notnowbtns");
		    String viewplan=p.getProperty("profile.text.viewplan");
		    /*Verification of CVV field inside Card Details*/
		    gf.sendKeys("cssSelector",cvv,Cvv);
		    gf.sleep(1000);
		    gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_79");
		    gf.sleep(1000);
		    gf.click("xpath", notnowbtn);
		    gf.sleep(1000);
		    /*Verification of View Plans tab*/
		    gf.click("xpath", viewplan);
		    gf.sleep(2000);
		    gf.back();
		    
			}
	public void negativetestcaseofProfilePage() throws IOException, AWTException
	{      gf.implicitwait(20);
           String optionmenue=p.getProperty("dashboard.text.optionmenue");
		   String visitprofile=p.getProperty("dashboard.text.visitprofile");
	       String editprofile=p.getProperty("profile.text.edit");
	       String compname=p.getProperty("profile.text.compname");
	       String savechanges=p.getProperty("profile.text.savechanges");
	       String comperrormsg=p.getProperty("profile.text.compalertmsg");
	       String adminname=p.getProperty("profile.text.adminname");
	       String compadminerrormsg=p.getProperty("profile.text.copmadmin");
	       String contactno=p.getProperty("profile.text.contactNo");
	       String contactnoerrormsg=p.getProperty("profile.text.contactnoerrormsg");
	       String address=p.getProperty("profile.text.address");
	       String addresserrormsg=p.getProperty("profile.text.addresserrormsg");	
	       String zipcode=p.getProperty("profile.text.zipcode");
	       String zipcodeerrormsg=p.getProperty("profile.text.zipcodeterrormsg");
	       String toastmsg=p.getProperty("profile.text.toastmsg");
	       String addcard=p.getProperty("profile.text.addcard");
		   String cardname=p.getProperty("profile.text.cardname");
		   String cardno=p.getProperty("profile.text.16-digitno");
		   String cvv=p.getProperty("profile.text.cvv");
		   String bilAdd=p.getProperty("profile.text.biaddres");
		   String notnow=p.getProperty("profile.text.notnow");
		   ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
		   String companyname=xcel.getCellData("profilepage", 1, 0);
		   String AdminName=xcel.getCellData("profilepage", 1,1);
		   String ContactNo=xcel.getCellData("profilepage", 1,2);
		   String Addresses=xcel.getCellData("profilepage", 1,3);
		   String ZipCode=xcel.getCellData("profilepage", 1,4);
		   String CardName=xcel.getCellData("profilepage", 1,5);
		   String CardNumber=xcel.getCellData("profilepage", 1,6);
		   String CVV=xcel.getCellData("profilepage", 1,7);
		   String Billingaddress=xcel.getCellData("profilepage", 1,8);
		   gf.click("xpath",optionmenue);
		   gf.sleep(2000);
		   gf.click("xpath",visitprofile);
		   gf.sleep(2000);
		   gf.click("xpath",editprofile); 
		   gf.sleep(2000);
		   gf.keyboardBackSpace("cssSelector",compname,(Keys.ENTER.BACK_SPACE),4);
		   gf.sleep(2000);
		   gf.click("xpath",savechanges);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",comperrormsg);
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",compname,companyname);
		   gf.sleep(2000);
		   gf.keyboardBackSpace("cssSelector",adminname,(Keys.ENTER.BACK_SPACE),10);
		   gf.click("xpath",savechanges);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",compadminerrormsg);
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",adminname,AdminName);
		   gf.sleep(2000);
		   gf.keyboardBackSpace("cssSelector",contactno,Keys.ENTER.BACK_SPACE,10);
		   gf.click("xpath",savechanges);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",contactnoerrormsg);
		   gf.sendKeys("cssSelector",contactno,ContactNo);
		   gf.sleep(2000);
		   gf.keyboardBackSpace("cssSelector",address,Keys.ENTER.BACK_SPACE,12);
		   gf.click("xpath",savechanges);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",addresserrormsg);
		   gf.sendKeys("cssSelector",address,Addresses);
		   gf.keyboardBackSpace("cssSelector",zipcode,Keys.ENTER.BACK_SPACE,12);
		   gf.click("xpath",savechanges);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",zipcodeerrormsg);
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",zipcode, ZipCode);
		   gf.click("xpath",savechanges);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",toastmsg);
		   gf.sleep(2000);
		   gf.refreshBrowser(); 
		   gf.sleep(2000);
		  /*Negative test case of card page */ /*Incorrect appearance of Card updation message */
		   gf.click("xpath", addcard);
		   gf.sleep(1000);
		   gf.sendKeys("cssSelector",cardname,CardName);
		   gf.sleep(1000);
		   gf.sendKeys("cssSelector",cardno,CardNumber);
		   gf.keyboardtab(1);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.keyboardDown(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.keyboardtab(1);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
	       gf.keyboardDown(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",cvv, CVV);
	       gf.sleep(1000);
	       gf.sendKeys("cssSelector",bilAdd,Billingaddress);
	       gf.sleep(2000);
	       gf.click("xpath",notnow);
	       gf.sleep(2000);
	       /* User (Admin) can view profile picture name inside image logo*/
	       String profileimage=p.getProperty("profile.text.profileimage");
	       gf.mousemorehover("xpath", profileimage);
	       gf.sleep(3000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_20");
	       gf.sleep(2000);
	       /*User (Admin) cannot update ZIP Code field with character having First character as blanked space inside Profile Info*/
	       gf.click("xpath",editprofile);
	       gf.cleartext("cssSelector",zipcode);
	       gf.sleep(1000);
	       gf.space("cssSelector",zipcode,Keys.SPACE);
	       gf.sendKeys("cssSelector",zipcode,ZipCode);
	       gf.sleep(1000);
           gf.click("xpath", savechanges);	       
	       gf.sleep(1000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_49");
	       gf.sleep(2000);
	       /*Card Details must not be added before clicking the Add Card tab */
	       gf.click("xpath",addcard);
	       gf.sleep(1000);
	       gf.sendKeys("cssSelector",cardname,CardName);
		   gf.sleep(1000);
		   gf.sendKeys("cssSelector",cardno,CardNumber);
		   gf.keyboardtab(1);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.keyboardDown(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.keyboardtab(1);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
	       gf.keyboardDown(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",cvv, CVV);
	       gf.sleep(1000);
	       gf.sendKeys("cssSelector",bilAdd,Billingaddress);
	       gf.sleep(2000);
	       gf.refreshBrowser();
	       gf.sleep(1000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","profilepageshouldbeappear");
	       gf.sleep(2000);
	       /* Card Details must not be added incase of navigation from the web page */
	       gf.click("xpath",addcard);
	       gf.sleep(1000);
	       gf.sendKeys("cssSelector",cardname,CardName);
		   gf.sleep(1000);
		   gf.sendKeys("cssSelector",cardno,CardNumber);
		   gf.keyboardtab(1);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.keyboardDown(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.keyboardtab(1);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
	       gf.keyboardDown(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.sendKeys("cssSelector",cvv, CVV);
	       gf.sleep(1000);
	       gf.sendKeys("cssSelector",bilAdd,Billingaddress);
	       gf.sleep(2000);
	       gf.back();
	       gf.sleep(2000);
	       gf.forword();
	       gf.sleep(3000);
	       /*Verification of Name of the Card field inside Card Details */
	       String cardnameAsNumber=xcel.getCellData("profilepage", 1,9);
	       String cardnumberabove16digit=xcel.getCellData("profilepage", 1,10);
	       gf.click("xpath",addcard);
	       gf.sleep(1000);
	       gf.sendKeys("cssSelector",cardname,cardnameAsNumber);
		   gf.sleep(1000);
		   /* Card no.field should not be accepts numerical digits that are out of range as of (16) */
		   gf.sendKeys("cssSelector",cardno,cardnumberabove16digit);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_72");
		   gf.sleep(1000);
		   /*Card no. field should not be accepts characters value */
		   String cardnumberAsChar=xcel.getCellData("profilepage", 1,11);
		   gf.cleartext("cssSelector", cardno);
		   gf.sendKeys("cssSelector",cardno,cardnumberAsChar);
		   gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_74");
		   gf.sleep(1000);
		   /*CVV must not accepts invalid numerical digits */
		   gf.sendKeys("cssSelector",cvv, CVV);
	       gf.sleep(1000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_80");
	       gf.sleep(1000);
	       /*Billing Address field must not accepts only special character*/
	       String specialcharofbillingaddressing=xcel.getCellData("profilepage", 2,8);
	       gf.sendKeys("cssSelector",bilAdd,specialcharofbillingaddressing);
	       gf.sleep(1000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_93");
	       gf.sleep(2000);
	       /*Billing Address field must not accepts only numerical character*/
	       gf.cleartext("cssSelector",bilAdd);
	       String BillingaddresscheckwithDigitNo=xcel.getCellData("profilepage", 3,8);
	       gf.sendKeys("cssSelector",bilAdd,BillingaddresscheckwithDigitNo);
	       gf.sleep(1000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_94");
	       /*Billing Address field must not accepts only space character*/
	       gf.sleep(2000);
	       gf.cleartext("cssSelector",bilAdd);
	       gf.space("cssSelector",bilAdd,Keys.SPACE);
	       gf.space("cssSelector",bilAdd,Keys.SPACE);
	       gf.sleep(1000);
	       gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","PP_95");
	       gf.sleep(2000);
		   gf.click("xpath",notnow);
		   
		   
	        }
    public void uploadcontent() throws AWTException, IOException
	{      gf.implicitwait(20);
		   String newcompain=p.getProperty("upload.text.newcompain");
		   String compname=p.getProperty("upload.text.compname");
		   String video=p.getProperty("upload.text.video");
		   String testtype=p.getProperty("upload.text.testtype");
		   String category=p.getProperty("upload.text.category");
		   String subcategory=p.getProperty("upload.text.subcategory");
		   String next=p.getProperty("upload.text.next");
		   String toastmsg=p.getProperty("upload.text.toastmsg");
		   String previous=p.getProperty("upload.text.previous");
		   String addmore=p.getProperty("upload.text.addmore");
		   String browsefile=p.getProperty("upload.text.browsefiles");
		   ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
	       String compaignname=xcel.getCellData("uploadcontent", 1, 0);
	       gf.gettextofwebelement("xpath",newcompain);
		   gf.sleep(2000);
		   gf.click("xpath",newcompain);
		   gf.sleep(3000);
		   gf.sendKeys("cssSelector",compname,compaignname);
		   gf.sleep(2000);
		   gf.click("xpath",browsefile);
		   gf.sleep(3000);
		   gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
		   gf.sleep(5000);
		   /*Play/pause icon inside asset video frame should be working fine in the Create Campaign of Step1: Upload Content  */
		   gf.click("xpath",video);
		   gf.sleep(3000);
		   gf.click("xpath",video);
		   gf.sleep(3000);
		   gf.KeyboardEnter(1);
		   gf.sleep(3000);
		   gf.click("xpath",testtype);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(3000);
		   gf.click("xpath",category);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(3000);
		   gf.click("xpath",subcategory);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
	       /*Need to add thumbnail Here*/
		   gf.sleep(3000);
		   gf.click("xpath",next);
		   gf.sleep(5000);
		   String toastmessage=xcel.getCellData("uploadcontent", 1, 1);
		   String modifycompaigname=xcel.getCellData("uploadcontent", 1, 3);
		   String cmpname=p.getProperty("upload.text.cmpname");
		   gf.getTextmsg("xpath",toastmsg,toastmessage);
		   gf.sleep(3000);
		   gf.click("xpath",previous);
		   gf.sleep(3000);
		   gf.cleartext("xpath",cmpname);
		   gf.sleep(1000);
		   gf.sendKeys("cssSelector",compname,modifycompaigname);
		   gf.sleep(2000);
		   gf.click("xpath",addmore);
		   gf.sleep(4000);
	       /*uploading second video*/
		   gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
		   gf.sleep(5000);
		   gf.click("xpath",video);
		   gf.sleep(3000);
		   gf.KeyboardEnter(1);
		   gf.sleep(3000);
		   gf.click("xpath",testtype);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
           gf.sleep(3000);
		   gf.click("xpath",category);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
	       gf.sleep(3000);
		   gf.click("xpath",subcategory);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(3000);
	   	   gf.click("xpath",next);
		   gf.sleep(4000);
		   gf.getTextmsg("xpath",toastmsg,"File uploaded successfully!");
		   gf.sleep(3000);
		   gf.click("xpath",previous);
		   String firstthumbnail=p.getProperty("upload.text.firstthumbnail");
		   String secondthumbnail=p.getProperty("upload.text.secondthumbnail");
		   gf.sleep(3000);
		   gf.click("xpath",addmore);
		   gf.sleep(4000);
		   gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
		   gf.sleep(10000);
		   gf.mousemorehover("xpath",firstthumbnail);
		   gf.sleep(1000);
		   gf.click("xpath",firstthumbnail);
		   gf.sleep(1000);
		   gf.mousemorehover("xpath",secondthumbnail);
           gf.sleep(1000);
           gf.click("xpath",secondthumbnail);
           gf.sleep(1000);
           gf.mousemorehover("xpath",firstthumbnail);
		   gf.sleep(1000);
		   gf.click("xpath",firstthumbnail);
		   gf.sleep(1000);
           gf.mousemorehover("xpath",firstthumbnail);
		   gf.sleep(1000);
		   gf.click("xpath",firstthumbnail);
           gf.sleep(3000);
            gf.click("xpath",video);
		   gf.sleep(5000);
           String cameraalt=p.getProperty("upload.text.cameraalt");
           String cancelbtn=p.getProperty("uploadt.text.cancelsbtn");
           String nextsbtn=p.getProperty("upload.text.nextsbtn");
           gf.click("xpath", cameraalt);
		   gf.sleep(2000);
		   gf.click("xpath",cancelbtn);
		   gf.sleep(3000);
		   gf.click("xpath",nextsbtn);
		   
		   }
	public void NegativeTestCaseofUploadContent() throws AWTException, IOException
	{      gf.implicitwait(20);
		   String newcompain=p.getProperty("upload.text.newcompain");
		   String compname=p.getProperty("upload.text.compname");
		   String comptype=p.getProperty("upload.text.comptype");
		   String comperrormsg=p.getProperty("upload.text.comperrormsg");
		   String title=p.getProperty("upload.text.title");
		   String next=p.getProperty("upload.text.next");
           String toast=p.getProperty("upload.text.toastm");
           String brows=p.getProperty("upload.text.browsbtn");
           String er=p.getProperty("upload.text.ms");
           String multipleerrormsg=p.getProperty("upload.text.multifileerror");
           String subcat=p.getProperty("upload.text.subcategory");
           String category=p.getProperty("upload.text.categary");
           ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
	       String compaignname=xcel.getCellData("uploadcontent", 1, 2);
	       String Dashboardlink=p.getProperty("upload.text.dashboard");
	       /* Verify cancel button is working fine during upload process */
	       gf.gettextofwebelement("xpath",newcompain);
		   gf.sleep(3000);
		   gf.click("xpath",newcompain);
		   gf.sleep(3000);
		   gf.sendKeys("cssSelector",compname, compaignname);
		   gf.sleep(3000);
		   gf.click("xpath",brows);
		   gf.sleep(3000);
		   gf.keyboardtab(3);
		   gf.sleep(3000);
		   gf.KeyboardEnter(1);	
		   gf.sleep(3000);
		   gf.back(); 
		  /*Name should not be blank value */
		   gf.sleep(3000);
		   gf.click("xpath",newcompain);
		   gf.sleep(3000);
		   gf.click("cssSelector",comptype);
		   gf.sleep(2000);
		   gf.KeyboardEnter(1);
		   gf.sleep(3000);
		   gf.click("xpath",brows);
		   gf.sleep(3000);
		   gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
		   gf.sleep(5000);
		   gf.cleartext("cssSelector",title);
		   gf.sleep(3000);
		   String titles=xcel.getCellData("uploadcontent", 1, 4);
		   gf.sendKeys("cssSelector",title,titles);
		   gf.sleep(3000);
		   gf.keyboardtab(1);
		   gf.sleep(2000);	
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.keyboardtab(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(2000);
		   gf.keyboardtab(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(3000);
		   gf.click("xpath",next);
		   gf.sleep(3000);
		   gf.gettextofwebelement("xpath",toast);
		   gf.sleep(2000);
		   gf.gettextofwebelement("xpath",comperrormsg);
		   gf.sleep(3000);
		   gf.back();
		   gf.sleep(5000); 
	       /* Verification of uploading .mp4 file */
		   gf.click("xpath",newcompain);
		   gf.sleep(3000);
	       gf.click("xpath",brows);
		   gf.sleep(4000);
		   gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\exceldata.exe");
		   gf.sleep(3000);
		   gf.gettextofwebelement("xpath",er);
		   gf.sleep(3000);
		   gf.back();
		   gf.sleep(3000); 
	       /*Verification of multiple upload of .mp4 files  */
           gf.click("xpath",newcompain);
           gf.sleep(3000);
           String cmpname=xcel.getCellData("uploadcontent", 1, 5);
    	   gf.sendKeys("cssSelector",compname,cmpname);
		   gf.sleep(2000);
		   gf.click("xpath",brows); 
		   gf.sleep(3000);
		   gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\videofile\\multiple.exe");
	       gf.sleep(2000);
	       gf.gettextofwebelement("xpath",multipleerrormsg);
	       gf.sleep(3000);
	       gf.back();
	       gf.sleep(5000); 
	       /*Verification of Drop down*/
	       String cancelbtn=p.getProperty("upload.text.cancelbtn");
           gf.click("xpath",newcompain);
           gf.sleep(3000);
    	   gf.sendKeys("cssSelector",compname,cmpname);
		   gf.sleep(2000);
		   gf.click("xpath",brows); 
		   gf.sleep(3000);
		   gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
	       gf.sleep(5000);
		   gf.cleartext("cssSelector",title);
		   gf.sleep(3000);
		   gf.sendKeys("cssSelector",title,titles);
		   gf.sleep(2000);
		   gf.keyboardtab(1);
		   gf.sleep(1000);	
		   gf.KeyboardEnter(1);
	       gf.sleep(1000);
	       gf.keyboardDown(1);
	       gf.sleep(2000);
	       gf.KeyboardEnter(1);
		   gf.sleep(3000);
		   gf.click("xpath",subcat);
		   /* Verification of Title*/
		   gf.click("xpath", category);
		   gf.sleep(1000);
		   gf.keyboardDown(1);
		   gf.sleep(1000);
		   gf.KeyboardEnter(1);
		   gf.sleep(1000);
		   gf.keyboardtab(1);
           gf.sleep(2000);
           gf.KeyboardEnter(1);
           gf.sleep(1000);
           gf.keyboardDown(1);
           gf.sleep(1000);
           gf.KeyboardEnter(1);
           gf.sleep(3000);
           /*Cancel tab should be getting highlighted as per user selection*/
           gf.mousemorehover("xpath", cancelbtn);
           gf.sleep(1000);
           gf.click("xpath",next);
           gf.sleep(4000);
           gf.click("xpath", Dashboardlink);
           gf.sleep(4000);
           String compnamemustaString=p.getProperty("upload.text.thacompaignnamemustaString");
           gf.click("xpath",newcompain);
           gf.sleep(3000);
           gf.space("cssSelector",compname,Keys.SPACE);
           gf.sleep(4000);
           gf.gettextofwebelement("xpath", compnamemustaString);
           /*Campaign Name field should be clear while reloading the web page */
           gf.sendKeys("cssSelector",compname, compaignname);
           gf.sleep(1000);
           gf.refreshBrowser();
           gf.sleep(3000);
           gf.screenshot("C:\\Users\\ASTR-34\\Desktop\\files\\trialplanscreenshot\\ss","UACC_11");
           
           
	       }
	public void configureAudience() throws AWTException, IOException
	{    gf.implicitwait(20);
		 String newcompain=p.getProperty("upload.text.newcompain");
		 String compname=p.getProperty("upload.text.compname");
		 String video=p.getProperty("upload.text.video");
		 String testtype=p.getProperty("upload.text.testtype");
		 String category=p.getProperty("upload.text.category");
		 String next=p.getProperty("upload.text.next");
		 String toastmsg=p.getProperty("upload.text.toastmsg");
		 String nail=p.getProperty("config.text.nail");
		 String title=p.getProperty("upload.text.title");
		 String brows=p.getProperty("upload.text.browsbtn");
		 String states=p.getProperty("config.text.states");
		 String quota=p.getProperty("config.text.quotaconfig");
		 String createquotabtn=p.getProperty("config.text.crequota");
		 String saveandcontinuebtn=p.getProperty("config.text.saveandcon");
		 String previous=p.getProperty("config.text.previous");
		 String like=p.getProperty("config.text.Like");
		 String Love=p.getProperty("config.text.Love");
		 String Want=p.getProperty("config.text.want");
		 String memorable=p.getProperty("config.text.memorable");
		 String Boring=p.getProperty("config.text.boring");
		 String backicon=p.getProperty("config.text.backicon");
		 String configureprogressbarname=p.getProperty("config.text.configureprogressbar");
		 String uploadcontentnextbtn=p.getProperty("config.text.uploadcontentnextbtn");
		/*User (Admin) must configure the campaign content  by choosing appropriate options */
		gf.gettextofwebelement("xpath",newcompain);
		gf.sleep(2000);
		gf.click("xpath",newcompain);
		gf.sleep(3000);
		gf.sendKeys("cssSelector",compname,"Config Content");
		gf.sleep(2000);
	    gf.click("xpath",brows);
	    gf.sleep(3000);
	    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
		gf.sleep(5000);
		gf.click("xpath",video);
		gf.sleep(3000);
		gf.KeyboardEnter(1);
		gf.sleep(3000);
		gf.cleartext("cssSelector",title);
		gf.sleep(3000);
		gf.sendKeys("cssSelector",title,"RDM");
		gf.sleep(2000);
		gf.click("xpath",testtype);
		gf.sleep(2000);
		gf.KeyboardEnter(1);
		gf.sleep(3000);
		gf.click("xpath",category);
		gf.sleep(2000);
		gf.KeyboardEnter(1);
		gf.sleep(2000);
        gf.keyboardtab(1);
        gf.sleep(1000);
        gf.KeyboardEnter(1);
        gf.sleep(1000);
        gf.keyboardDown(1);
        gf.sleep(1000);
        gf.KeyboardEnter(1);
		gf.sleep(2000);
		gf.click("xpath",nail);
	    /* Need to add thumbnail Here*/
		gf.sleep(3000);
		gf.click("xpath",next);
		gf.sleep(3000);
		gf.gettextofwebelement("xpath",toastmsg);
		gf.sleep(2000);
		gf.gettextofwebelement("xpath",configureprogressbarname);
		gf.click("xpath",previous);
		gf.sleep(3000);
		gf.click("xpath",uploadcontentnextbtn);
	    gf.sleep(5000);
	    gf.click("xpath", states);
		gf.sleep(2000);
		gf.keyboardUp(2);
		gf.sleep(2000);
		gf.KeyboardEnter(1);
		gf.sleep(3000);
		gf.click("xpath", quota);
		gf.sleep(3000);
		gf.click("xpath",createquotabtn);
		gf.sleep(4000);
		gf.click("xpath",saveandcontinuebtn);
		gf.sleep(3000);
		gf.click("xpath", previous);
		gf.sleep(5000);
		gf.click("xpath",like);
		gf.sleep(2000);
		gf.click("xpath",Love);
		gf.sleep(2000);
		gf.click("xpath",Want);
		gf.sleep(2000);
		gf.click("xpath",memorable);
		gf.sleep(2000);
		gf.click("xpath",Boring);
		gf.sleep(3000);
		gf.click("xpath", states);
		gf.sleep(2000);
		gf.keyboardUp(2);
		gf.sleep(2000);
		gf.KeyboardEnter(1);
		/*gf.sleep(3000);
		gf.click("xpath", quota);
		gf.sleep(3000);
		gf.click("xpath",createquotabtn); */
		gf.sleep(4000);
		gf.click("xpath",saveandcontinuebtn);
		gf.sleep(3000);
		gf.click("xpath", previous);
		gf.sleep(3000);
		/*User (Admin) must configure the campaign content by choosing both conscious Input (Positive as well as negative)  */
		gf.click("xpath",backicon);
		gf.sleep(2000);
		gf.click("xpath",like);
		gf.sleep(2000);
		gf.click("xpath",Love);
		gf.sleep(2000);
		gf.click("xpath",Want);
		gf.sleep(2000);
		gf.click("xpath",memorable);
		gf.sleep(2000);
		gf.click("xpath",Boring);
		gf.sleep(3000);
		gf.click("xpath", states);
		gf.sleep(2000);
		gf.keyboardUp(2);
		gf.sleep(2000);
		gf.KeyboardEnter(1);
		gf.sleep(4000);
		gf.click("xpath",saveandcontinuebtn);
        }
	public void negativeTestCaseofConfigureAudience() throws IOException, AWTException
	{       gf.implicitwait(20);
		    String newcompain=p.getProperty("upload.text.newcompain");
		    String compname=p.getProperty("upload.text.compname");
		    String video=p.getProperty("upload.text.video");
		    String testtype=p.getProperty("upload.text.testtype");
		    String category=p.getProperty("upload.text.category");
		    String next=p.getProperty("upload.text.next");
		    String toastmsg=p.getProperty("upload.text.toastmsg");
		    String nail=p.getProperty("config.text.nail");
		    String title=p.getProperty("upload.text.title");
		    String brows=p.getProperty("upload.text.browsbtn");
		    String states=p.getProperty("config.text.states");
		    String quota=p.getProperty("config.text.quotaconfig");
		    String createquotabtn=p.getProperty("config.text.crequota");
		    String saveandcontinuebtn=p.getProperty("config.text.saveandcon");
		    String like=p.getProperty("config.text.Like");
		    String Love=p.getProperty("config.text.Love");
		    String Want=p.getProperty("config.text.want");
		    String memorable=p.getProperty("config.text.memorable");
		    String Boring=p.getProperty("config.text.boring");
		    String emotion=p.getProperty("config.text.emotion");
            String errorm=p.getProperty("config.text.errorm");
		    String positive=p.getProperty("config.text.possitive");
		    String engaging=p.getProperty("config.text.engaing");
		    String accurate=p.getProperty("config.text.accurate");
		    String possitivesubconcious=p.getProperty("config.text.possitiveconscious");
		    String dislike=p.getProperty("config.text.dislike");
		    String confusing=p.getProperty("config.text.confusing");
		    String misleading=p.getProperty("config.text.misleading");
		    gf.gettextofwebelement("xpath",newcompain);
			gf.sleep(2000);
			gf.click("xpath",newcompain);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",compname,"Demo");
			gf.sleep(2000);
		    gf.click("xpath",brows);
			gf.sleep(3000);
			gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
			gf.sleep(5000);
			gf.click("xpath",video);
			gf.sleep(3000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.cleartext("cssSelector",title);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",title,"RD");
			gf.sleep(2000);
			gf.click("xpath",testtype);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.click("xpath",category);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
	        gf.keyboardtab(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(1000);
	        gf.keyboardDown(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",nail);
		   /*Need to add thumbnail Here*/
			gf.sleep(3000);
			gf.click("xpath",next);
			gf.sleep(3000);
			gf.gettextofwebelement("xpath",toastmsg);
			gf.sleep(5000);
			gf.click("xpath",like);
			gf.sleep(2000);
			gf.click("xpath",Love);
			gf.sleep(2000);
			gf.click("xpath",Want);
			gf.sleep(2000);
			gf.click("xpath",memorable);
			gf.sleep(2000);
			gf.click("xpath",Boring);
			gf.sleep(2000);
			gf.click("xpath", emotion);
			gf.sleep(3000); 
			gf.gettextofwebelement("xpath",errorm);
			/* Verification of Positive conscious input*/
			gf.sleep(3000);
			gf.click("xpath",like);
			gf.sleep(2000);
			gf.click("xpath",Love);
			gf.sleep(2000);
			gf.click("xpath",Want);
			gf.sleep(2000);
			gf.click("xpath",memorable);
			gf.sleep(3000);
			gf.gettextofwebelement("xpath", positive); 
			/* User (Admin) unable to configure the campaign, Incase he choose all positive consicous input */
			gf.sleep(2000);
			gf.click("xpath",engaging);
			gf.sleep(2000);
			gf.click("xpath",accurate);
			gf.sleep(3000);
			gf.gettextofwebelement("xpath",possitivesubconcious);
		   /*Verification of Negative conscious input*/
			gf.sleep(3000);
			gf.click("xpath",like);
			gf.sleep(2000);
			gf.click("xpath",Love);
			gf.sleep(2000);
			gf.click("xpath",Want);
			gf.sleep(2000);
			gf.click("xpath",memorable);
			gf.sleep(2000);
			gf.click("xpath",engaging);
			gf.sleep(2000);
			gf.click("xpath",accurate);
			gf.sleep(2000);
			gf.click("xpath",Boring);
			gf.sleep(1000);
			gf.gettextofwebelement("xpath",possitivesubconcious); 
			/*Verification of possible combination in postive and negative conscious input*/
			gf.click("xpath",dislike);
			gf.sleep(2000);
            gf.click("xpath",confusing); 
            gf.sleep(2000);
            gf.click("xpath", misleading);
            gf.sleep(2000);
            gf.click("xpath",like);
			gf.sleep(2000);
			gf.click("xpath",Love); 
			/*User (Admin) cannot configure the campaign, Incase he choose less than and equal to (<= 3) of positive consicous input and less than and equal to (<= 2) negative input */
			gf.sleep(2000);
			gf.click("xpath",Want);
			gf.sleep(2000);
            gf.click("xpath",confusing); 
            gf.sleep(2000);
            gf.click("xpath", misleading);
            gf.sleep(2000); 
            /*User (Admin) cannot configure the campaign, Incase he choose less than and equal to (<= 4) but greater than and equal
              to (>= 3) of positive consicous input and less than and equal to (<= 4) but greater than and equal to (>= 3) negative input */
			gf.click("xpath",confusing); 
            gf.sleep(2000);
            gf.click("xpath", misleading);
            gf.sleep(1000);
            gf.gettextofwebelement("xpath",possitivesubconcious); 
            /*User (Admin) unable to configure the campaign, Incase he choose all positive & negative consicous input */
            gf.sleep(2000);
			gf.click("xpath",memorable);
			gf.sleep(2000);
			gf.click("xpath",engaging);
			gf.sleep(2000);
			gf.click("xpath",accurate);
			gf.sleep(1000);
	        gf.gettextofwebelement("xpath",possitivesubconcious);
	        gf.sleep(3000);  
	        /*Verification of country drop down  Inside Configure page, Select subconscious input,  3 positive & 2 negative conscious input*/
	        gf.click("xpath",like);
			gf.sleep(2000);
			gf.click("xpath",Love);
			gf.sleep(2000);
			gf.click("xpath",Want);
			gf.sleep(2000);
		    gf.click("xpath",confusing); 
	        gf.sleep(2000);
	        gf.click("xpath", misleading);
	        gf.sleep(1000);   
	        gf.click("xpath", states);
			gf.sleep(2000);
			gf.keyboardUp(1);
			gf.sleep(1000);
			gf.keyboardUp(1);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.sleep(3000); 
		    /*Verification of Error Message , Inside Configure page, select no inputs and no emotions*/
			gf.click("xpath",memorable);
			gf.sleep(2000);
			gf.click("xpath",engaging);
			gf.sleep(2000);
			gf.click("xpath",accurate);
			gf.sleep(1000);
			gf.click("xpath",Boring);
			gf.sleep(1000);
			gf.click("xpath",dislike);
			gf.sleep(2000);
	        gf.gettextofwebelement("xpath",possitivesubconcious);
	        gf.sleep(3000);
	        String quotetoastmsg=p.getProperty("config.text.quotetoastmsg");
	        String emailsviewers=p.getProperty("config.text.emailsviewers");
	        /*Verification of Choose Quota, Inside Configure page, Select subconscious input,  3 positive & 2 negative conscious input */
	        gf.click("xpath",like);
			gf.sleep(2000);
			gf.click("xpath",Love);
			gf.sleep(2000);
			gf.click("xpath",Want);
			gf.sleep(1000);
			gf.click("xpath",Boring);
			gf.sleep(1000);
			gf.click("xpath",dislike);
			gf.sleep(2000);
			gf.click("xpath",quota);
			gf.sleep(2000);
			gf.click("xpath",createquotabtn);
			gf.sleep(3000);
			gf.gettextofwebelement("xpath",quotetoastmsg); 
		    /*User (Admin) can choose Having emails of viewers Quota,Choose the type of quota as per User (Admin)'s requirement say "Having emails of viewers */
			String QuotaDeleteicon=p.getProperty("config.text.quotadeleteicon");
			String typeemails=p.getProperty("config.text.typemails");
			String emailsavebtn=p.getProperty("config.text.save");
			String clear=p.getProperty("config.text.clear");
			//String dialogbtn=p.getProperty("config.text.deletdilogbtn");
			String downloadsam=p.getProperty("config.text.downloadsample");
			gf.sleep(3000);
			gf.click("xpath", QuotaDeleteicon);
			gf.sleep(1000);
			gf.keyboardtab(1);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",emotion);
			gf.sleep(1000);
			gf.click("xpath",dislike); 
			gf.sleep(1000); 
            gf.click("xpath",memorable);
            gf.sleep(2000);
            gf.click("xpath",emailsviewers);
        	gf.sleep(2000);
			gf.click("xpath",createquotabtn);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",typeemails,"raj@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"raju@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"rajuk@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"rajuku@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"rajukum@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.click("xpath",emailsavebtn);
			/*User (Admin) can clear the list of email, Incase its not required */
			gf.sleep(2000);
			gf.click("xpath",clear);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			/*User (Admin) can cancel the process of clearing the list of email, Incase if it's required */ 
			gf.sleep(3000);
			gf.sendKeys("cssSelector",typeemails,"raj@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"raju@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"rajuk@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"rajuku@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.sendKeys("cssSelector",typeemails,"rajukum@mailinator.com");
			gf.keyboardSpace(1);
			gf.sleep(2000);
			gf.click("xpath",emailsavebtn);
			/*gf.sleep(2000);
			gf.click("xpath",clear);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000); */
			gf.click("xpath",saveandcontinuebtn);
			gf.sleep(3000);
			/*Download sample link should working fine*/
			gf.click("xpath",downloadsam);
			gf.sleep(3000);
			String emailsbcakicon=p.getProperty("config.text.emailsbackicon");
			String updatequota=p.getProperty("config.text.updatequota");
			String AddQuota=p.getProperty("config.text.addQuota");
			String eyetracking=p.getProperty("config.text.eyetrackin");
			String plannotsuported=p.getProperty("config.text.plannotsuported");
			String infomation=p.getProperty("config.text.information");
			String erromsgpfplan=p.getProperty("config.text.erromsofplan");
			String configuretargets=p.getProperty("config.text.configuretargets");
			gf.click("xpath",emailsbcakicon);
			/**/
			gf.sleep(3000);
			gf.click("xpath",eyetracking);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", plannotsuported);
			gf.sleep(3000);
			gf.click("xpath",infomation);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", erromsgpfplan);
			gf.sleep(3000);
			gf.click("xpath",configuretargets);
			gf.sleep(2000);
			gf.click("xpath",updatequota);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", AddQuota);
			/*  */
			
			
			
			} 
    public void ConfigurePreSurve() throws AWTException, IOException 
    {       gf.implicitwait(20);
		    String newcompain=p.getProperty("upload.text.newcompain");
		    String compname=p.getProperty("upload.text.compname");
		    String video=p.getProperty("upload.text.video");
		    String testtype=p.getProperty("upload.text.testtype");
		    String category=p.getProperty("upload.text.category");
		    String next=p.getProperty("upload.text.next");
		    String toastmsg=p.getProperty("upload.text.toastmsg");
		    String nail=p.getProperty("config.text.nail");
		    String title=p.getProperty("upload.text.title");
		    String brows=p.getProperty("upload.text.browsbtn");
		    String states=p.getProperty("config.text.states");
		    String quota=p.getProperty("config.text.quotaconfig");
		    String createquotabtn=p.getProperty("config.text.crequota");
		    String saveandcontinuebtn=p.getProperty("config.text.saveandcon");
		    String emotion=p.getProperty("config.text.emotion");
		    String dislike=p.getProperty("config.text.dislike");
		    String previous=p.getProperty("config.text.previous");
		/*It should navigate to Step 3: Configure Pre-Survey from Step 2: Configure  */
		    gf.gettextofwebelement("xpath",newcompain);
			gf.sleep(2000);
			gf.click("xpath",newcompain);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",compname,"RDM");
			gf.sleep(2000);
		    gf.click("xpath",brows);
			gf.sleep(3000);
			gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
			gf.sleep(5000);
			gf.click("xpath",video);
			gf.sleep(3000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.cleartext("cssSelector",title);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",title,"RDM");
			gf.sleep(2000);
			gf.click("xpath",testtype);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.click("xpath",category);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
	        gf.keyboardtab(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(1000);
	        gf.keyboardDown(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",nail);
            gf.sleep(3000);
			gf.click("xpath",next);
			gf.sleep(3000);
			gf.gettextofwebelement("xpath",toastmsg);
			gf.sleep(5000);
			gf.click("xpath",emotion);
			gf.sleep(2000);
			gf.click("xpath",dislike);
			gf.sleep(2000);
			gf.click("xpath", states);
			gf.sleep(2000);
			gf.keyboardUp(2);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.click("xpath", quota);
			gf.sleep(3000);
			gf.click("xpath",createquotabtn);
			gf.sleep(4000);
			gf.click("xpath",saveandcontinuebtn);
			/*Verify Configure Page navigation for selecting audience input to capture */
		    gf.sleep(2000);
		    gf.click("xpath", previous);
		    /*Verification of adding questions that comes under part of Pre-Survey */
		    String all=p.getProperty("per.text.all");
		    String addnext=p.getProperty("pre.text.addnext");
		    String qadded=p.getProperty("pre.text.qadded");
		    String customemsg=p.getProperty("pre.text.customemsg");
		    String singlechoice=p.getProperty("pre.text.singlechoice");
		    String typeyourquestion=p.getProperty("pre.text.typeyourquestion");
		    String answers1=p.getProperty("pre.text.answer1");
		    String answer2=p.getProperty("pre.text.answer2");
		    String answer3=p.getProperty("pre.text.answer3");
		    String save=p.getProperty("pre.text.save");
		    String nextbtn=p.getProperty("pre.text.next");
		    gf.sleep(2000);
			gf.click("xpath",saveandcontinuebtn);
			gf.sleep(200);
			gf.click("xpath",all);
			gf.sleep(2000);
			gf.click("xpath",addnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", qadded);
			gf.sleep(1000);
			gf.gettextofwebelement("xpath",customemsg);
			gf.sleep(2000);
		    gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"how many states in india");
		    gf.sendKeys("xpath",answers1,"28");
		    gf.sendKeys("xpath",answer2,"30");
		    gf.sendKeys("xpath",answer3,"31");
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
		    gf.click("xpath", nextbtn);
		    gf.sleep(2000);
		    gf.click("xpath",previous);
		    gf.sleep(2000);
		    /*User (Admin) can select all the questions that are present inside Default Questions under Question Palette */
		    String Q1=p.getProperty("pre.text.Q1");
		    String updateandnext=p.getProperty("pre.text.updateandnext");
		    String Q2=p.getProperty("pre.text.Q2");
		    String addyourstatement1=p.getProperty("pre.text.addyourstatement1");
		    String addyourStatement2=p.getProperty("pre.text.addyourstatement");
		    String addyourstatement3=p.getProperty("pre.text.addyoyurstatement3");
		    String Q3=p.getProperty("pre.text.Q3");
		    String errormessage=p.getProperty("pre.text.alerterrormsg");
		    gf.click("xpath", Q1);
		    /*Verification of question text field of the Default Question */
		    gf.click("xpath", updateandnext);
		    gf.sleep(2000);
		    gf.click("xpath",previous);
		    gf.sleep(2000);
		    gf.click("xpath", Q2);
		    gf.sleep(2000);
		    gf.keyboardtab(1);
		    gf.Backspace(10);
		    gf.sleep(2000);
		   /*User (Admin) can modify the content of question in the question text field of the Default Question */
		    gf.sendKeys("xpath",addyourStatement2,"addd");
		    gf.click("xpath",updateandnext);
		    gf.sleep(2000);
		    /*Default Question section navigation,  Even after navigating to Create Custom Question section under Question Palette of  Configure Pre-Survey*/
		    gf.click("xpath",previous);
		    /*User (Admin) make further modification in the question content of the Default Question, Even after navigating to Create Custom Question section  */
		    gf.sleep(3000);
		    gf.click("xpath",Q2);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",addyourStatement2,"addd");
		    gf.click("xpath",updateandnext);
		    gf.sleep(2000);
			gf.gettextofwebelement("xpath", qadded);
			gf.sleep(2000);
			gf.click("xpath",previous);
			gf.sleep(2000);
			gf.sendKeys("xpath",addyourStatement2,"addd");
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.click("xpath",previous);
			/*Question text field of the Default Question must not be empty*/
			gf.click("xpath", Q1);
			gf.sleep(2000);
			gf.keyboardtab(1);
			gf.Backspace(10);
		    gf.sleep(2000);
		    gf.click("xpath", Q2);
			gf.sleep(1000);
			gf.keyboardtab(1);
			gf.Backspace(10);
			gf.sleep(2000);
			gf.click("xpath", Q3);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.click("xpath",updateandnext);
		    gf.gettextofwebelement("xpath", errormessage);
		    gf.sleep(2000);
		    /*As Question text field exceeds certain range of characters, An incorrect text of error message "Query Exception" seems to be getting appear*/
		    String queryException=p.getProperty("pre.text.errormsg");
		    gf.sendKeys("xpath",addyourStatement2,"addd dfgkrjfgkjfkgjfkj sdkfgjkdfjg fdkljkdfjgk ksdjfgkjsdf;gj ;kjsd;fkljg sdfkgj sdfjgksfdj; sdjfgkjsdfg dfgdf sdfhsdjfh sadfjhk sdfjhg sdfgsdh sdfjdhf sdfdfjdf sjdfhsdj sd djkfksdfh sdfgkjd sdfkh sdfjh ssfd  sdfk jsdf jg sdfjkgskd sdjfgksdfk dsfjsdfgj sdfjksdh  fdgfdsg");
		    gf.sleep(2000);
		    gf.click("xpath",updateandnext);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",queryException);
		   /* Verify Configure Pre-Survey Navigation for Create Custom Questions under Question Palette */ 
		    gf.sleep(2000);
		    gf.sendKeys("xpath",addyourstatement1,"First Default Question");
		    gf.cleartext("xpath",addyourStatement2);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",addyourStatement2,"Second Default Question");
		    gf.sendKeys("xpath",addyourstatement3,"Third Default Question");
		    gf.sleep(2000);
		    gf.click("xpath",updateandnext);
           /*It should navigate to Default Questions from Create Custom Question under Question Palette*/
		    gf.sleep(2000);
		    gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"What is your favorite color?");
		    gf.sendKeys("xpath",answers1,"Red");
		    gf.sendKeys("xpath",answer2,"Yellow");
		    gf.sendKeys("xpath",answer3,"Blue");
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
		    gf.click("xpath", singlechoice);
            gf.sleep(2000);
		    gf.click("xpath",previous);
		    gf.sleep(2000);
		    gf.click("xpath",updateandnext);
		    gf.sleep(3000);
		    String deletepreQuestion1=p.getProperty("pre.text.deleteprequestion");
		    String DeleteBtn=p.getProperty("pre.text.deletebtn");
		    String addquestiontoastmsg=p.getProperty("pre.text.savequestiontoastmsg");
		    String DeleteFirstQuestion=p.getProperty("pre.text.deletefirstQuestion");
		    String DeleteSecond=p.getProperty("pre.text.deletefirstQuestion");
		    String postpreviousbtn=p.getProperty("pre.text.postpreviousbtn");
		    /*Verification of creating Custom Question using different type of Add Question*/
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(3000);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.sendKeys("xpath",typeyourquestion,"What is your favorite color?");
		    gf.sendKeys("xpath",answers1,"Red");
		    gf.sendKeys("xpath",answer2,"Yellow");
		    gf.sendKeys("xpath",answer3,"Blue");
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
            gf.gettextofwebelement("xpath",addquestiontoastmsg);
		    /*User (Admin) can add upto min of 0 custom question including from Pre-Survey or Post-Survey */
		    gf.sleep(2000);
		    gf.click("xpath",DeleteFirstQuestion);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath",DeleteSecond);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.click("xpath",nextbtn);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.click("xpath",postpreviousbtn);
		    gf.sleep(3000);
		    /*Create Custom question section should be highlighted against custom questions under Question Palette*/
		    gf.click("xpath",updateandnext);
		    gf.sleep(2000);
		    gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"What is your favorite color?");
		    gf.sendKeys("xpath",answers1,"Red");
		    gf.sendKeys("xpath",answer2,"Yellow");
		    gf.sendKeys("xpath",answer3,"Blue");
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
            gf.gettextofwebelement("xpath",addquestiontoastmsg);
            gf.sleep(2000);
            /*User (Admin) cannot excced the limit of adding max of 2 custom question including from Pre-Survey or Post-Survey */
            String multiplechoice=p.getProperty("pre.text.multiplechoice");
            String multipletypeQ=p.getProperty("pre.text.multipletypeQ");
            String mltanswer1=p.getProperty("pre.text.mltanswer1");
            String mltanswer2=p.getProperty("pre.text.mltanswer2");
            String mltanswer3=p.getProperty("pre.text.mltanswer3");
            String mltanswer4=p.getProperty("pre.text.mltanswer4");
            String plusicon=p.getProperty("pre.text.mltplusicon");
            String mltanswer5=p.getProperty("pre.text.mltanswer5");
            String mltanswer6=p.getProperty("pre.text.mltanswer6");
            String mltanswer7=p.getProperty("pre.text.mltanswer7");
            String mltanswer8=p.getProperty("pre.text.mltanswer8");
            String mltanswer9=p.getProperty("pre.text.mltanswer9");
            String mltanswer10=p.getProperty("pre.text.mltanswer10");
            String min=p.getProperty("pre.text.min");
            String max=p.getProperty("pre.text.max");
            gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            gf.sendKeys("xpath",multipletypeQ,"Howmany types of color?");
            gf.sendKeys("xpath",mltanswer1,"A");
            gf.sendKeys("xpath",mltanswer2,"B");
            gf.sendKeys("xpath",mltanswer3,"C");
            gf.sendKeys("xpath",mltanswer4,"D");
            gf.sleep(2000);
            gf.click("xpath",plusicon);
            gf.sleep(1000);
            gf.click("xpath",plusicon);
            gf.sleep(1000);
            gf.click("xpath",plusicon);
            gf.sleep(1000);
            gf.click("xpath",plusicon);
            gf.sleep(1000);
            gf.click("xpath",plusicon);
            gf.sleep(1000);
            gf.click("xpath",plusicon);
            gf.sleep(2000);
            gf.sendKeys("xpath",mltanswer5,"E");
            gf.sendKeys("xpath",mltanswer6,"F");
            gf.sendKeys("xpath",mltanswer7,"G");
            gf.sendKeys("xpath",mltanswer8,"H");
            gf.sendKeys("xpath",mltanswer9,"I");
            gf.sendKeys("xpath",mltanswer10,"J");
            gf.sleep(2000);
            gf.sendKeys("xpath", min,"3");
            gf.sendKeys("xpath",max,"8");
            gf.sleep(2000);
		    gf.click("xpath", save);
		    gf.sleep(3000);
		    String upgrademsg=p.getProperty("pre.text.upgrademsg");
		    gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            gf.sendKeys("xpath",multipletypeQ,"Howmany types of color?");
            gf.sendKeys("xpath",mltanswer1,"A");
            gf.sendKeys("xpath",mltanswer2,"B");
            gf.sendKeys("xpath",mltanswer3,"C");
            gf.sendKeys("xpath",mltanswer4,"D");
            gf.sleep(2000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath", upgrademsg);
            /*User (Admin) can cancel the used type of question inside Custom questions section under Create Custom Question */
		    String cancelbtn=p.getProperty("pre.text.cancelbtn");
		    String mlttexterrormsg=p.getProperty("pre.text.mlttexterrormsg");
		    gf.sleep(2000);
		    gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            gf.sendKeys("xpath",multipletypeQ,"Howmany types of color?");
            gf.sendKeys("xpath",mltanswer1,"A");
            gf.sendKeys("xpath",mltanswer2,"B");
            gf.sendKeys("xpath",mltanswer3,"C");
            gf.sendKeys("xpath",mltanswer4,"D");
            gf.sleep(2000);
            gf.click("xpath", cancelbtn);
            gf.sleep(2000);
            /*As per User (Admin) selection of specific type of question, Inside corresponding window text area for question should not be empty*/
            String bold=p.getProperty("pre.text.bold");
            String italic=p.getProperty("pre.text.italic");
            String underline=p.getProperty("pre.text.underline");
            String paragraph=p.getProperty("pre.text.paragraph");
            String removexicon=p.getProperty("pre.text.removeicon");
            String grid=p.getProperty("pre.text.grid");
            String firstaddmoreoption=p.getProperty("pre.text.addmoreoptions");
            String secondaddmoreoption=p.getProperty("pre.text.addmoreoptionsecond");
            gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            gf.keyboardtab(2);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",mlttexterrormsg);
            gf.sleep(2000);
		    gf.click("xpath",DeleteFirstQuestion);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
            gf.sendKeys("xpath",multipletypeQ,"This question is an example of a question you could use in a post-then pre evaluation design. This is where the respondent is asked to rate how they feel about a statement before and after the intervention, but they complete both of these ratings at the end of the intervention. The statements in this question would");
            gf.sleep(1000);
            gf.sendKeys("xpath",multipletypeQ,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath",multipletypeQ,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath",multipletypeQ,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath",multipletypeQ,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(2000);
            gf.sendKeys("xpath",mltanswer1,"A");
            gf.sendKeys("xpath",mltanswer2,"B");
            gf.sendKeys("xpath",mltanswer3,"C");
            gf.sleep(2000);
		    gf.click("xpath", save);
		    /*Scroll bar is working fine for lengthy text inside text field area for specific type inside custom question */
		    gf.sleep(2000);
		    gf.click("xpath",DeleteFirstQuestion);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion," What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke?  Try to tell me as many as you can I am going to read you a list of signs or symptoms.  For those you think are related to strokes, please answer If you do not think it is a symptom of a stroke, please answer No");
            gf.sleep(2000);
            gf.keyboardUp(2);
            gf.sleep(1000);
            gf.keyboardUp(3);
            gf.sleep(1000);
            gf.keyboardDown(2);
            gf.sleep(1000);
            gf.keyboardDown(3);
            gf.sleep(2000);
		    gf.click("xpath",cancelbtn);
		    gf.sleep(2000);
		    /*Add more options icon should be clickable in order to add more option choices in following list*/
		    gf.click("xpath", grid);
		    gf.sleep(2000);
		    gf.click("xpath",firstaddmoreoption);
		    gf.sleep(2000);
		    gf.click("xpath",secondaddmoreoption);
		    gf.sleep(2000);
		    /* (Admin) can add 1 option choice at a time User while using Add more options in following list  */
		    String QuestionTextarea=p.getProperty("pre.text.gridQtextarea");
		    String option1=p.getProperty("pre.text.option1");
		    String option2=p.getProperty("pre.text.option2");
		    String option3=p.getProperty("pre.text.option3");
		    String value1=p.getProperty("pre.text.value1");
		    String value2=p.getProperty("pre.text.value2");
		    String value3=p.getProperty("pre.text.value3");
		    String optionDeleteicon=p.getProperty("pre.text.optiondeleteicon");
		    String valueDeleteicon=p.getProperty("pre.text.valuedeleteicon");
		    String specialoption=p.getProperty("pre.text.specialoption");
		    String none=p.getProperty("pre.text.none");
		    String freetext=p.getProperty("pre.text.freetext");
		    gf.sendKeys("xpath",QuestionTextarea,"Please rate the following statements");
		    gf.sendKeys("xpath",option1,"option1");
		    gf.sendKeys("xpath", value1,"value1");
		    gf.sendKeys("xpath",option2,"Option2");
		    gf.sendKeys("xpath",value2,"value2" );
		    gf.sendKeys("xpath",option3,"option3");
		    gf.sendKeys("xpath",value3,"Value3");
		    gf.sleep(2000);
		    gf.click("xpath",optionDeleteicon);
		    gf.sleep(1000);
		    gf.click("xpath", valueDeleteicon);
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    /*(46)User (Admin) should provide atleast 2 options in answer text area for Single Choice based Custom Question (47) User (Admin) cannot create any question that having <=1  choice option in answer for Single Choice based Custom question  */ 
            gf.sleep(2000);
		    gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"Some people can drive safely at the same time as using a mobile phone");
		    gf.sendKeys("xpath",answers1,"A");
		    gf.sendKeys("xpath",answer2,"B");
		    gf.sleep(2000);
		    gf.keyboardBackSpace("xpath",answer2,Keys.BACK_SPACE ,20);
		    gf.sleep(2000);
		    /* User (Admin) can provided default answer while adding more options by using Special option type in following list  */ 
            gf.click("xpath", specialoption);
            gf.mousemorehover("xpath",none);
            gf.sleep(1000);
            gf.click("xpath", none);
            gf.sleep(2000);
            /* User (Admin) can modify the default answers gernated while using Special Option type in following list */
            gf.click("xpath",DeleteFirstQuestion);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
            gf.sendKeys("xpath",answer2,"No");
		    gf.sendKeys("xpath",answer3,"Both");
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    String deleteGQ=p.getProperty("pre.text.gridQ");
		    gf.sleep(2000);
		    gf.click("xpath",deleteGQ);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
            /*User (Admin) should not add default answers of same type while adding more answer using Special Option type more than once in following list */
		    gf.sleep(2000);
		    gf.click("xpath", singlechoice);
            gf.sleep(2000);  
            gf.click("xpath", specialoption); 
            gf.sleep(2000);
            gf.mousemorehover("xpath",freetext);	
            gf.sleep(1000);
            gf.click("xpath", freetext);
            String sopt=p.getProperty("pre.text.specialopt");
            gf.sleep(2000);  
            gf.click("xpath",sopt); 
            gf.sleep(2000);
            gf.mousemorehover("xpath",freetext);
            gf.sleep(1000);
            gf.click("xpath", freetext);
            /*User (Admin) can revised answers in options choice by directly adding list of answers using direct add options in following list*/
            String directaddoptions=p.getProperty("pre.text.directaddoptions");
            String writeYouroptionsHere=p.getProperty("pre.text.writeyouroptionshere");
            String clearexistingoptions=p.getProperty("pre.text.clearexistingoptions");
            String constructopions=p.getProperty("pre.text.constructoptions");
            gf.sleep(2000);
            gf.click("xpath",cancelbtn);
            gf.sleep(2000);
		    gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"test case for construct options");
		    gf.sleep(1000);
            gf.click("xpath",directaddoptions);
            gf.sleep(1000); 
            gf.sendKeys("xpath",writeYouroptionsHere,"FirstOption");
            gf.sleep(1000);
            gf.click("xpath",clearexistingoptions);
            gf.sleep(1000);
            gf.click("xpath", constructopions);
            gf.sleep(2000);
            gf.click("xpath",directaddoptions);
            gf.sleep(1000);
            gf.sendKeys("xpath",writeYouroptionsHere,"secondOption");
            gf.sleep(1000);
            gf.click("xpath",clearexistingoptions);
            gf.sleep(1000);
            gf.click("xpath", constructopions);
            /* User (Admin) can add question and answers in their respective text field area as per based on Multiple choice type */
            gf.sleep(2000);
            gf.click("xpath",directaddoptions);
            gf.sleep(1000);
            gf.sendKeys("xpath",writeYouroptionsHere,"FirstOption");
            gf.sleep(1000);
            gf.click("xpath", constructopions);
            gf.sleep(2000);
            gf.click("xpath",directaddoptions);
            gf.sleep(1000);
            gf.sendKeys("xpath",writeYouroptionsHere,"secondtOption");
            gf.sleep(1000);
            gf.click("xpath",clearexistingoptions);
            gf.sleep(1000);
            gf.click("xpath", constructopions);
            gf.sleep(2000);
		    gf.click("xpath",save);
		    gf.sleep(2000);
            gf.gettextofwebelement("xpath",addquestiontoastmsg);
            gf.sleep(2000);
            /* Min and Max textbox must be getting highlighted */ 
            gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            gf.sendKeys("xpath",multipletypeQ,"Max and min text box should be highlighted at the time of given value");
            gf.sleep(1000);
            gf.sendKeys("xpath",max,"5");
            gf.sleep(1000);
            gf.sendKeys("xpath",min,"20");
            gf.sleep(1000); 
            gf.click("xpath",cancelbtn);
            /*User (Admin) can Create Custom question and answers based on Likert Scale type*/ 
            gf.click("xpath",DeleteFirstQuestion);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
            gf.click("xpath",DeleteFirstQuestion);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath", DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
            String likert=p.getProperty("pre.text.likert"); 
            String likerttypeQ=p.getProperty("pre.text.likerttypeQ");
            String Notlikely=p.getProperty("pre.text.notlikely");
            String Extremly=p.getProperty("pre.text.extremelikely");
            String swap=p.getProperty("pre.text.swap");
            String one=p.getProperty("pre.text.one");
            String two=p.getProperty("pre.text.two");
            String three=p.getProperty("pre.text.three");
            String four=p.getProperty("pre.text.four");
            String five=p.getProperty("pre.text.five");
            gf.click("xpath", likert);
            gf.sleep(2000);
            gf.sendKeys("xpath",likerttypeQ,"likert type Question?");
            gf.sleep(1000);
            gf.cleartext("xpath",Notlikely);
		    gf.sendKeys("xpath",Notlikely,"first likert Q");
		    gf.sleep(1000);
		    gf.cleartext("xpath",Extremly);
		    gf.sendKeys("xpath",Extremly,"likert exteremly Q");
		    gf.sleep(1000);
		    gf.click("xpath", swap);
		    gf.sleep(1000);
		    gf.click("xpath", swap);
		    gf.sleep(1000);
		    /*The numeric options in the likert scale should be getting highlighted*/
		    gf.mousemorehover("xpath",one);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",two);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",three);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",four);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",five);
		    gf.sleep(1000);
		    gf.click("xpath",save);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",addquestiontoastmsg);
            gf.sleep(2000);
            /*User (Admin) Should fail the limit of reducing numeric inputs upto 5 */
		    String likertDeleteFirstQ=p.getProperty("pre.text.likerDeletefirstQ");
		    String likertPlusicon=p.getProperty("pre.text.likertplusicon");
		    String likertDeleteBtn=p.getProperty("pre.text.likertDeleteBtn");
		    String plusiconrelatederrormsg=p.getProperty("Pre.text.plusiconerrormsg");
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.mousemorehover("xpath",likertDeleteBtn);
		    gf.click("xpath",likertDeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath", likert);
	        gf.sleep(2000);
		    gf.click("xpath", likertPlusicon);
		    gf.sleep(1000);
		    gf.click("xpath", likertPlusicon); 
		    gf.sleep(1000);
		    gf.click("xpath", likertPlusicon);
		    gf.sleep(1000);
		    gf.click("xpath", likertPlusicon);
		    gf.sleep(1000);
		    gf.click("xpath", likertPlusicon);
		    gf.sleep(1000);
		    gf.click("xpath", likertPlusicon);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath", plusiconrelatederrormsg);
		    /*User (Admin) can Create Custom question and answers based on Free Text*/
		    gf.sleep(1000);
	        gf.sendKeys("xpath",likerttypeQ,"How many years have you used tobacco regularly? ");
	        gf.sleep(1000);
		    gf.click("xpath",save);
		    gf.sleep(2000);
            /*How many years have you used tobacco regularly? */
		    String freetextlink=p.getProperty("pre.text.freetext");
		    String freetextQ=p.getProperty("pre.text.freetextQ");
		    String freetextDeleteFirstQ=p.getProperty("pre.text.freetextDeleteQ");
	        String freetextDeleteBtn=p.getProperty("pre.text.freetextDeleteBtn");
	        // String gridDirectaddopt=p.getProperty("pre.text.griddirectaddopt");
	        //String gridirectopt2=p.getProperty("pre.text.griddirectaddopt2"); 
	        gf.click("xpath",freetextlink);
		    gf.sleep(2000);
		    gf.sendKeys("xpath", freetextQ,"As a teen, how often did you eat fruits and vegetables");
		    gf.sleep(1000);
		    gf.click("xpath",save);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",addquestiontoastmsg); 
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.mousemorehover("xpath",likertDeleteBtn);
		    gf.click("xpath",likertDeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath",freetextDeleteFirstQ);
		    gf.mousemorehover("xpath",freetextDeleteBtn);
		    gf.click("xpath",freetextDeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
	        /*User (Admin) can Create Custom question and options based on Grid Choice type*/
		    gf.click("xpath",grid); 
		    gf.sleep(2000);
		    /* gf.click("xpath", gridDirectaddopt);
            gf.sleep(2000);
            gf.click("xpath", gridirectopt2);
            gf.sleep(2000);
            gf.click("xpath", gridirectopt2);
            gf.sleep(2000);
            gf.click("xpath", gridirectopt2);
            gf.sleep(2000);*/
            /*User (Admin) should provide atleast 2 options with their 2 corresponding values in answer text area for Grid Choice based Custom Question */
            gf.sendKeys("xpath",QuestionTextarea,"Could you tell if someone is having a heart attack");
		    gf.sendKeys("xpath",option1,"option1");
		    gf.sendKeys("xpath", value1,"value1");
		    gf.sleep(2000);
		    gf.sendKeys("xpath",option2,"Option2");
		    gf.sleep(2000);
		    gf.sendKeys("xpath",value2,"value2" );
		    gf.sleep(2000);
		    gf.click("xpath",cancelbtn);
		     /**/
            String image=p.getProperty("pre.text.image");
            String typeyourQofimg=p.getProperty("pre.text.imagetpyeyourQ");
            String uploadimagefile=p.getProperty("pre.text.imageupload");
            String addmorimage=p.getProperty("pre.text.addmoreimge");
            gf.sleep(2000);
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"How much do you drink of the following caffeinated drinks per day?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            gf.click("xpath",addmorimage);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            gf.click("xpath",save);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath",addquestiontoastmsg); 
		    /* User (Admin) can delete the existing image files before saving the Options for Image choice questions*/
		    gf.sleep(2000);
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"How much do you drink of the following caffeinated drinks per day?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            gf.click("xpath",addmorimage);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            gf.click("xpath",addmorimage);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            String imageDeleteBtn=p.getProperty("pre.text.imagedeleteicon");
            String imageerrortoastmsg=p.getProperty("pre.text.imageerrortoastmsg");
            String imageformaterrormsg=p.getProperty("pre.text.imagetypeerrortoastmsg");
            String imageDeleteOpt=p.getProperty("pre.text.imageDeleteopt");
            String Deletebtnofimage=p.getProperty("pre.text.imageDbtn");
            gf.click("xpath", imageDeleteBtn);
		    /*User (Admin) cannot delete all (or) any one image files when only 2 images are existing before saving the Options as per the user's requirement */ 
            gf.sleep(2000);
            gf.click("xpath", imageDeleteBtn);
            gf.sleep(1000);
            gf.gettextofwebelement("xpath", imageerrortoastmsg);
            gf.sleep(2000);
            gf.click("xpath",cancelbtn);
            gf.sleep(2000);
            gf.click("xpath",imageDeleteOpt);
		    gf.mousemorehover("xpath",Deletebtnofimage);
		    gf.click("xpath",Deletebtnofimage);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    /* User (Admin) has to add Image File (Only png, jpg, jpeg Format allowed) inside Option Frame */
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\exceldata.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",imageformaterrormsg);
            /*User (Admin) can add question and answers format in same way as shown Example question based on the type defined in following list */
            gf.sleep(1000);
            gf.click("xpath",cancelbtn);
            gf.sleep(2000);
            gf.click("xpath",singlechoice);
            gf.sleep(3000);
            /*Option choices of answer should be selected according to the selected type of Example question as defined in the following list */
            String winter=p.getProperty("pre.text.winterradiobtn");
            String automan=p.getProperty("pre.text.Autumnradiobtn");
            String spring=p.getProperty("pre.text.Springradiobtn");
            String firstcheckbox=p.getProperty("pre.text.firstcheckbox");
            String fourthcheckbox=p.getProperty("pre.text.fourthcheckbox");
            String fifthcheckbox=p.getProperty("pre.text.fifthcheckbox");
            gf.click("xpath",winter);
            gf.sleep(1000);
            gf.click("xpath",automan);
            gf.sleep(1000);
            gf.click("xpath", spring);
            gf.sleep(1000);
            gf.click("xpath", cancelbtn);
            gf.sleep(3000);
            gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            gf.click("xpath", firstcheckbox);
            gf.sleep(1000);
            gf.click("xpath", fourthcheckbox);
            gf.sleep(1000);
            gf.click("xpath", fifthcheckbox);
            gf.sleep(1000);
            gf.click("xpath",cancelbtn);
            gf.sleep(2000);
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"First Question of drag and drop functionality?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000); 
            gf.click("xpath",save);
		    gf.sleep(2000);
		    gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"second Question of drag and drop functionality?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000); 
            gf.click("xpath",save);
            gf.sleep(3000);
            /* Drag to arrange icon appearing against the type of the custom question should be working fine as per intended */        
            String source=p.getProperty("pre.text.secondQ");
            String destination=p.getProperty("pre.text.firstQ");
            String imagesecondQdotopt=p.getProperty("pre.text.dotoptofSeconQ");
            String imgshowtermination=p.getProperty("pre.text.showtermination");
            String imgshowanchor=p.getProperty("pre.text.showanchur");
            String imgshowchild=p.getProperty("pre.text.showchild");
            String imgshowimage=p.getProperty("pre.text.imgshowimage");
            String imgcameraicon=p.getProperty("pre.text.imgcameraicon");
            String imageHideimageopt=p.getProperty("pre.text.schideimageopt");
            String Editpopupsavebtn=p.getProperty("pre.text.popupsavebtn");
            String Editpopupcancelbtn=p.getProperty("pre.text.popupcancelbtn");
            String Editbtn=p.getProperty("pre.text.editbtn");
            String TypeyourQuestion=p.getProperty("pre.text.typeyourQuestion");
            String popupcloseicon=p.getProperty("pre.text.popupcloseicon");
            String gridpopupaddmoreopticon=p.getProperty("pre.text.editpopupaddmoreoptionicon");
		    String gridaddmorevalueopticon=p.getProperty("pre.text.editpopupaddmorevalue");
		    String editpopupboldicon=p.getProperty("pre.text.editpopboldicon");
		    String editpopupitalicicon=p.getProperty("pre.text.editpopupitalicicon");
		    String editpopupunderlineicon=p.getProperty("pre.text.editpopupunderlineicon");
		    String editpopupparagraphicon=p.getProperty("pre.text.editpopupparagraphicon");
		    String editpopupcloseicon=p.getProperty("pre.text.editpopupcloseicon");
            gf.dragandDropfunction("xpath",source, "xpath", destination);
            gf.sleep(2000);
            /*Locked Components should be appeared as disabled inside Option Menu under Preview Questions for the following list of type Custom question 3.For Image type ==>Show anchor, Show Termination, Show Child */
		    gf.click("xpath", imagesecondQdotopt); 
		    gf.sleep(2000);
            gf.mousemorehover("xpath",imgshowtermination);
            gf.click("xpath", imgshowtermination);
            gf.sleep(1000);
            gf.mousemorehover("xpath",imgshowanchor);
            gf.click("xpath", imgshowanchor);
            gf.sleep(1000);
            gf.mousemorehover("xpath", imgshowchild);
            gf.click("xpath", imgshowchild);
            gf.sleep(2000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",imageDeleteOpt);
            gf.sleep(2000);
		    gf.mousemorehover("xpath",imgshowimage);
		    gf.click("xpath",imgshowimage);
		    gf.sleep(1000);
            gf.click("xpath", imgcameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",imageHideimageopt);
		    gf.click("xpath",imageHideimageopt);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,"Update image type Question in preservey");
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupitalicicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupunderlineicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupparagraphicon);
            gf.sleep(1000);
            gf.click("xpath",editpopupcloseicon);
            gf.sleep(2000);
		    gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,"if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer");
		    gf.sleep(1000);
		    gf.keyboardUp(7);
		    gf.sleep(1000);
		    gf.keyboardDown(7);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",Editpopupcancelbtn);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Deletebtnofimage);
		    gf.click("xpath",Deletebtnofimage);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath",grid); 
		    gf.sleep(2000);
		    gf.sendKeys("xpath",QuestionTextarea,"Could you tell if someone is having a heart attack?");
		    gf.sendKeys("xpath",option1,"A");
		    gf.sendKeys("xpath", value1,"Yes");
		    gf.sendKeys("xpath",option2,"B");
		    gf.sendKeys("xpath",value2,"Not intrested" );
		    gf.sleep(1000);
		    gf.click("xpath",save);
		    String DeletefgridQ=p.getProperty("pre.text.DeletegridQ");
		    String gridshowtermination=p.getProperty("pre.text.gridshowtermination");
		    String gridshowanchor=p.getProperty("pre.text.gridshowanchor");
		    String gridshowimage=p.getProperty("pre.text.gridshowimage");
		    String gridcameraicon=p.getProperty("pre.text.gridcameraicon");
		    String mltshowtermination=p.getProperty("pre.text.mltshowtermination");
		    String mltshowanchor=p.getProperty("pre.text.mltshowanchor");
		    String mltshowchild=p.getProperty("pre.text.mltshowchild");
		    String mltsecondQdotopt=p.getProperty("pre.text.mltdotopt");
		    String mltshowimage=p.getProperty("pre.text.mltshowimg");
		    String mltcameraicon=p.getProperty("pre.text.mltcameraicon");
		    String mltfirstcameraicon=p.getProperty("pre.text.mltfirstcameraicon"); 
		    String firstcameraicon=p.getProperty("pre.text.gridfirstcameraicon");
		    String schideimageopt=p.getProperty("pre.text.schideimageopt");
		    String mlthideimageopt=p.getProperty("pre.text.schideimageopt");
		    String gridhideimageopt=p.getProperty("pre.text.schideimageopt");
		    String griddotoptafteruploadimg=p.getProperty("pre.text.griddotoptafteruploadingimg");
		    String mltdotoptafteruploadingimg=p.getProperty("pre.text.mltdotoptafteruploadingimg");
		    String scaddmoreoption=p.getProperty("pre.text.scaddmoreoption");
		    String answers5=p.getProperty("pre.text.editpopupanswers5");
		    String gridDeleteaddmoreicon=p.getProperty("pre.text.grideditpopupDeleteicon");
		    String gridaddmorevalueDeleteicon=p.getProperty("pre.text.grideditaddmorevalueDeleteicon");
		    String mlteditpopupdirectaddopt=p.getProperty("pre.text.mlteditdirectaddopt");
		    String mltwritehere=p.getProperty("pre.text.mltwritehere");
		    String mltconstructionopt=p.getProperty("pre.text.constructionoption");
		    String gridshowoptionDelete=p.getProperty("pre.text.gridshowoptionDelete");
		    String gridpreviewDeleteicon=p.getProperty("pre.text.gridpreviewDeleteicon");
		    String gridHideoptionDelete=p.getProperty("pre.text.gridHideoptionDelete");
		    String previewpopupcancelbtn=p.getProperty("pre.text.previewpopupcancelbtn");
		    gf.sleep(2000);
	        gf.click("xpath",DeletefgridQ);
            gf.sleep(1000);
            gf.mousemorehover("xpath",gridshowtermination);
            gf.click("xpath",gridshowtermination);
            gf.sleep(1000);
            gf.mousemorehover("xpath",gridshowanchor);
            gf.click("xpath", gridshowanchor);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath", DeletefgridQ);
            gf.sleep(1000);
            gf.mousemorehover("xpath",gridshowimage);
            gf.click("xpath",gridshowimage);
            gf.sleep(1000);
            gf.click("xpath",gridcameraicon);
            gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(1000);
		    gf.click("xpath", firstcameraicon); 
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(2000);
		    gf.click("xpath", griddotoptafteruploadimg);
		    gf.mousemorehover("xpath",gridhideimageopt);
		    gf.click("xpath",gridhideimageopt);
		    gf.sleep(2000);
		    gf.click("xpath",DeletefgridQ);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.cleartext("xpath",TypeyourQuestion);
		    gf.sendKeys("xpath", TypeyourQuestion,"Update Grid type Question in preservey Question");
		    gf.cleartext("xpath",option1);
		    gf.sendKeys("xpath",option1,"update option data");
		    gf.cleartext("xpath",value1);
		    gf.sendKeys("xpath",value1,"update value");
            gf.sleep(1000);		    
		    gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",DeletefgridQ);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
            gf.cleartext("xpath",value2);
            gf.sleep(2000);
            gf.sendKeys("xpath",value2,"value2");
		    gf.click("xpath",gridpopupaddmoreopticon);
		    gf.sleep(1000);
		    gf.click("xpath",gridaddmorevalueopticon);
		    gf.sleep(1000);
		    gf.click("xpath",gridDeleteaddmoreicon);
		    gf.sleep(1000);
		    gf.click("xpath", gridaddmorevalueDeleteicon);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupitalicicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupunderlineicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupparagraphicon);
            gf.sleep(2000);
            gf.sendKeys("xpath",value2,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.click("xpath",editpopupcloseicon);
            gf.sleep(2000);
            gf.click("xpath",Editpopupsavebtn);
            gf.sleep(2000);
		    gf.click("xpath",DeletefgridQ);
            gf.sleep(1000);
            gf.mousemorehover("xpath",gridshowoptionDelete);
            gf.click("xpath", gridshowoptionDelete);
            gf.sleep(1000);
            gf.click("xpath",gridpreviewDeleteicon);
            gf.sleep(1000);
            gf.click("xpath", previewpopupcancelbtn);
            /*previewpopupcancelbtn */
            gf.sleep(2000);
            gf.click("xpath",gridpreviewDeleteicon);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            gf.click("xpath",DeletefgridQ);
            gf.sleep(2000);
            gf.mousemorehover("xpath",gridshowoptionDelete);
            gf.click("xpath", gridshowoptionDelete);
            gf.sleep(1000);
            gf.click("xpath",DeletefgridQ);
            gf.sleep(2000);
            gf.mousemorehover("xpath",gridHideoptionDelete);
            gf.click("xpath",gridHideoptionDelete);
            gf.sleep(2000);
		    gf.click("xpath",DeletefgridQ);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,"if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer");
		    gf.sleep(1000);
		    gf.keyboardUp(7);
		    gf.sleep(1000);
		    gf.keyboardDown(7);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",DeletefgridQ);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",DeletefgridQ);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",Editpopupcancelbtn);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.mousemorehover("xpath",Deletebtnofimage);
		    gf.click("xpath",Deletebtnofimage);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            gf.sendKeys("xpath",multipletypeQ,"multiple choice type Question ");
		    gf.sendKeys("xpath",mltanswer1,"A");
            gf.sendKeys("xpath",mltanswer2,"B");
            gf.sleep(2000);
		    gf.click("xpath",save);
		    gf.sleep(3000);
	        gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",mltshowtermination);
		    gf.click("xpath",mltshowtermination);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",mltshowanchor);
		    gf.click("xpath",mltshowanchor);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",mltshowchild);
		    gf.click("xpath",mltshowchild);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",mltshowimage);
		    gf.click("xpath",mltshowimage);
		    gf.sleep(1000);
		    gf.click("xpath", mltcameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(1000);
		    gf.click("xpath", mltfirstcameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(1000);
		    gf.click("xpath",mltdotoptafteruploadingimg);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",mlthideimageopt);
		    gf.click("xpath",mlthideimageopt);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.cleartext("xpath",mltanswer2);
		    gf.sleep(1000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.cleartext("xpath",TypeyourQuestion);
		    gf.sendKeys("xpath",TypeyourQuestion,"update multiple choice type Question in preservey");
		    gf.cleartext("xpath",mltanswer1);
		    gf.sendKeys("xpath",mltanswer1,"update answer First");
		    String mltanswerfour=p.getProperty("pre.text.mltanswersfour");
		    String mlteditpopupspecialoptions=p.getProperty("pre.text.editpopupspecialpopup");
		    String mlteditpopupnone=p.getProperty("pre.text.mltNoneopt");
		    String mlteightspecialopt=p.getProperty("pre.text.mlteightSpecialdotopt");
		    String mltfreetext=p.getProperty("pre.text.mltfreetextopt");
		    String mltninespeciladotopt=p.getProperty("pre.text.mltninespecialdotopt");
		    String mltmintextbox=p.getProperty("pre.text.mltmintextbox");
		    String mltmaxtext=p.getProperty("pre.text.mltmaxtextbox");
		    String mltshowoptionDelete=p.getProperty("pre.text.mltshowotionDelete");
		    String HideoptionDelete=p.getProperty("pre.text.mlthideoption");
		    String mltpreviewDeleteicon=p.getProperty("pre.text.mltpreviewDeleteicon");
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupitalicicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupunderlineicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupparagraphicon);
            gf.sleep(2000);
            gf.sendKeys("xpath",mltanswer2,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.click("xpath",editpopupcloseicon);
            gf.sleep(1000);
            gf.click("xpath",scaddmoreoption);
            gf.sleep(1000);
            gf.sendKeys("xpath", answers5,"mlt answer five");
            gf.sleep(2000);
            gf.click("xpath",mlteditpopupdirectaddopt);
            gf.sleep(1000);
            gf.sendKeys("xpath",mltwritehere,"write something");
            gf.sleep(2000);
            gf.click("xpath",mltconstructionopt);
            gf.sleep(2000);
            gf.cleartext("xpath",mltanswerfour);
            gf.sendKeys("xpath", mltanswerfour, "update answer four");
            gf.sleep(1000);
            gf.click("xpath",mlteditpopupspecialoptions);
            gf.sleep(1000);
            gf.mousemorehover("xpath",mlteditpopupnone);
            gf.click("xpath", mlteditpopupnone);
            gf.sleep(2000);
            gf.click("xpath",mlteightspecialopt);
            gf.sleep(1000);
            gf.mousemorehover("xpath",mltfreetext);
            gf.click("xpath",mltfreetext);
            gf.sleep(1000);
            gf.click("xpath",mltninespeciladotopt);
            gf.sleep(1000);
            gf.mousemorehover("xpath",mltfreetext);
            gf.click("xpath",mltfreetext);
            gf.sleep(1000);
            gf.sendKeys("xpath",mltmintextbox,"20");
            gf.sendKeys("xpath", mltmaxtext,"25");
            gf.sleep(2000);
            gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,"if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer");
		    gf.sleep(1000);
		    gf.keyboardUp(7);
		    gf.sleep(1000);
		    gf.keyboardDown(7);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",Editpopupcancelbtn);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.mousemorehover("xpath",mltshowoptionDelete);
		    gf.click("xpath",mltshowoptionDelete);
		    gf.sleep(1000);
		    gf.click("xpath", mltpreviewDeleteicon);
		    gf.sleep(1000);
		    gf.click("xpath",previewpopupcancelbtn);
		    /*previewcancelbtn*/
		    gf.sleep(2000);
		    gf.click("xpath", mltpreviewDeleteicon);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.mousemorehover("xpath",mltshowoptionDelete);
		    gf.click("xpath",mltshowoptionDelete);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.mousemorehover("xpath",HideoptionDelete);
		    gf.click("xpath",HideoptionDelete);
		    gf.sleep(2000);
		    gf.click("xpath",mltsecondQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath",DeleteBtn);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath",deleteGQ);
		    gf.mousemorehover("xpath",DeleteBtn);
	        gf.click("xpath",DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.click("xpath",singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"New single choice type Question?");
		    gf.sendKeys("xpath",answers1,"A");
		    gf.sendKeys("xpath",answer2,"B");
		    gf.sendKeys("xpath",answer3,"C");
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
		    String scshowtermination=p.getProperty("pre.text.singalshowtermination");
		    String scshowanchor=p.getProperty("pre.text.singalshowanchor");
		    String scshowchild=p.getProperty("pre.text.singalshowchild");
		    String scshowimg=p.getProperty("pre.text.singleshowimg");
		    String sccameraicon=p.getProperty("pre.text.cameraicon");
		    String scfirstoptcameraicon=p.getProperty("pre.text.freetextfirstcameraicon");
		    String scdotoptafteruploadingimg=p.getProperty("pre.text.scdotoptafteruploadingimg");
		    String scdirectaddopticon=p.getProperty("pre.text.scdirectaddopticon");
		    String scanswerfive=p.getProperty("pre.text.scanswerFive");
		    String scsevenspecialdotopt=p.getProperty("pre.text.scsevenspecilaopt");
		    String scnone=p.getProperty("pre.text.scnonetext");
		    String sceightspecialopt=p.getProperty("pre.text.sceightspecialdotop");
		    String scfreetext=p.getProperty("pre.text.scfreetext");
		    String scninespecialdotopt=p.getProperty("pre.text.scninedotopt");
		    String scshowoptionDelete=p.getProperty("pre.text.scshowoptionDelete");
		    String scHideoptionDelete=p.getProperty("pre.text.scHideoptionDelete");
		    String scpreviewDeleteicon=p.getProperty("pre.text.scDeleteFirsticon");
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",scshowtermination);
		    gf.click("xpath",scshowtermination);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",scshowanchor);
		    gf.click("xpath",scshowanchor);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",scshowchild);
		    gf.click("xpath",scshowchild);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",scshowimg);
		    gf.click("xpath",scshowimg);
		    gf.sleep(1000);
		    gf.click("xpath",sccameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(1000);
		    gf.click("xpath",scfirstoptcameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(2000);
		    gf.click("xpath",scdotoptafteruploadingimg);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",schideimageopt);
		    gf.click("xpath",schideimageopt);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.cleartext("xpath",answer2);
		    gf.cleartext("xpath",answer3);
		    gf.sleep(2000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.cleartext("xpath",TypeyourQuestion);
		    gf.sendKeys("xpath", TypeyourQuestion,"Update single choice Question in pre servey");
		    gf.cleartext("xpath",answers1);
		    gf.sendKeys("xpath",answers1,"Update First Answer");
		    gf.sleep(2000);
		    gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupitalicicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupunderlineicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupparagraphicon);
            gf.sleep(2000);
            gf.sendKeys("xpath",answers1,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.click("xpath",editpopupcloseicon);
            gf.sleep(1000);
            gf.click("xpath", scaddmoreoption); 
            gf.sleep(1000);
            gf.sendKeys("xpath",answers5,"answers5");
            gf.sleep(1000);
            gf.click("xpath", scdirectaddopticon);
            gf.sleep(1000);
            gf.sendKeys("xpath",mltwritehere,"create single choice opt");
            gf.sleep(1000);
            gf.click("xpath",mltconstructionopt);
            gf.sleep(1000);
            gf.cleartext("xpath",scanswerfive);
            gf.sendKeys("xpath", scanswerfive,"update single choice Question ");
            gf.sleep(1000);
            gf.click("xpath",scsevenspecialdotopt);
            gf.sleep(1000);
            gf.mousemorehover("xpath", scnone);
            gf.click("xpath", scnone);
            gf.sleep(1000);
            gf.click("xpath",sceightspecialopt);
            gf.sleep(1000);
            gf.mousemorehover("xpath", scfreetext);
            gf.click("xpath", scfreetext);
            gf.sleep(1000);
            gf.click("xpath",scninespecialdotopt);
            gf.sleep(1000);
            gf.mousemorehover("xpath", scfreetext);
            gf.click("xpath", scfreetext);
            gf.sleep(2000);
            gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,"if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer");
		    gf.sleep(1000);
		    gf.keyboardUp(7);
		    gf.sleep(1000);
		    gf.keyboardDown(7);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",Editpopupcancelbtn);
		    gf.sleep(2000);
		    /*previewcancelbtn*/
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath", scshowoptionDelete);
		    gf.click("xpath", scshowoptionDelete);
		    gf.sleep(1000);
		    gf.click("xpath", scpreviewDeleteicon);
		    gf.sleep(1000);
		    gf.click("xpath",previewpopupcancelbtn);
		    gf.sleep(2000);
		    /*  dfvlsdfv sdfskdf*/
		    gf.click("xpath", scpreviewDeleteicon);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath", scshowoptionDelete);
		    gf.click("xpath", scshowoptionDelete);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath", scHideoptionDelete);
		    gf.click("xpath",scHideoptionDelete);
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath",DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    /*Verification of Show Image inside Option Menu*/
		    String likertshowimage=p.getProperty("pre.text.likertshowimage");
		    String likertcameraicon=p.getProperty("pre.text.likertcameraicon");
		    String freetextdotopt=p.getProperty("pre.text.freetextdotopt");
		    String freetextshowimage=p.getProperty("pre.text.freetextshowimage");
		    String Hideimage=p.getProperty("pre.text.hideimageoption");
		    String swapicon=p.getProperty("pre.text.likertscalewapicon");
		    String likertfirst=p.getProperty("pre.text.likertfirst");
		    String likertsecond=p.getProperty("pre.text.likertsecond");
		    String likertthird=p.getProperty("pre.text.likertthird");
		    String likertfourth=p.getProperty("pre.text.likertfourth"); 
		    String likertfive=p.getProperty("pre.text.likertfive");
		    String likertplustooltip=p.getProperty("pre.text.likertplustooltip");
		    String likerttooltipalertmessage=p.getProperty("pre.text.likerttooltipalertmessage");
		    String likertminustooltip=p.getProperty("pre.text.likertminustooltip");
		    gf.click("xpath",likert);
		    gf.sleep(1000);
	        gf.sendKeys("xpath",likerttypeQ,"How many years have you used tobacco regularly? ");
	        gf.sleep(1000);
		    gf.click("xpath",save);
		    gf.sleep(2000);
            gf.click("xpath",freetextlink);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",freetextQ,"As a teen, how often did you eat fruits and vegetables");
		    gf.sleep(1000);
		    gf.click("xpath",save);
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",likertshowimage);		    
		    gf.click("xpath",likertshowimage);
		    gf.sleep(1000);
		    gf.click("xpath",likertcameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",Hideimage);		    
		    gf.click("xpath",Hideimage);
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",Editbtn);		    
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.cleartext("xpath",TypeyourQuestion);
		    gf.sendKeys("xpath",TypeyourQuestion,"Update liker type Question in preservey");
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupitalicicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupunderlineicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupparagraphicon);
            gf.sleep(1000);
            gf.click("xpath",editpopupcloseicon);
            gf.sleep(1000);
            gf.click("xpath", swapicon);
            gf.sleep(1000);
            gf.mousemorehover("xpath",likertfirst);
            gf.sleep(1000);
            gf.mousemorehover("xpath",likertsecond);
            gf.sleep(1000);
            gf.mousemorehover("xpath",likertthird);
            gf.sleep(1000);
            gf.mousemorehover("xpath",likertfourth);
            gf.sleep(1000);
            gf.mousemorehover("xpath",likertfive);
            gf.sleep(1000);
            /*User (Admin) has to provide atleast 5 numeric scale inputs while updating Likert Scale type question or its corresponding options choice through Edit option of the Preview Questions*/
            gf.click("xpath", likertplustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertplustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertplustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertplustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertplustooltip);
            /*User (Admin) cannot exceed the limit of adding numeric inputs beyond 10 while updating Likert Scale type question or its corresponding options choice through Edit option of the Preview Questions*/
            gf.sleep(1000);
            gf.click("xpath", likertplustooltip);
            gf.sleep(1000);
            gf.gettextofwebelement("xpath",likerttooltipalertmessage);
            /*User (Admin) Should fail the limit of reducing numeric inputs upto 5 while updating Likert Scale type question or its corresponding options choice through Edit option of the Preview Questions*/
            String likertminustooltipalertmsg=p.getProperty("pre.text.likerttooltipalertmsg");
            gf.sleep(1000);
            gf.click("xpath", likertminustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertminustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertminustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertminustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertminustooltip);
            gf.sleep(1000);
            gf.click("xpath", likertminustooltip);
            gf.sleep(1000);
            gf.gettextofwebelement("xpath",likertminustooltipalertmsg);
            gf.sleep(2000);
		    gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,"if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer");
		    gf.sleep(1000);
		    gf.keyboardUp(7);
		    gf.sleep(1000);
		    gf.keyboardDown(7);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",Editbtn);		    
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",Editbtn);		    
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",Editpopupcancelbtn);
		    gf.sleep(2000);
		    String likertshowemoji=p.getProperty("pre.text.likertshowemoji");
		    String likertemojifirstcameraicon=p.getProperty("pre.text.likertemojifirstcameraicon");
		    String likerthideemoji=p.getProperty("pre.text.likertHideemoji");
		    String likertshowemojisecondcameraicon=p.getProperty("pre.text.likertemojisecondcameraicon");
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",likertshowemoji);
		    gf.click("xpath",likertshowemoji);
		    gf.sleep(1000);
		    gf.click("xpath",likertemojifirstcameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(2000);
		    gf.click("xpath", likertshowemojisecondcameraicon);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\exceldata.exe");
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",likerthideemoji);
		    gf.click("xpath",likerthideemoji);
		    gf.sleep(2000);
		    gf.click("xpath",freetextdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",freetextshowimage);
		    gf.click("xpath",freetextshowimage);
		    String freetextcameraicons=p.getProperty("pre.text.cameraiconss");
		    String freetextdotoptafteruploadingimg=p.getProperty("pre.text.dotoptafteruploadingimg");	
		    gf.sleep(1000);
		    gf.click("xpath",freetextcameraicons);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
		    gf.sleep(2000);
		    gf.click("xpath",freetextdotoptafteruploadingimg);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",Hideimage);
		    gf.click("xpath",Hideimage);
		    gf.sleep(2000);
		    gf.click("xpath",freetextdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",Editbtn);		    
		    gf.click("xpath",Editbtn);
		    gf.sleep(2000);
		    gf.cleartext("xpath",TypeyourQuestion);
		    gf.sendKeys("xpath",TypeyourQuestion,"Update Free text  type Question in preservey");
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath",editpopupboldicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupitalicicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupunderlineicon);
            gf.sleep(1000);
            gf.sendKeys("xpath",TypeyourQuestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath",editpopupparagraphicon);
            gf.sleep(1000);
            gf.click("xpath",editpopupcloseicon);
            gf.sleep(2000);
            gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",freetextdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",TypeyourQuestion,"if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer if yes What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke Try to tell me as many as you can I am going to read you a list of signs or symptoms.For those you think are related to strokes, please answer");
		    gf.sleep(1000);
		    gf.keyboardUp
		    gf.sleep(1000);
		    gf.keyboardDown(7);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",freetextdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",Editbtn);		    
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",popupcloseicon);
		    gf.sleep(2000);
		    gf.click("xpath",freetextdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",Editbtn);		    
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",Editpopupcancelbtn);
		    gf.sleep(2000);
		    gf.click("xpath",likertDeleteFirstQ);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",likertDeleteBtn);
		    gf.click("xpath",likertDeleteBtn);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    String freetextdotoptionsaferuploadingimg=p.getProperty("pre.text.freetextdotoptionafteruplodingimg");
		    String freetexDeleteBtns=p.getProperty("pre.text.freetextDeletebtns");
		    gf.click("xpath",freetextdotoptionsaferuploadingimg);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",freetexDeleteBtns);		    
		    gf.click("xpath",freetexDeleteBtns);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    /*image*/
		    String imgaddmoreimage=p.getProperty("pre.text.editpopupaddmoreimage");
		    String editpopupimgdeleteicon=p.getProperty("pre.text.firstimagedeleteicon");
		    gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"How much do you drink of the following caffeinated drinks per day?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000); 
            gf.click("xpath",save);
            gf.sleep(3000);
            gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(3000);
		    gf.click("xpath",imgaddmoreimage);
		    gf.sleep(2000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(5000); 
		    gf.click("xpath", imgaddmoreimage);
		    gf.sleep(2000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Editbtn);
		    gf.click("xpath",Editbtn);
		    gf.sleep(1000);
		    gf.click("xpath",editpopupimgdeleteicon);
		    gf.sleep(1000);
		    //  gf.click("xpath",editpopupimgdeletesecondimg);/*this code commented due to image uploading issue */
		    gf.sleep(1000);
		    gf.click("xpath",imgaddmoreimage);
		    gf.sleep(2000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\exceldata.exe");
            gf.sleep(2000);
		    gf.click("xpath",Editpopupsavebtn);
		    gf.sleep(2000);
		    gf.click("xpath",imageDeleteOpt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Deletebtnofimage);
		    gf.click("xpath",Deletebtnofimage);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    /*Verification of Browse File functionality in order to upload the custom questions*/
		    String uploadQuestionfile=p.getProperty("pre.text.uploadQuestionfile");
		    String maxtwoQallowedtoastmsg=p.getProperty("pre.text.maxtwoQallowedtoastmsg");
		    String filetypetoastmsg=p.getProperty("pre.text.wronfiletypetoastmsg");
		    String undefinedindextoastmsg=p.getProperty("pre.text.undefinedindextoastmsg");
		    gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadQuestion.exe");
            gf.sleep(3000);
		    gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadQuestion.exe");
            gf.sleep(2000);
		    gf.gettextofwebelement("xpath",maxtwoQallowedtoastmsg);
		    gf.sleep(3000);
		    gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\image1.exe");
            gf.sleep(2000);
		    gf.gettextofwebelement("xpath",filetypetoastmsg);
		    gf.sleep(3000);
		    gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\blank.exe");
            gf.sleep(2000);
		    gf.gettextofwebelement("xpath",undefinedindextoastmsg);
		    gf.sleep(3000);
		    /* User (Admin) can upload max 2 excel file incase if  it contains 1 survey question of any type of Custom Question under Create Custom Question of Question Palette */
		    gf.click("xpath",deletepreQuestion1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath",DeleteBtn);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    String mltdotoptions=p.getProperty("pre.text.mltdotoptions");
		    String uploadpreserveytemplate=p.getProperty("pre.text.uploadpreserveytemplate");
		    gf.click("xpath",mltdotoptions);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath",DeleteBtn);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\firstQ.exe");
            gf.sleep(3000);
		    gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\secondQ.exe");
            gf.sleep(2000);
            gf.click("xpath",mltdotoptions);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",DeleteBtn);
		    gf.click("xpath",DeleteBtn);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\secondQ.exe");
            gf.sleep(2000);
            gf.click("xpath",uploadQuestionfile);
		    gf.sleep(1000);
		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadQuestion.exe");
            gf.sleep(2000);
		    gf.gettextofwebelement("xpath",maxtwoQallowedtoastmsg);
		    gf.sleep(3000);
		    gf.click("xpath", uploadpreserveytemplate);
		    gf.sleep(2000);
		    gf.closeBrowser();
		    }
    public void ConfigurePostSurve() throws AWTException, IOException
    {       gf.implicitwait(20);
		    String newcompain=p.getProperty("upload.text.newcompain");
		    String compname=p.getProperty("upload.text.compname");
		    String video=p.getProperty("upload.text.video");
		    String testtype=p.getProperty("upload.text.testtype");
		    String category=p.getProperty("upload.text.category");
		    String next=p.getProperty("upload.text.next");
		    String toastmsg=p.getProperty("upload.text.toastmsg");
		    String nail=p.getProperty("config.text.nail");
		    String title=p.getProperty("upload.text.title");
		    String brows=p.getProperty("upload.text.browsbtn");
		    String states=p.getProperty("config.text.states");
		    String quota=p.getProperty("config.text.quotaconfig");
		    String createquotabtn=p.getProperty("config.text.crequota");
		    String saveandcontinuebtn=p.getProperty("config.text.saveandcon");
		    String emotion=p.getProperty("config.text.emotion");
		    String dislike=p.getProperty("config.text.dislike");
		    String previous=p.getProperty("config.text.previous");
		    String addnext=p.getProperty("pre.text.addnext");
		    String addquestiontoastmsg=p.getProperty("pre.text.savequestiontoastmsg");
		    String nextbtn=p.getProperty("pre.text.next");
		    String updateandnext=p.getProperty("pre.text.updateandnext");
            /* It should navigate to Step 4: Configure Post Survey from Step 3: Configure Pre-Survey */
		    gf.gettextofwebelement("xpath",newcompain);
			gf.sleep(2000);
			gf.click("xpath",newcompain);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",compname,"RDM");
			gf.sleep(2000);
		    gf.click("xpath",brows);
			gf.sleep(3000);
			gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
			gf.sleep(5000);
			gf.click("xpath",video);
			gf.sleep(3000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.cleartext("cssSelector",title);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",title,"RDM");
			gf.sleep(2000);
			gf.click("xpath",testtype);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.click("xpath",category);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
	        gf.keyboardtab(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(1000);
	        gf.keyboardDown(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",nail);
            gf.sleep(3000);
			gf.click("xpath",next);
			gf.sleep(3000);
			gf.gettextofwebelement("xpath",toastmsg);
			gf.sleep(5000);
			gf.click("xpath",emotion);
			gf.sleep(2000);
			gf.click("xpath",dislike);
			gf.sleep(2000);
			gf.click("xpath", states);
			gf.sleep(2000);
			gf.keyboardUp(2);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.click("xpath", quota);
			gf.sleep(3000);
			gf.click("xpath",createquotabtn);
			gf.sleep(4000);
			gf.click("xpath",saveandcontinuebtn);
			gf.sleep(2000);
			gf.click("xpath", addnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", addquestiontoastmsg);
			gf.click("xpath", nextbtn);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.getTitle();
			gf.sleep(2000);
		    /* It should navigate to Step 3: Configure Pre-Survey from Step 4: Configure Post Survey */
			gf.click("xpath",previous);
			gf.sleep(3000);
	        /* User (Admin) must configure the question that comes under part of Post-Survey */
			gf.click("xpath", updateandnext);
			gf.sleep(2000);
			gf.click("xpath",nextbtn);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",addnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",addquestiontoastmsg);
		    String singlechoice=p.getProperty("pre.text.singlechoice");
            String typeyourquestion=p.getProperty("pre.text.typeyourquestion");
		    String answers1=p.getProperty("pre.text.answer1");
		    String answer2=p.getProperty("pre.text.answer2");
		    String answer3=p.getProperty("pre.text.answer3");
		    String save=p.getProperty("pre.text.save");
		    String posteditbtn=p.getProperty("post.text.editbtn");
		    String textofdefault=p.getProperty("post.text.defaultQuestiontext");
		    String Q5=p.getProperty("post.text.@5");
		    String Q2=p.getProperty("post.text.Q2");
		    String Q3=p.getProperty("post.text.Q3");
		    String addyourstatement=p.getProperty("post.text.addyourstatement");
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"how many states in india");
			gf.sendKeys("xpath",answers1,"28");
			gf.sendKeys("xpath",answer2,"30");
			gf.sendKeys("xpath",answer3,"31");
			gf.sleep(2000);
			gf.click("xpath", save);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", addquestiontoastmsg);
			gf.click("xpath", nextbtn);
			gf.getTitle();
			gf.sleep(2000);
			/* User (Admin) can select any or all the questions that are present inside Default Questions under Question Palette  */
			gf.click("xpath", posteditbtn);
			gf.sleep(2000);
			gf.click("xpath",saveandcontinuebtn);
			gf.sleep(4000);
			gf.click("xpath",updateandnext);
			gf.sleep(3000);
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"how many states in india");
			gf.sendKeys("xpath",answers1,"28");
			gf.sendKeys("xpath",answer2,"30");
			gf.sendKeys("xpath",answer3,"31");
			gf.sleep(2000);
			gf.click("xpath", save);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", addquestiontoastmsg);
			gf.click("xpath", nextbtn);
			gf.getTitle();
		    gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.getTitle();
		    gf.sleep(2000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.click("xpath",previous);
			gf.sleep(3000);
		    /*User (Admin) can select any questions that are present inside Default Questions under Question Palette*/
            gf.gettextofwebelement("xpath", textofdefault);	
            gf.click("xpath",Q5);
            gf.sleep(2000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", addquestiontoastmsg);
	        /*User (Admin) can select any or all the questions that are present inside Default Questions, corresponding  selected question should get to be highlighted in green color */
			gf.sleep(2000);
			gf.click("xpath",previous);
			gf.sleep(2000);
	  		gf.click("xpath", Q2);
	        /*Verification of question text field of the Default Question */
			gf.sleep(2000);
			gf.click("xpath", Q3);	
			gf.sleep(1000);
			gf.keyboardtab(1);
			gf.sleep(2000);
			gf.keyboardBackSpace("xpath",addyourstatement,Keys.BACK_SPACE, 1); 
	        /*User (Admin) can modify the content of question in the question text field of the Default Question */
			gf.sleep(2000);
			gf.refreshBrowser();
			gf.sleep(2000);
			gf.sendKeys("xpath",addyourstatement," add Statement");
			gf.sleep(1000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", addquestiontoastmsg);
			gf.click("xpath",previous);
            /*Question text field of the Default Question must not be empty*/
			String errortoastmsg=p.getProperty("post.textdefaultallfield'stostmsg");
			String defaultQtextfielderrormsg=p.getProperty("post.text.textfielderrormsg");
			String QueryException=p.getProperty("post.text.queryException");
			String headingofcustomeQ=p.getProperty("post.text.headingofcustomeQ");
			String headingofdefaultQ=p.getProperty("post.text.defaultQsection");
	        gf.sleep(2000);
			gf.keyboardBackSpace("xpath",addyourstatement,Keys.BACK_SPACE, 25);
			gf.sleep(3000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", errortoastmsg);
			gf.sleep(1000);
			gf.gettextofwebelement("xpath", defaultQtextfielderrormsg);
			gf.sleep(2000);
			gf.sendKeys("xpath",addyourstatement,"This question is an example of a question you could use in a post-then pre evaluation design.This is where the respondent is asked to rate how they feel about a statement before and after the intervention, but they complete both of these ratings at the end of the intervention. The statements in this question would ");
			gf.sleep(2000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", QueryException);
			gf.sleep(2000);
		    /* It should navigate to Create Custom Question from Default Questions under Question Palette*/
			gf.sleep(2000);
			gf.click("xpath", Q3);	
			gf.sleep(1000);
			gf.keyboardtab(1);
			gf.sleep(2000);
			gf.keyboardBackSpace("xpath",addyourstatement,Keys.BACK_SPACE, 1);
			gf.sleep(2000);
			gf.sendKeys("xpath",addyourstatement," add Statement");
			gf.sleep(1000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", addquestiontoastmsg);
			gf.sleep(1000);
			gf.gettextofwebelement("xpath", headingofcustomeQ);
			gf.sleep(2000);
			String deletepostQ1=p.getProperty("post.text.deletefirstQ");
			String DeleteBtn=p.getProperty("pres.text.deleteBtns");
			String preseryprobar=p.getProperty("post.text.copspbar");
			String deletepreQuestion1=p.getProperty("pre.text.deleteprequestion");
			String postDeletebtn=p.getProperty("post.text.deletebtn");
			String postprogressbar=p.getProperty("post.text.postprogressbar");
			String postupgradetoastmsg=p.getProperty("post.text.upgradetoastmsg");
			String postcancelbtn=p.getProperty("post.text.postcancelbtn");
			gf.click("xpath",deletepostQ1);
			gf.sleep(3000);
			gf.mousemorehover("xpath",DeleteBtn);
			gf.sleep(1000);
			gf.click("xpath", DeleteBtn);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
		    gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"Seatbelts can be dangerous?");
			gf.sendKeys("xpath",answers1,"No");
			gf.sendKeys("xpath",answer2,"Yes");
			gf.sendKeys("xpath",answer3,"Both");
			gf.sleep(2000);
			gf.click("xpath", save);
		    gf.sleep(2000);
		    gf.click("xpath",previous);
		    gf.sleep(2000);
		    gf.gettextofwebelement("xpath", headingofdefaultQ);
		    gf.click("xpath", preseryprobar);
		    gf.sleep(2000);
		    gf.click("xpath",updateandnext);   
		    gf.sleep(2000);
		    gf.click("xpath",deletepreQuestion1);
			gf.sleep(3000);
			gf.mousemorehover("xpath",postDeletebtn);
			gf.sleep(2000);
			gf.click("xpath",postDeletebtn);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",nextbtn);
			gf.sleep(2000);
			gf.KeyboardEnter(1); 
			gf.sleep(2000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"are you sure can we create second Question ?");
			gf.sendKeys("xpath",answers1,"No");
			gf.sendKeys("xpath",answer2,"Yes");
			gf.sendKeys("xpath",answer3,"Both");
			gf.sleep(2000);
			gf.click("xpath", save);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath", addquestiontoastmsg);
		    /* User (Admin) may create upto max of 1-1 custom question from each survey either as part of Configure Pre or Post Survey  */
			gf.click("xpath",deletepostQ1);
			gf.sleep(2000);
			gf.mousemorehover("xpath",postDeletebtn);
			gf.sleep(2000);
			gf.click("xpath",postDeletebtn);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
            gf.click("xpath", preseryprobar);
			gf.sleep(2000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"I would like to own a fast and powerful car one day.");
		    gf.sendKeys("xpath",answers1,"A");
			gf.sendKeys("xpath",answer2,"B");
			gf.sendKeys("xpath",answer3,"C");
		    gf.sleep(2000);
			gf.click("xpath", save);
			gf.sleep(2000);
		    /*User (Admin) can add upto min of 0 custom question including from Pre-Survey or Post-Survey */
			gf.click("xpath",deletepreQuestion1);
			gf.sleep(3000);
			gf.mousemorehover("xpath",DeleteBtn);
			gf.sleep(2000);
			gf.click("xpath",DeleteBtn);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath", postprogressbar);
			gf.sleep(2000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.click("xpath",deletepostQ1);
			gf.sleep(3000);
			gf.mousemorehover("xpath",postDeletebtn);
			gf.click("xpath",postDeletebtn);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
            gf.click("xpath",nextbtn);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.getTitle();
		    /*User (Admin) cannot excced the limit of adding max of 2 custom question including from Pre-Survey or Post-Survey */
		    gf.click("xpath",postprogressbar);
            gf.sleep(2000);    
            gf.click("xpath",updateandnext);
            gf.sleep(2000);
            gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"I would like to own a fast and powerful car one day.");
		    gf.sendKeys("xpath",answers1,"A");
			gf.sendKeys("xpath",answer2,"B");
			gf.sendKeys("xpath",answer3,"C");
			gf.sleep(2000);
			gf.click("xpath", save);
			gf.sleep(3000);
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"I would like to own a fast and powerful car one day.");
			gf.sendKeys("xpath",answers1,"A");
			gf.sendKeys("xpath",answer2,"B");
			gf.sendKeys("xpath",answer3,"C");
			gf.sleep(2000);
			gf.click("xpath", save);
			gf.sleep(3000);
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"I would like to own a fast and powerful car one day.");
			gf.sendKeys("xpath",answers1,"A");
			gf.sendKeys("xpath",answer2,"B");
			gf.sendKeys("xpath",answer3,"C");
			gf.sleep(2000);
			gf.click("xpath", save);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",postupgradetoastmsg);
			gf.sleep(2000);
			/*User (Admin) can cancel the used type of question inside Custom questions section under Create Custom Question  */
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"I would like to own a fast and powerful car one day.");
			gf.sendKeys("xpath",answers1,"A");
			gf.sendKeys("xpath",answer2,"B");
			gf.sendKeys("xpath",answer3,"C");
			gf.sleep(2000);
			gf.click("xpath",postcancelbtn);
			gf.sleep(2000);
		    String mltQ=p.getProperty("post.text.mltQ");
		    String likertQ=p.getProperty("post.text.likertQ");
		    String freetext=p.getProperty("post.text.fretext");
	        String grid=p.getProperty("post.text.gridQ");
		    String image=p.getProperty("post.text.image");
		    /* As per User (Admin) selection of specific type of question, corresponding type to add question should be getting highlighted */
            gf.mousemorehover("xpath",singlechoice);
			gf.sleep(1000);
			gf.mousemorehover("xpath",mltQ);
			gf.sleep(1000);
			gf.mousemorehover("xpath",likertQ);
			gf.sleep(1000);
			gf.mousemorehover("xpath",freetext);
			gf.sleep(1000);
			gf.mousemorehover("xpath",grid);
			gf.sleep(1000);
			gf.mousemorehover("xpath", image);
			gf.sleep(2000);
		    /*As per User (Admin) selection of specific type of question, Inside corresponding window text area for question should not be empty*/
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.keyboardtab(2);
		    /* As per User (Admin) selection of specific type of question, Inside corresponding window text area for answer by default 4 option choices should get highlighted */	
            String singalchoiceFirstQdotopt=p.getProperty("post.text.singalchoicefirstQdotopt");
            String singalchoiceFirstQDeleteBtn=p.getProperty("post.text.singalchoicefisrtQDeleteBtn");
            gf.sleep(2000);
            gf.click("xpath", singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",singalchoiceFirstQDeleteBtn);
            gf.click("xpath",singalchoiceFirstQDeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            gf.click("xpath", singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",singalchoiceFirstQDeleteBtn);
            gf.click("xpath",singalchoiceFirstQDeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            //gf.gettextofwebelement("xpath",QuestionisRequired);
            String bold=p.getProperty("pre.text.bold");
            String italic=p.getProperty("pre.text.italic");
            String underline=p.getProperty("pre.text.underline");
            String paragraph=p.getProperty("pre.text.paragraph");
            String removexicon=p.getProperty("pre.text.removeicon");
            String singalchoiceaddmoreoption=p.getProperty("post.text.singalchoiceaddmoreoption");
            String mltchoiceaddmoreopt=p.getProperty("post.text.mltchoiceaddmoreopt");
            String gridaddmoreopt=p.getProperty("post.text.mltchoiceaddmoreopt");
            String gridaddmorevalues=p.getProperty("post.text.gridaddmoreopt");
            String gridtypeyourQ=p.getProperty("pre.text.gridQtextarea");
  		    String option1=p.getProperty("pre.text.option1");
  		    String option2=p.getProperty("pre.text.option2");
  		    String value1=p.getProperty("pre.text.value1");
  		    String value2=p.getProperty("pre.text.value2");
  		    String singalchoiceQDeleteicon=p.getProperty("post.text.singalchoicedeleteicon");
  		    String mltchoiceDeleteicon=p.getProperty("post.text.mltdeleteicon");
  		    String gridDeleteicon=p.getProperty("post.text.gridDeleteicon");
  		    String gDeleteiconofvalue=p.getProperty("post.text.gdeleteiconofvalue");
  		    gf.sendKeys("xpath",typeyourquestion,"this Question is created for checking text value format?");
			gf.sendKeys("xpath",answers1,"A");
			gf.sendKeys("xpath",answer2,"B");
			gf.sendKeys("xpath",answer3,"C");
			gf.sleep(2000);
            gf.sendKeys("xpath",typeyourquestion,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath",typeyourquestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath",typeyourquestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath",typeyourquestion,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(2000);
            gf.click("xpath", save);
			gf.sleep(2000);
		    /*Scroll bar is working fine for lengthy text inside text field area for specific type inside custom question */
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"What are the signs or symptoms that the person is having a heart attack? What are the signs or symptoms of a person having a stroke?  Try to tell me as many as you can I am going to read you     a list of signs or symptoms.  For those you think are related to strokes, please answer If you do not think it is a symptom of a stroke, please answerNo.");
			gf.sleep(1000);
			gf.keyboardUp(5);
			gf.sleep(1000);
			gf.keyboardDown(5);
			gf.sleep(2000);
			gf.click("xpath",singalchoiceaddmoreoption);
			gf.sleep(1000);
			gf.click("xpath",singalchoiceaddmoreoption);
			gf.sleep(1000);
			gf.click("xpath",singalchoiceQDeleteicon);
			gf.sleep(1000);
			gf.click("xpath", postcancelbtn);
			gf.sleep(2000);
			gf.click("xpath",mltQ);
			gf.sleep(2000);
			gf.click("xpath",mltchoiceaddmoreopt);
			gf.sleep(1000);
			gf.click("xpath",mltchoiceDeleteicon);
			gf.sleep(1000);
			gf.click("xpath",mltchoiceaddmoreopt);
			gf.sleep(1000);
			gf.click("xpath",postcancelbtn);
			gf.sleep(1000);
			gf.click("xpath",grid);
			gf.sleep(2000);
			gf.click("xpath", gridaddmoreopt);
			gf.sleep(1000);
			gf.click("xpath",gridDeleteicon);
			gf.sleep(1000);
			gf.click("xpath", gridaddmorevalues);
			gf.sleep(1000);
			gf.click("xpath",gDeleteiconofvalue);
			gf.sleep(1000);
			gf.sendKeys("xpath",gridtypeyourQ,"add grid type Question?");
			gf.sendKeys("xpath",option1,"Option1");
			gf.sendKeys("xpath", value1,"value1");
			gf.sendKeys("xpath",option2,"option2");
			gf.sendKeys("xpath",value2,"value2");
			gf.sleep(1000);
			gf.click("xpath",save);
			gf.sleep(2000);
		    /*User (Admin) should provide atleast 2 options in answer text area for Single Choice based Custom Question */
	        gf.click("xpath",singalchoiceFirstQdotopt);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",singalchoiceFirstQDeleteBtn);
	        gf.click("xpath",singalchoiceFirstQDeleteBtn);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(3000);
			gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"symptom of a stroke, please answer.");
			gf.sleep(1000);
			gf.sendKeys("xpath",answers1,"A");
		    /*User (Admin) cannot create any question that having <=1 choice option in answer for Single Choice based Custom question */
			gf.sleep(3000);
			gf.sendKeys("xpath",answer2,"B");
			gf.sleep(1000);
			String griddotopt=p.getProperty("post.text.dotopt");
			String gridDeletebtn=p.getProperty("post.text.gridDeeletebtn");
			gf.click("xpath", griddotopt);
			gf.sleep(2000);
			gf.mousemorehover("xpath",gridDeletebtn);
			gf.click("xpath",gridDeletebtn);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
		    /*User (Admin) can provided default answer while adding more options by using Special option type in following list*/
			String specialoption=p.getProperty("post.text.specialoption");
			String secondspecialopt=p.getProperty("post.text.secondspecialopt");
			String none=p.getProperty("post.text.none");
			String others=p.getProperty("post.text.others");
			String mltTypeyourQ=p.getProperty("post.text.mlttypeyourQ");
			String thirdspecialopt=p.getProperty("post.text.thirdspecialopt");
			String Fourthspecialopt=p.getProperty("post.text.fourthspecialdotopt");
		    /*User (Admin) should not add default answers of same type while adding more answer using Special Option type more than once in following list*/
			gf.click("xpath",specialoption);
			gf.sleep(1000);
			gf.mousemorehover("xpath",none);
			gf.click("xpath", none);
			gf.sleep(2000);
			gf.click("xpath",secondspecialopt);
			gf.sleep(1000);
			gf.mousemorehover("xpath",freetext);
			gf.click("xpath",freetext);
			gf.sleep(2000);
			gf.click("xpath",thirdspecialopt);
			gf.sleep(1000);
			gf.mousemorehover("xpath",others);
			gf.click("xpath",others);
			gf.sleep(1000);
			gf.click("xpath", Fourthspecialopt);
			gf.sleep(1000);
			gf.mousemorehover("xpath",freetext);
			gf.click("xpath",freetext);
			gf.sleep(2000);
		    gf.click("xpath",save);
			gf.sleep(3000);
			gf.click("xpath",mltQ);
			gf.sleep(2000);
			gf.sendKeys("xpath",mltTypeyourQ,"mltiple choice your Question?");
			gf.sendKeys("xpath",answers1,"answer1");
			gf.sendKeys("xpath",answer2,"answer2");
			String mltspecialopt=p.getProperty("post.text.mltspecialopt");
			String mltsecondspecialopt=p.getProperty("post.text.mltsecondspevialopt");
			String mltthirdspecialopt=p.getProperty("post.text.mltthirdsopt");
			String mltfourthspecialopt=p.getProperty("post.text.mltfourthspecialopt");
			String mltotherbtn=p.getProperty("post.text.otherbtn");
		    gf.click("xpath",mltspecialopt);
			gf.sleep(1000);
			gf.mousemorehover("xpath",none);
			gf.click("xpath", none);
			gf.sleep(1000);
			gf.click("xpath",mltsecondspecialopt);
			gf.sleep(1000);
			gf.mousemorehover("xpath",freetext);
			gf.click("xpath",freetext);
			gf.sleep(1000);
			gf.click("xpath",mltthirdspecialopt);
			gf.sleep(2000);
			gf.mousemorehover("xpath",mltotherbtn);
			gf.click("xpath",mltotherbtn);
			gf.sleep(2000);
			gf.click("xpath",mltfourthspecialopt);
			gf.sleep(1000);
			gf.mousemorehover("xpath",freetext);
			gf.click("xpath",freetext);
			gf.sleep(1000);
			gf.click("xpath",save);
			gf.sleep(3000);
		    String directaddopt=p.getProperty("post.text.directaddopt");
			String Leaveyouropthere=p.getProperty("post.text.leaveyouropt");
			String clearexistingoptopns=p.getProperty("post.text.clearexisting");
			String constructoption=p.getProperty("post.text.constructionoption");
			gf.click("xpath",singlechoice);
			gf.sleep(2000);
		    /*User (Admin) can revised answers in options choice by directly adding list of answers using direct add options in following list*/
			gf.click("xpath",directaddopt);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"A");
			gf.KeyboardEnter(1);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"B");
			gf.KeyboardEnter(1);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"C");
			gf.KeyboardEnter(1);
            gf.sleep(1000);
            gf.click("xpath",clearexistingoptopns);
            gf.sleep(1000);
            gf.click("xpath", constructoption);
            gf.sleep(1000);
            gf.click("xpath",directaddopt);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"A");
			gf.sleep(1000);
	        gf.click("xpath", constructoption);
	        gf.sleep(1000);
	        gf.click("xpath",postcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",mltQ);
			gf.sleep(2000);
			gf.click("xpath",directaddopt);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"A");
			gf.KeyboardEnter(1);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"B");
			gf.KeyboardEnter(1);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"C");
			gf.KeyboardEnter(1);
            gf.sleep(1000);
            gf.click("xpath",clearexistingoptopns);
            gf.sleep(1000);
            gf.click("xpath", constructoption);
            gf.sleep(1000);
            gf.sleep(2000);
			gf.click("xpath",directaddopt);
			gf.sleep(1000);
			gf.sendKeys("xpath",Leaveyouropthere,"A");
			gf.sleep(1000);
	        gf.click("xpath", constructoption);
	        gf.sleep(1000);
            gf.click("xpath",postcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",singalchoiceFirstQDeleteBtn);
	        gf.click("xpath",singalchoiceFirstQDeleteBtn);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(3000);
            String mltchoiceQDotOpt=p.getProperty("post.text.mltdotopt");
            String mltDeletebtn=p.getProperty("post.text.mltDeletebtn");
            String answer4=p.getProperty("post.text.answer4");
            String answer5=p.getProperty("post.text.answer5"); 
            String answer6=p.getProperty("post.text.answer6");
            String answer7=p.getProperty("post.text.answer7");
            String answer8=p.getProperty("post.text.answer8");
            String min=p.getProperty("post.text.min");
            String max=p.getProperty("post.text.max");
            gf.click("xpath", mltchoiceQDotOpt);
            gf.sleep(000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.click("xpath", mltDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            /*User (Admin) can add question and answers in their respective text field area as per based on Multiple choice type*/
            gf.click("xpath",mltQ);
			gf.sleep(2000);
			gf.sendKeys("xpath",mltTypeyourQ,"Set the suitable minimum range of option choice which can be opted");
			gf.sendKeys("xpath",answers1,"answer1");
			gf.sendKeys("xpath",answer2,"answer2");
			gf.sendKeys("xpath",answer3,"answer3");
			gf.sendKeys("xpath",answer4,"answer4");
			gf.sleep(1000);
			gf.click("xpath", mltchoiceaddmoreopt);
			gf.sleep(1000);
			gf.click("xpath", mltchoiceaddmoreopt);
			gf.sleep(1000);
			gf.click("xpath", mltchoiceaddmoreopt);
			gf.sleep(1000);
			gf.click("xpath", mltchoiceaddmoreopt);
			gf.sleep(1000);
			gf.click("xpath", mltchoiceaddmoreopt);
			gf.sleep(1000);
			gf.sendKeys("xpath",answer5,"answer5");
			gf.sendKeys("xpath",answer6,"answer6");
			gf.sendKeys("xpath",answer7,"answer7");
			gf.sendKeys("xpath",answer8,"answer8");
			gf.mousemorehover("xpath", min);
			gf.sendKeys("xpath",min,"2");
			gf.mousemorehover("xpath", max);
			gf.sendKeys("xpath",max,"5");
			gf.sleep(1000);
			gf.click("xpath",save);
			gf.sleep(2000);
			/*Verification of Create Custom Question based on type of questions [Likert Scale type]*/
			String likerttypeyourQ=p.getProperty("post.text.likerttypeyourQ");
			String likertswapicon=p.getProperty("post.text.likertswapicon");
		    String likertNotlikely=p.getProperty("post.text.notlikely");
		    String likertExtremelylikely=p.getProperty("post.text.extremeliylikely");
		    String likertplusicon=p.getProperty("post.text.plusicon");
		    String likertminusicon=p.getProperty("post.text.minusiconsofcircule");
		    String firstradiobtn=p.getProperty("post.text.First1");
		    String secondradiobtn=p.getProperty("post.text.second2");
		    String thirdradiobtn=p.getProperty("post.text.third3");
		    String fourthradiobtn=p.getProperty("post.text.Fourth4");
		    String fifthradiobtn=p.getProperty("post.text.Fifth5");
		    String minusiconrelatedtoastmsg=p.getProperty("post.text.minusicon");
		    String plusicontoastmsg=p.getProperty("post.text.plusiconrelatedtoastmsg");
		    gf.click("xpath",likertQ);
            gf.sleep(2000);
            gf.sendKeys("xpath",likerttypeyourQ,"As a teen, how often did you eat fruits and vegetables");
            gf.sleep(1000);
            gf.click("xpath", likertswapicon);
	        gf.sleep(2000);
	        gf.cleartext("xpath",likertNotlikely);
	        gf.sendKeys("xpath", likertNotlikely,"likert Question");
	        gf.sleep(1000);
	        gf.cleartext("xpath",likertExtremelylikely);
	        gf.sendKeys("xpath", likertExtremelylikely,"likert Question");
	        gf.sleep(1000);
	        gf.mousemorehover("xpath", firstradiobtn);
	        gf.sleep(1000);
	        gf.mousemorehover("xpath",secondradiobtn);
	        gf.sleep(1000);
	        gf.mousemorehover("xpath",thirdradiobtn);
            gf.sleep(1000);
	        gf.mousemorehover("xpath",fourthradiobtn);
	        gf.sleep(1000);
	        gf.mousemorehover("xpath", fifthradiobtn);
	        gf.sleep(2000);
	        gf.click("xpath",likertplusicon);
	        gf.sleep(1000);
	        gf.click("xpath",likertplusicon);
	        gf.sleep(1000);
	        gf.click("xpath",likertplusicon);
	        gf.sleep(1000);
	        gf.click("xpath",likertplusicon);
	        gf.sleep(1000);
	        gf.click("xpath",likertplusicon);
	        gf.sleep(1000);
	        gf.click("xpath",likertplusicon);
	        gf.sleep(2000);
	        gf.gettextofwebelement("xpath",plusicontoastmsg);
	        gf.sleep(1000);
	        gf.click("xpath",save);
            /*User (Admin) Should fail the limit of reducing numeric inputs upto 5 */
	        gf.click("xpath",likertQ);
            gf.sleep(2000);
            gf.sendKeys("xpath",likerttypeyourQ,"Likert second Question");
            gf.sleep(2000);
            gf.click("xpath",likertminusicon);
            gf.sleep(2000);
	        gf.gettextofwebelement("xpath",minusiconrelatedtoastmsg);
	        gf.click("xpath",postcancelbtn);
	        gf.sleep(2000);
	        /*User (Admin) can Create Custom question and options based on Grid Choice type */
	        gf.click("xpath",grid);
	        gf.sleep(2000);
	        gf.sendKeys("xpath",gridtypeyourQ,"Enter grid type Question?");
	        gf.sendKeys("xpath",option1,"option one");
	        gf.sendKeys("xpath",value1,"value1");
	        gf.sendKeys("xpath",option2,"option two");
	        gf.sleep(1000);
	        gf.click("xpath",postcancelbtn);
	        gf.sleep(2000);
	        gf.click("xpath",mltchoiceQDotOpt);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",mltDeletebtn);
	        gf.click("xpath",mltDeletebtn);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
            String typeyourQofimg=p.getProperty("pre.text.imagetpyeyourQ");
            String uploadimagefile=p.getProperty("pre.text.imageupload");
            String addmorimage=p.getProperty("pre.text.addmoreimge");
            gf.sleep(2000);
	        gf.click("xpath",image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"How much do you drink of the following caffeinated drinks per day?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            gf.click("xpath",addmorimage);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            gf.click("xpath",save);
	        gf.sleep(2000);
	        gf.gettextofwebelement("xpath",addquestiontoastmsg); 
	        /*User (Admin) can delete the existing image files before saving the Options for Image choice questions*/
	        gf.sleep(2000);
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"How much do you drink of the following caffeinated drinks per day?");
            gf.sleep(1000);
            gf.click("xpath",uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            gf.click("xpath",addmorimage);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            gf.click("xpath",addmorimage);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            String imageDeleteicon=p.getProperty("post.text.imgDeleteicon");
            String imageerrortoastmsg=p.getProperty("post.text.imagetoastmsg");
            String imageformaterrormsg=p.getProperty("pre.text.imagetypeerrortoastmsg");
            String imageDeleteOpt=p.getProperty("pre.text.imageDeleteopt");
            String Deletebtnofimage=p.getProperty("pre.text.imageDbtn");
            String likertDotopt=p.getProperty("post.text.likertDotopt");
            String likertDeleteBtn=p.getProperty("post.text.likertBtn");
            gf.click("xpath",imageDeleteicon);
            gf.sleep(2000);
            gf.click("xpath",imageDeleteicon);
            gf.sleep(1000);
            gf.gettextofwebelement("xpath",imageerrortoastmsg);
            gf.sleep(2000);
            gf.click("xpath",postcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertDeleteBtn);
            gf.click("xpath", likertDeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            gf.click("xpath",imageDeleteOpt);
		    gf.mousemorehover("xpath",Deletebtnofimage);
		    gf.click("xpath",Deletebtnofimage);
		    gf.sleep(2000);
		    gf.KeyboardEnter(1);
		    gf.sleep(3000);
		    gf.click("xpath", image);
            gf.sleep(2000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\exceldata.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",imageformaterrormsg);
            gf.click("xpath",postcancelbtn);
            gf.sleep(2000);
            /*Option choices of answer should be selected according to the selected type of Example question as defined in the following list*/
        	gf.click("xpath", singlechoice);
			gf.sleep(2000);
			gf.sendKeys("xpath",typeyourquestion,"singal choice Question?");
			gf.sleep(1000);
			gf.sendKeys("xpath",answers1,"A");
			gf.sendKeys("xpath",answer2,"B");
			gf.sleep(1000);
			String winter=p.getProperty("pre.text.winterradiobtn");
	        String automan=p.getProperty("pre.text.Autumnradiobtn");
	        String spring=p.getProperty("pre.text.Springradiobtn");
	        String firstcheckbox=p.getProperty("pre.text.firstcheckbox");
	        String fourthcheckbox=p.getProperty("pre.text.fourthcheckbox");
	        String fifthcheckbox=p.getProperty("pre.text.fifthcheckbox");
	        gf.click("xpath",winter);
            gf.sleep(1000);
            gf.click("xpath",automan);
            gf.sleep(1000);
            gf.click("xpath", spring);
            gf.sleep(1000);
            gf.click("xpath",postcancelbtn);
            gf.sleep(3000);
            /*Option choices of answer should be selected according to the selected type of Example question as defined in the following list*/
			gf.click("xpath",mltQ);
			gf.click("xpath", firstcheckbox);
            gf.sleep(1000);
            gf.click("xpath", fourthcheckbox);
            gf.sleep(1000);
            gf.click("xpath", fifthcheckbox);
            gf.sleep(1000);
            gf.click("xpath",postcancelbtn);
            gf.sleep(2000);
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"First Question of drag and drop functionality?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000); 
            gf.click("xpath",save);
		    gf.sleep(2000);
		    gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"second Question of drag and drop functionality?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000); 
            gf.click("xpath",save);
            gf.sleep(3000);
            /* Drag to arrange icon appearing against the type of the custom question should be working fine as per intended */        
            String source=p.getProperty("post.text.source");
            String destination=p.getProperty("post.text.destination");
            String imgfirstDotOpt=p.getProperty("post.text.firstDeleteDotopt");
            String imgshowtermination=p.getProperty("pre.text.showtermination");
            String imgshowanchor=p.getProperty("pre.text.showanchur");
            String imgshowchild=p.getProperty("pre.text.showchild");
            String showimg=p.getProperty("post.text.showimage");
            String hideimage=p.getProperty("post.text.hideimage");
            String editimg=p.getProperty("post.text.editimg");
            String imgcamera=p.getProperty("post.text.imagecameraicon");
            String imgpopupsavebtn=p.getProperty("post.text.popupsavebtn");
            String imgpopuptextarea=p.getProperty("post.text.imgpopuptextarea");
            String popupcancelbtn=p.getProperty("post.txet.cancelbtn");
            String popupaddmoreimages=p.getProperty("post.text.addmoreimagespopup");
            String popupimgDeleteicon=p.getProperty("post.text.popupimgDeleteicon");
            gf.dragandDropfunction("xpath",source, "xpath", destination);
            gf.sleep(2000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",showimg);
            gf.click("xpath",showimg);
            gf.sleep(2000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",hideimage);
            gf.click("xpath",hideimage);
            gf.sleep(1000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",editimg);
            gf.click("xpath",editimg);
            gf.sleep(1000);
            gf.cleartext("xpath", imgpopuptextarea);
            gf.sendKeys("xpath", imgpopuptextarea,"update image");
            gf.sleep(1000);
            /*implement text format*/
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following listTag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list");
            gf.sleep(1000);
            gf.keyboardUp(5);
            gf.sleep(1000);
            gf.keyboardDown(5);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"update image");
            gf.sleep(1000);
            gf.click("xpath",popupaddmoreimages);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000); 
            gf.click("xpath",popupimgDeleteicon);
            gf.sleep(2000);
            gf.click("xpath",popupaddmoreimages);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\exceldata.exe");
            gf.sleep(2000);
            gf.click("xpath",imgpopupsavebtn);
            //gf.KeyboardEnter(1);
            gf.sleep(2000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",editimg);
            gf.click("xpath",editimg);
            gf.sleep(1000);
            gf.click("xpath", popupcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",imgshowtermination);
            gf.click("xpath",imgshowtermination);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",imgshowanchor);
            gf.click("xpath",imgshowanchor);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",imgshowchild);
            gf.click("xpath",imgshowchild);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",Deletebtnofimage);
            gf.click("xpath",Deletebtnofimage);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            gf.click("xpath",imgfirstDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",Deletebtnofimage);
            gf.click("xpath",Deletebtnofimage);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            /*Locked Components should be appeared as disabled inside Option Menu under Preview Questions for the following list of type Custom question*/
            gf.click("xpath",grid);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",gridtypeyourQ,"Could you tell if someone is having a heart attack?");
		    gf.sendKeys("xpath",option1,"A");
		    gf.sendKeys("xpath", value1,"Yes");
		    gf.sendKeys("xpath",option2,"B");
		    gf.sendKeys("xpath",value2,"Not intrested" );
		    gf.sleep(1000);
		    gf.click("xpath",save);
		    String gridshowimg=p.getProperty("post.text.showimage");
		    String gridhideimg=p.getProperty("post.text.hideimage");
		    String gridshowtermination=p.getProperty("pre.text.gridshowtermination");
		    String grideditbtn=p.getProperty("post.text.editimg");
		    String gridshowanchor=p.getProperty("pre.text.gridshowanchor");
		    String gridshowoptionDelete=p.getProperty("post.text.showoptionDelete");
		    String gridhideoptionDelete=p.getProperty("post.text.hideoptionDelete");
		    String gridcamera=p.getProperty("post.text.gridcamera");
		    String popupplusicon=p.getProperty("post.text.popupplusicon");
		    String gridpopupaddoptions=p.getProperty("post.text.mltpopupaddoption");
		    String gridpopupaddvalue=p.getProperty("post.text.mltpopupaddvalue");
		    gf.sleep(2000);
		    gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridshowimg);
            gf.click("xpath",gridshowimg);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridhideimg);
            gf.click("xpath",gridhideimg);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridshowtermination);
            gf.click("xpath",gridshowtermination);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",grideditbtn);
            gf.click("xpath",grideditbtn);
            gf.sleep(2000);
            gf.cleartext("xpath", imgpopuptextarea);
            gf.sendKeys("xpath", imgpopuptextarea,"update grid Question");
            gf.sleep(1000);
            /*implement text format*/
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following listTag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list");
            gf.sleep(1000);
            gf.keyboardUp(5);
            gf.sleep(1000);
            gf.keyboardDown(5);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"update grid Question");
            gf.sleep(2000);
            gf.click("xpath",imgpopupsavebtn);
            //gf.KeyboardEnter(1);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",grideditbtn);
            gf.click("xpath",grideditbtn);
            gf.sleep(1000);
            gf.click("xpath",gridpopupaddoptions);
            gf.sleep(1000);
            gf.click("xpath",gridpopupaddvalue);
            gf.sleep(2000);
            gf.click("xpath",popupcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridshowanchor);
            gf.click("xpath",gridshowanchor);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
		    gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridshowoptionDelete);
            gf.click("xpath",gridshowoptionDelete);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridhideoptionDelete);
            gf.click("xpath",gridhideoptionDelete);
            gf.sleep(2000);
		    gf.click("xpath",griddotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridDeletebtn);
            gf.click("xpath",gridDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            String mltshowimg=p.getProperty("post.text.mltshowimg");
		    String mlthideimg=p.getProperty("post.text.hideimage");
            String mltshowtermination=p.getProperty("pre.text.mltshowtermination");
            String mlteditbtn=p.getProperty("post.text.editimg");
		    String mltshowanchor=p.getProperty("pre.text.mltshowanchor");
		    String mltshowchild=p.getProperty("pre.text.mltshowchild");
		    String mltshowoptionDelete=p.getProperty("post.text.showoptionDelete");
		    String mlthideoptionDelete=p.getProperty("post.text.hideoptionDelete");
		    String scpopupspecialopt=p.getProperty("post.text.scpopupspecialopt");
		    String scnoneofthese=p.getProperty("post.text.scnonofthese");
		    String directaddoptions=p.getProperty("pre.text.directaddoptions");
            String writeYouroptionsHere=p.getProperty("pre.text.writeyouroptionshere");
            String constructopions=p.getProperty("pre.text.constructoptions");
            String mltnoneopt=p.getProperty("post.text.mlnoneopt");
		    gf.click("xpath",mltQ);
            gf.sleep(2000);
            gf.sendKeys("xpath",mltTypeyourQ,"multiple choice type Question ");
            gf.sendKeys("xpath",answers1,"A");
            gf.sendKeys("xpath",answer2,"B");
            gf.sleep(2000);
            gf.click("xpath",save);
	        gf.sleep(3000);
	        gf.click("xpath", mltchoiceQDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",mltshowimg);
            gf.click("xpath",mltshowimg);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",mlthideimg);
            gf.click("xpath",mlthideimg);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",mltshowtermination);
            gf.click("xpath",mltshowtermination);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",mlteditbtn);
            gf.click("xpath",mlteditbtn);
            gf.sleep(2000);
            gf.cleartext("xpath", imgpopuptextarea);
            gf.sendKeys("xpath", imgpopuptextarea,"update maltiple type Question?");
            gf.sleep(1000);
           /*implement text format*/
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following listTag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list");
            gf.sleep(1000);
            gf.keyboardUp(5);
            gf.sleep(1000);
            gf.keyboardDown(5);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"update maltiple type Question?");
            gf.sleep(1000);
            gf.click("xpath",scpopupspecialopt);
            gf.mousemorehover("xpath",mltnoneopt);
            gf.sleep(1000);
            gf.click("xpath",mltnoneopt);
            gf.sleep(1000);
            gf.cleartext("xpath", scnoneofthese);
            gf.sendKeys("xpath",scnoneofthese,"None of above");
            gf.sleep(2000);
            String mltsecondspecialopts=p.getProperty("post.text.mltsecondspecialopt");
            String mltfreetextopt=p.getProperty("post.text.mltfreetexst");
            gf.click("xpath",mltsecondspecialopts);
			gf.sleep(1000);
			gf.mousemorehover("xpath",mltfreetextopt);
			gf.click("xpath",mltfreetextopt);
			gf.sleep(1000);
			gf.click("xpath",directaddoptions);
			gf.sleep(1000);
			gf.sendKeys("xpath",writeYouroptionsHere,"write option");
	        gf.sleep(1000);
	        gf.click("xpath", constructopions);
		    gf.sleep(1000);
		    gf.sendKeys("xpath",min,"1");
		    gf.sendKeys("xpath",max,"2");
		    gf.sleep(2000);
            gf.click("xpath",imgpopupsavebtn);
            // gf.KeyboardEnter(1);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",mltshowanchor);
            gf.click("xpath",mltshowanchor);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",mltshowchild);
            gf.click("xpath", mltshowchild);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath", mltshowoptionDelete);
            gf.click("xpath", mltshowoptionDelete);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",mlthideoptionDelete);
            gf.click("xpath",mlthideoptionDelete);
            gf.sleep(2000);
            gf.click("xpath",mltchoiceQDotOpt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.click("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            /* */
            gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"New single choice type Question?");
		    gf.sendKeys("xpath",answers1,"A");
		    gf.sendKeys("xpath",answer2,"B");
		    gf.sendKeys("xpath",answer3,"C");
		    gf.sleep(1000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
		    String schoiceshowimg=p.getProperty("post.text.showimage");
		    String schoicehideimg=p.getProperty("post.text.hideimage");
            String schoiceeditbtn=p.getProperty("post.text.editimg");
		    String singalshowtermination=p.getProperty("pre.text.singalshowtermination");
		    String singalshowanchor=p.getProperty("pre.text.singalshowanchor");
		    String singalshowchild=p.getProperty("pre.text.singalshowchild");
		    String schoiceshowoptionDelete=p.getProperty("post.text.showoptionDelete");
		    String schoicehideoptionDelete=p.getProperty("post.text.hideoptionDelete");
		    String scamera=p.getProperty("post.text.schoicecamera");
		    gf.click("xpath",singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",schoiceshowimg);
            gf.click("xpath",schoiceshowimg);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",schoicehideimg);
            gf.click("xpath",schoicehideimg);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",singalshowtermination);
            gf.click("xpath",singalshowtermination);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",schoiceeditbtn);
            gf.click("xpath",schoiceeditbtn);
            gf.sleep(2000);
            gf.cleartext("xpath", imgpopuptextarea);
            gf.sendKeys("xpath", imgpopuptextarea,"update singal type Question");
            gf.sleep(1000);
          /*implement text format*/
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath", imgpopuptextarea,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following listTag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list");
            gf.sleep(1000);
            gf.keyboardUp(5);
            gf.sleep(1000);
            gf.keyboardDown(5);
            gf.sleep(1000);
            gf.cleartext("xpath",imgpopuptextarea);
            gf.sendKeys("xpath",imgpopuptextarea,"update singal type Question");
            String scnone=p.getProperty("post.text.scnone");
            String scsecondspecialopt=p.getProperty("post.text.scsecondspecialopt");
            String scfreetext=p.getProperty("post.text.scfreetext");
            String deletepopupcancelbtn=p.getProperty("post.text.cancelbtnofdletepopup");
            gf.sleep(1000);
            gf.click("xpath",scpopupspecialopt);
            gf.mousemorehover("xpath",scnone);
            gf.sleep(1000);
            gf.click("xpath",scnone);
            gf.sleep(1000);
            gf.cleartext("xpath", scnoneofthese);
            gf.sendKeys("xpath", scnoneofthese,"None of above"); 
            gf.sleep(2000);
			gf.click("xpath",scsecondspecialopt);
			gf.sleep(1000);
			gf.mousemorehover("xpath",scfreetext);
			gf.click("xpath",scfreetext);
		    gf.sleep(1000);
			gf.click("xpath",directaddoptions);
			gf.sleep(1000);
			gf.sendKeys("xpath",writeYouroptionsHere,"write option");
	        gf.sleep(1000);
	        gf.click("xpath", constructopions);
	        gf.sleep(2000);
		    gf.click("xpath",imgpopupsavebtn);
            // gf.KeyboardEnter(1);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",singalshowanchor);
            gf.click("xpath",singalshowanchor);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",singalshowchild);
            gf.click("xpath",singalshowchild);
            gf.sleep(1000);
            gf.keyboardtab(1);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",schoiceshowoptionDelete);
            gf.click("xpath",schoiceshowoptionDelete);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",schoicehideoptionDelete);
            gf.click("xpath",schoicehideoptionDelete);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",DeleteBtn);
            gf.click("xpath",DeleteBtn);
            gf.sleep(1000);
            gf.click("xpath",deletepopupcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",DeleteBtn);
            gf.click("xpath",DeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            gf.click("xpath",likertQ);
            gf.sleep(2000);
            gf.sendKeys("xpath",likerttypeyourQ,"Enter lekert typ Quesion");
            gf.sleep(2000);
            gf.click("xpath",save);
            String likertshowimage=p.getProperty("post.text.likertshowimg");
            String likertcamera=p.getProperty("post.text.likertcamera");
            gf.sleep(2000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertshowimage);
            gf.click("xpath",likertshowimage);
            gf.sleep(2000);
            gf.click("xpath", likertcamera);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            String freetextdotopt=p.getProperty("post.text.freetextdotopt");
            String freetextshowimage=p.getProperty("post.text.freetextshowimage");
            String freetextcamera=p.getProperty("post.text.Freetextcameraicon");
            String likertedit=p.getProperty("post.text.likertedit");
            String likertpopuptextfield=p.getProperty("post.text.likerttextfield");
            String likertpopupsavebtn=p.getProperty("post.text.likertpopupsavebtn");
            String likertswapicons=p.getProperty("post.text.likertswapicons");
            String likernotlikely=p.getProperty("post.text.likernotlikelys");
            String plustooltip=p.getProperty("post.text.popupplustooltip");
            String popupminus=p.getProperty("post.text.popupminus");
            gf.click("xpath",freetext);
            gf.sleep(2000);
            gf.sendKeys("xpath",typeyourquestion,"enter freetext type Question ");
            gf.click("xpath",save);
            gf.sleep(2000);
            gf.click("xpath",freetextdotopt);
            gf.sleep(3000);
            gf.mousemorehover("xpath",freetextshowimage);
            gf.click("xpath",freetextshowimage);
            gf.sleep(2000);
            gf.click("xpath",freetextcamera);
            gf.sleep(2000);            
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
          //  String likertdot1=p.getProperty("post.text.dotoptafteruploadimg");
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertedit);
            gf.click("xpath",likertedit);
            gf.sleep(1000);
            gf.cleartext("xpath",likertpopuptextfield);
            gf.sendKeys("xpath",likertpopuptextfield,"update likert Question");
            gf.sleep(1000);
            /*implement text format*/
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(1000);
            gf.cleartext("xpath",likertpopuptextfield);
            gf.sendKeys("xpath",likertpopuptextfield,"Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following listTag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list Tag-Name should not be visible to User (Admin) inside text field area while updating the question text field using Select and Format text toolbar through Edit option from the Preview Questions of  different types of Custom question defined in the following list");
            gf.sleep(1000);
            gf.keyboardUp(5);
            gf.sleep(1000);
            gf.keyboardDown(5);
            gf.sleep(1000);
            gf.cleartext("xpath",likertpopuptextfield);
            gf.sendKeys("xpath",likertpopuptextfield,"update likert Question");
            gf.sleep(1000);
            gf.cleartext("xpath",likernotlikely);
            gf.sendKeys("xpath",likernotlikely,"liker scale type Question?");
            gf.sleep(1000);
            gf.click("xpath", plustooltip);
            gf.sleep(1000);
            gf.click("xpath", plustooltip);
            gf.sleep(1000);
            gf.click("xpath", plustooltip);
            gf.sleep(1000);
            gf.click("xpath", plustooltip);
            gf.sleep(1000);
            gf.click("xpath", plustooltip);
            gf.sleep(1000);
            gf.click("xpath", plustooltip);
            gf.sleep(2000);
            gf.click("xpath",popupminus);
            gf.sleep(1000);
            gf.click("xpath",popupminus);
            gf.sleep(1000);
            gf.click("xpath",popupminus);
            gf.sleep(1000);
            gf.click("xpath",popupminus);
            gf.sleep(1000);
            gf.click("xpath",popupminus);
            gf.sleep(1000);
            gf.click("xpath",popupminus);
            gf.sleep(2000);
            gf.click("xpath",likertpopupsavebtn);
            gf.sleep(3000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertedit);
            gf.click("xpath",likertedit);
            gf.sleep(1000);
            gf.click("xpath", likertswapicons);
            gf.sleep(1000);
            gf.click("xpath", likertswapicons);
            gf.sleep(1000);
            gf.click("xpath", likertswapicons);
            gf.sleep(1000);
            gf.click("xpath", likertswapicons);
            gf.sleep(1000);
            gf.click("xpath",popupcancelbtn);
            gf.sleep(2000);
          /*The numeric options in the likert scale should be getting highlighted while updating Likert Scale type question or its corresponding options choice through Edit option of the Preview Questions*/
            String popupradiobtnone=p.getProperty("post.text.popupradiobtnone");
            String popupradiobtntwo=p.getProperty("post.text.popupradiobtntwo");
            String popupradiobtnthree=p.getProperty("post.text.popupradiobtnthree");
            String popupradiobtnfour=p.getProperty("post.text.popupradiobtnfour");
            String popupradiobtnfive=p.getProperty("post.text.popupradiobtnfive");
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertedit);
            gf.click("xpath",likertedit);
            gf.sleep(1000);
            gf.mousemorehover("xpath",popupradiobtnone);
            gf.sleep(1000);
            gf.mousemorehover("xpath",popupradiobtntwo);
            gf.sleep(1000);
            gf.mousemorehover("xpath",popupradiobtnthree);
            gf.sleep(1000);
            gf.mousemorehover("xpath",popupradiobtnfour);
            gf.sleep(1000);
            gf.mousemorehover("xpath",popupradiobtnfive);
            gf.sleep(1000);
            gf.click("xpath",popupcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertedit);
            gf.click("xpath",likertedit);
            gf.sleep(1000);
            gf.click("xpath",popupcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertDeleteBtn);
            gf.click("xpath", likertDeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            String freetextdotoption=p.getProperty("post.text.freetextdotoption");
            String FreeDeleteBtn=p.getProperty("post.text.freetextDeleteDtn");
            gf.click("xpath",freetextdotoption);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertedit);
            gf.click("xpath",likertedit);
            gf.sleep(1000);
            gf.cleartext("xpath",likertpopuptextfield);
            gf.sendKeys("xpath",likertpopuptextfield,"update free text Question");
            gf.sleep(1000);
            /*implement text field format */
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(2000);
            gf.click("xpath", bold);
            gf.sleep(1000);
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", italic);
            gf.sleep(1000);
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", underline);
            gf.sleep(1000);
            gf.sendKeys("xpath",likertpopuptextfield,Keys.CONTROL+"A");
            gf.sleep(1000);
            gf.click("xpath", paragraph);
            gf.sleep(1000);
            gf.click("xpath", removexicon);
            gf.sleep(2000);
            gf.click("xpath",likertpopupsavebtn);
            gf.sleep(3000);
            gf.click("xpath",freetextdotoption);
            gf.sleep(2000);
            gf.mousemorehover("xpath",FreeDeleteBtn);
            gf.click("xpath", FreeDeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            /* Grid and */
            gf.click("xpath",grid);
            gf.sleep(2000);
		    gf.sendKeys("xpath",gridtypeyourQ,"Could you tell if someone is having a heart attack?");
		    gf.sendKeys("xpath",option1,"A");
		    gf.sendKeys("xpath", value1,"Yes");
		    gf.sendKeys("xpath",option2,"B");
		    gf.sendKeys("xpath",value2,"Not intrested" );
		    gf.sleep(1000);
		    gf.click("xpath",save);
		    gf.sleep(2000);
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath", typeyourQofimg,"First Question of drag and drop functionality?");
            gf.sleep(1000);
            gf.click("xpath", uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000); 
            gf.click("xpath",save);
            gf.sleep(3000);
            gf.click("xpath",griddotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",gridshowimg);
            gf.click("xpath",gridshowimg);
            gf.sleep(1000);
            gf.click("xpath",gridcamera);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            String dotopt=p.getProperty("post.textdoptofimg");
            String imgdotafteruploadimg=p.getProperty("post.text.imagedotopts");
            gf.click("xpath",dotopt); 
            gf.sleep(2000);
            gf.mousemorehover("xpath",showimg);
            gf.click("xpath",showimg);
            gf.sleep(1000);
            gf.click("xpath",imgcamera);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            String gridthreedotopt=p.getProperty("post.text.gridoptafteruploadimg");
            gf.click("xpath",gridthreedotopt);
		    gf.sleep(2000);
            gf.mousemorehover("xpath",gridDeletebtn);
            gf.click("xpath",gridDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            String  imgDeleteBtn=p.getProperty("post.text.imgDeletebtn");
            gf.click("xpath",imgdotafteruploadimg);
            gf.sleep(2000);
            gf.mousemorehover("xpath",imgDeleteBtn); 
            gf.click("xpath",imgDeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000); 
            gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"New single choice type Question?");
		    gf.sendKeys("xpath",answers1,"A");
		    gf.sendKeys("xpath",answer2,"B");
		    gf.sendKeys("xpath",answer3,"C");
		    gf.sleep(1000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
		    gf.click("xpath",mltQ);
            gf.sleep(2000);
            gf.sendKeys("xpath",mltTypeyourQ,"multiple choice type Question ");
            gf.sendKeys("xpath",answers1,"A");
            gf.sendKeys("xpath",answer2,"B");
            gf.sleep(2000);
            gf.click("xpath",save);
	        gf.sleep(3000);
	        gf.click("xpath",singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath", showimg);
            gf.click("xpath", showimg);
            gf.sleep(1000);
            gf.click("xpath",scamera);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            String mltsecondQdotopt=p.getProperty("post.text.mltsecondOpt");
            String mltcameraicon=p.getProperty("post.text.mltcameraicon");
            gf.click("xpath",mltsecondQdotopt);
            gf.sleep(3000);
            gf.mousemorehover("xpath",mltshowimg);
            gf.sleep(1000);
            gf.click("xpath",mltshowimg);
            gf.sleep(1000);
            gf.click("xpath",mltcameraicon);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            String schoiceafteruploadimg=p.getProperty("post.text.singalchoiceafteruploadimg");
            String mlttypedotopt=p.getProperty("post.text.mltchoicedotopt") ;
            String scpopupanswer1=p.getProperty("post.text.popuptextarea");
            String scpopupanswer2=p.getProperty("post.text.scpopuptextarea");
            String scpopupdeleteicon6=p.getProperty("post.text.scpopupDeleteicon6");
            String scpopupdeleteicon5=p.getProperty("post.text.scpopupDeleteicon5");
            gf.click("xpath",schoiceafteruploadimg);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",schoiceeditbtn);
	        gf.click("xpath",schoiceeditbtn);
	        gf.sleep(1000);
	        gf.cleartext("xpath", scpopupanswer1);
	        gf.cleartext("xpath", scpopupanswer2);
	        gf.click("xpath", popupplusicon);
	        gf.sleep(1000);
	        gf.click("xpath", popupplusicon);
	        gf.sleep(1000);
	        gf.click("xpath", scpopupdeleteicon6);
	        gf.sleep(1000);
	        gf.click("xpath", scpopupdeleteicon5);
	        gf.sleep(2000);
	        gf.click("xpath",popupcancelbtn);
	        gf.sleep(2000);
	        gf.click("xpath",mlttypedotopt);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",mlteditbtn);
	        gf.click("xpath",mlteditbtn);
	        gf.sleep(1000);
	        gf.cleartext("xpath", scpopupanswer1);
	        gf.cleartext("xpath", scpopupanswer2);
	        gf.click("xpath", popupplusicon);
	        gf.sleep(1000);
	        gf.click("xpath", popupplusicon);
	        gf.sleep(1000);
	        gf.click("xpath", scpopupdeleteicon6);
	        gf.sleep(1000);
	        gf.click("xpath", scpopupdeleteicon5);
	        gf.sleep(2000);
	        gf.click("xpath",popupcancelbtn);
	        gf.sleep(2000);
            gf.click("xpath",schoiceafteruploadimg);
            gf.sleep(2000);
            gf.mousemorehover("xpath",DeleteBtn);
            gf.click("xpath",DeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            /*Verification of Show Option Delete inside Option Menu*/
            gf.click("xpath",mlttypedotopt);
            gf.sleep(3000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.click("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.click("xpath",deletepopupcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",mlttypedotopt);
            gf.sleep(3000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.click("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            /*User (Admin) can remove the no. of options choices for answering against each of the created Custom questions while updating specific type of question or its corresponding options choice through Edit option of the Preview Questions based on different types of Custom question defined in the following list 1. For Single Choice type 2. For Multiple Choice type 3. For Grid type */
            String gridoption3Deleteicon=p.getProperty("post.text.gridoption3");
            String gridvalue3Deleteicon=p.getProperty("post.text.gridvalue4");
            String gridpopupsavebtn=p.getProperty("post.text.gridpopupsavebtn");
            String gridDeleteiconofshowoptionDelete=p.getProperty("post.text.deleteiconofshowoptionDelete");
            gf.click("xpath",grid);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",gridtypeyourQ,"Could you tell if someone is having a heart attack?");
		    gf.sendKeys("xpath",option1,"option 1");
		    gf.sendKeys("xpath", value1,"value1");
		    gf.sendKeys("xpath",option2,"option 2");
		    gf.sendKeys("xpath",value2,"value 2" );
		    gf.sleep(1000);
		    gf.click("xpath",save);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",grideditbtn);
            gf.click("xpath",grideditbtn);
            gf.sleep(1000);
            gf.click("xpath",gridaddmoreopt);
            gf.click("xpath",gridaddmorevalues);
            gf.sleep(1000);
            gf.click("xpath",gridoption3Deleteicon);
            gf.click("xpath",gridvalue3Deleteicon);
            gf.sleep(1000);
            gf.click("xpath",gridpopupsavebtn);
            gf.sleep(2000);
            /*Delete icon should appears against each options choices (or each values if its grid choice type question) while updating options choices  for specific type question through Show Delete option under Preview Questions for the following list of type Custom question */
            gf.click("xpath",griddotopt);
            gf.mousemorehover("xpath",gridshowoptionDelete);
            gf.click("xpath",gridshowoptionDelete);
            gf.sleep(1000);
            gf.click("xpath",gridDeleteiconofshowoptionDelete);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            /*Delete grid Question*/
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
            gf.mousemorehover("xpath",gridDeletebtn);
            gf.click("xpath",gridDeletebtn);
            gf.sleep(1000);
            gf.click("xpath", deletepopupcancelbtn);
            gf.sleep(2000);
            gf.click("xpath",griddotopt);
            gf.mousemorehover("xpath",gridDeletebtn);
            gf.click("xpath",gridDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            /*User (Admin) can add only 1 options emoji at a time for particular question using Show Option Emoji under Preview Questions of the Likert Scale type Custom question  */
            String Showoptionemoji=p.getProperty("post.text.showoptionemoji");
            String cameraiconshowoptionemoji=p.getProperty("post.text.cameraiconofshowoptionemoji");
            String hideoptionemoji=p.getProperty("post.text.hideoptionemoji");
            String secondcameraiconofshowemoji=p.getProperty("post.text.secondcameraiconofshowoptionemoji");
            String uploadQuestion=p.getProperty("post.text.orclickhere");
            String maxQalertmessage=p.getProperty("post.text.twoQallowederrormsg");
            gf.click("xpath",likertQ);
            gf.sleep(2000);
            gf.sendKeys("xpath",likerttypeyourQ,"Likert type Question for show option of image");
            gf.sleep(2000);
            gf.click("xpath",save);
            gf.sleep(2000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath", Showoptionemoji);
            gf.click("xpath",Showoptionemoji);
            gf.sleep(1000);
            gf.click("xpath",cameraiconshowoptionemoji);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            gf.click("xpath", secondcameraiconofshowemoji);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\exceldata.exe");
            gf.sleep(3000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath", hideoptionemoji);
            gf.click("xpath",hideoptionemoji);
            gf.sleep(2000);
            gf.click("xpath",likertDotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",likertDeleteBtn);
            gf.click("xpath",likertDeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(2000);
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadQuestion.exe");
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",DeleteBtn);
            gf.click("xpath",DeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            gf.click("xpath",mltchoiceQDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.click("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
          /*User (Admin) cannot upload any excel file that contains more than 2 survey questions either same type or different type of Custom Question under Create Custom Question of Question Palette */
            String filetypeerrormsg=p.getProperty("post.text.filetypeerrormsg");
            String Qtypeinvalid=p.getProperty("post.text.inavaliddata");
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\maximumtwoQallowed.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",maxQalertmessage); 
            gf.sleep(2000);
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",filetypeerrormsg);
            gf.sleep(2000);
            /*User (Admin) cannot upload any excel file that does not contain relevant data as of questions either same type or different type of Custom Question under Create Custom Question of Question Palette  */
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\invaliddata.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",Qtypeinvalid);
            gf.sleep(2000);
            /* User (Admin) can upload max 2 excel file incase if  it contains 1 survey question of any type of Custom Question under Create Custom Question of Question Palette */
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\firstQ.exe");
            gf.sleep(2000);
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\secondQ.exe");
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",DeleteBtn);
            gf.click("xpath",DeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            gf.click("xpath",mltchoiceQDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.click("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            /*User (Admin) cannot upload any excel file incase already two survey question of any type of Custom Question are present inside Preview Question of Question Palette*/
            gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"New single choice type Question?");
		    gf.sendKeys("xpath",answers1,"A");
		    gf.sendKeys("xpath",answer2,"B");
		    gf.sendKeys("xpath",answer3,"C");
		    gf.sleep(1000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
		    gf.click("xpath",mltQ);
            gf.sleep(2000);
            gf.sendKeys("xpath",mltTypeyourQ,"multiple choice type Question ");
            gf.sendKeys("xpath",answers1,"A");
            gf.sendKeys("xpath",answer2,"B");
            gf.sleep(2000);
            gf.click("xpath",save);
            gf.sleep(2000);
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\firstQ.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",maxQalertmessage); 
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",DeleteBtn);
            gf.click("xpath",DeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            gf.click("xpath",mltchoiceQDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.click("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            /*User (Admin) can upload max 1 excel file incase already a survey question of any type of Custom Question is present inside Preview Question of Question Palette*/
            gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    gf.sendKeys("xpath",typeyourquestion,"New single choice type Question?");
		    gf.sendKeys("xpath",answers1,"A");
		    gf.sendKeys("xpath",answer2,"B");
		    gf.sendKeys("xpath",answer3,"C");
		    gf.sleep(1000);
		    gf.click("xpath", save);
		    gf.sleep(2000);
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\secondQ.exe");
            gf.sleep(2000);
            gf.click("xpath",singalchoiceFirstQdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",DeleteBtn);
            gf.click("xpath",DeleteBtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            gf.click("xpath",mltchoiceQDotOpt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",mltDeletebtn);
            gf.click("xpath",mltDeletebtn);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.sleep(3000);
            /*User (Admin) cannot overwrite the excel file by using multiple times drag & drop while uploading file that contains either same type or different type of Custom Question under Create Custom Question of Question Palette */
            String invalidindexterrormsg=p.getProperty("post.text.invalidindex");
            String downloadserveyQ=p.getProperty("post.text.downloadserveyQtemplate");
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadQuestion.exe");
            gf.sleep(2000);
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadQuestion.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",maxQalertmessage); 
            gf.sleep(2000);
            /*User (Admin) cannot upload blanked excel file of Question Palette*/
            gf.click("xpath",uploadQuestion);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\blank.exe");
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",invalidindexterrormsg); 
            gf.sleep(2000);
            /*Verification of Download survey template here link */
            gf.click("xpath", downloadserveyQ);
            gf.sleep(3000);
            gf.closeBrowser();
            }
    public void reviewandCheckout() throws IOException, AWTException
    {       gf.implicitwait(20);
		    String newcompain=p.getProperty("upload.text.newcompain");
		    String compname=p.getProperty("upload.text.compname");
		    String video=p.getProperty("upload.text.video");
		    String testtype=p.getProperty("upload.text.testtype");
		    String category=p.getProperty("upload.text.category");
		    String next=p.getProperty("upload.text.next");
		    String toastmsg=p.getProperty("upload.text.toastmsg");
		    String nail=p.getProperty("config.text.nail");
		    String title=p.getProperty("upload.text.title");
		    String brows=p.getProperty("upload.text.browsbtn");
		    String states=p.getProperty("config.text.states");
		    String quota=p.getProperty("review.text.Quota");
		    String createquotabtn=p.getProperty("config.text.crequota");
		    String saveandcontinuebtn=p.getProperty("review.text.saveandcontinuebtn");
		    String emotion=p.getProperty("config.text.emotion");
		    String dislike=p.getProperty("config.text.dislike");
		    String addandnext=p.getProperty("review.text.add&nextbtn");
		    String Questionaddedtoastmsg=p.getProperty("review.text.Questionaddedtoastmsg");
		    String nextbtn=p.getProperty("pre.text.next");
		    String reviewnext=p.getProperty("review.text.next");
		    /*Read Data from Excel sheet*/
		    ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\TestingData.xlsx");
	        xcel.getRowCount("ReviewData");
	        String compaignname=xcel.getCellData("ReviewData", 1, 0);
	        String compaignTitle=xcel.getCellData("ReviewData",1,1);
	        /*Verification of  Review Page Navigation for Asset inforamtion*/
            gf.gettextofwebelement("xpath",newcompain);
			gf.sleep(2000);
			gf.click("xpath",newcompain);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",compname,compaignname);
			gf.sleep(2000);
		    gf.click("xpath",brows);
			gf.sleep(3000);
			gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
			gf.sleep(5000);
			gf.click("xpath",video);
			gf.sleep(3000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.cleartext("cssSelector",title);
			gf.sleep(3000);
			gf.sendKeys("cssSelector",title,compaignTitle);
			gf.sleep(2000);
			gf.click("xpath",testtype);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.click("xpath",category);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
	        gf.keyboardtab(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(1000);
	        gf.keyboardDown(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",nail);
            gf.sleep(3000);
			gf.click("xpath",next);
			gf.sleep(3000);
			gf.gettextofwebelement("xpath",toastmsg);
			gf.sleep(5000);
			gf.click("xpath",emotion);
			gf.sleep(2000);
			gf.click("xpath",dislike);
			gf.sleep(2000);
			gf.click("xpath", states);
			gf.sleep(2000);
			gf.keyboardUp(2);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(4000);
			gf.click("xpath",quota);
			gf.sleep(3000);
			gf.click("xpath",createquotabtn);
			gf.sleep(4000);
			gf.click("xpath",saveandcontinuebtn);
			gf.sleep(5000);
			gf.click("xpath",addandnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",Questionaddedtoastmsg);
			gf.click("xpath", nextbtn);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.getTitle();
			gf.sleep(2000);
			gf.click("xpath",addandnext);
			gf.sleep(2000);
			gf.click("xpath",reviewnext);
			gf.sleep(1000);
			gf.KeyboardEnter(1); 	
			gf.sleep(2000);
		    /*Verification of  Configure Page Navigation in order to modify Asset information*/
			gf.click("xpath",reviewnext);
			gf.sleep(1000);
			gf.KeyboardEnter(1); 	
			gf.sleep(2000);
            /*Verification of Dashboard Page Navigation from Review Page in order to finish the campaign configuration*/	
			String postprogressbar=p.getProperty("review.text.postprogressbar");
			String updateandnext=p.getProperty("review.text.updateandnext");
			String finishtab=p.getProperty("review.text.finishtab");
			String preservey=p.getProperty("review.text.preservieyprogressbar");
			String singlechoice=p.getProperty("pre.text.singlechoice");
			String typeyourquestion=p.getProperty("pre.text.typeyourquestion");
			String answers1=p.getProperty("pre.text.answer1");
			String answer2=p.getProperty("pre.text.answer2");
			String answer3=p.getProperty("pre.text.answer3");
			String save=p.getProperty("pre.text.save");
			String preQdotopt=p.getProperty("review.text.preedotoption");
			String preshowimg=p.getProperty("review.text.preshowimg");
			String pretermination=p.getProperty("review.text.termination");
			String preshowanchor=p.getProperty("review.text.showanchor");
			gf.sleep(2000);
			gf.click("xpath",postprogressbar);
			gf.sleep(3000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
			gf.click("xpath",reviewnext);
			gf.sleep(1000);
			gf.KeyboardEnter(1); 	
			gf.sleep(2000);
			gf.click("xpath", finishtab);
			gf.getTitle();
			gf.sleep(2000);
			gf.back();
			gf.sleep(2000);
			gf.click("xpath",preservey);
			gf.sleep(2000);
            gf.click("xpath",updateandnext);
            gf.sleep(2000);
		    gf.click("xpath", singlechoice);
		    gf.sleep(2000);
		    String singlechoiceQ=xcel.getCellData("ReviewData", 1, 2);
            String Firstoption=xcel.getCellData("ReviewData", 2, 2);
            String SecondOption=xcel.getCellData("ReviewData", 3, 2);
            String Thirdoption=xcel.getCellData("ReviewData", 4, 2);
            gf.sendKeys("xpath",typeyourquestion,singlechoiceQ);
		    gf.sendKeys("xpath",answers1,Firstoption);
		    gf.sendKeys("xpath",answer2,SecondOption);
		    gf.sendKeys("xpath",answer3,Thirdoption); 
		    gf.sleep(2000);
		    gf.click("xpath", save);
		    String multiplechoice=p.getProperty("pre.text.multiplechoice");
            String multipletypeQ=p.getProperty("pre.text.multipletypeQ");
            String mltanswer1=p.getProperty("pre.text.mltanswer1");
            String mltanswer2=p.getProperty("pre.text.mltanswer2");
            String mltanswer3=p.getProperty("pre.text.mltanswer3");
            String mltanswer4=p.getProperty("pre.text.mltanswer4");
            String Q5=p.getProperty("review.text.mltQ5");
            String mltdotoption=p.getProperty("review.text.mltdotopt");
            String hideimg=p.getProperty("review.text.hideimg");
            gf.sleep(2000);
            gf.click("xpath", multiplechoice);
            gf.sleep(2000);
            String multiplechoiceQ=xcel.getCellData("ReviewData", 1, 3);
            String multFirstopt=xcel.getCellData("ReviewData", 2, 3);
            String multSecondopt=xcel.getCellData("ReviewData", 3, 3);
            String multThirdopt=xcel.getCellData("ReviewData", 4, 3);
            String multFourthopt=xcel.getCellData("ReviewData", 5, 3);
            gf.sendKeys("xpath",multipletypeQ,multiplechoiceQ);
            gf.sendKeys("xpath",mltanswer1,multFirstopt);
            gf.sendKeys("xpath",mltanswer2,multSecondopt);
            gf.sendKeys("xpath",mltanswer3, multThirdopt);
            gf.sendKeys("xpath",mltanswer4,multFourthopt);
            gf.sleep(2000);
            gf.click("xpath", save);
		    gf.sleep(2000);
		    gf.click("xpath", nextbtn);
		    gf.sleep(2000);
		    gf.click("xpath",updateandnext);
		    gf.sleep(2000);
		    gf.click("xpath", nextbtn);
		    gf.sleep(1000);
		    gf.KeyboardEnter(1);
		    gf.sleep(2000);
		    gf.click("xpath",preQdotopt);
		    gf.sleep(2000);
		    /*Components of Option Menu should getting to be highlighted under relevant Pre or Post Survey Questions section */
		    gf.mousemorehover("xpath",preshowimg);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath", pretermination);
		    gf.sleep(1000);
		    gf.mousemorehover("xpath",preshowanchor);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.click("xpath", preQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",preshowimg);
		    gf.click("xpath",preshowimg);
		    gf.sleep(1000);
		    gf.click("xpath", preQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",pretermination);
		    gf.click("xpath",pretermination);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.click("xpath", preQdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",preshowanchor);
		    gf.click("xpath",preshowanchor);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",Q5);
		    gf.click("xpath",Q5);
		    gf.sleep(2000);
		    gf.click("xpath",mltdotoption);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",hideimg);
		    gf.click("xpath",hideimg);
		    gf.sleep(1000);
		    gf.click("xpath",mltdotoption);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",pretermination);
		    gf.click("xpath",pretermination);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.click("xpath",mltdotoption);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",preshowanchor);
		    gf.click("xpath",preshowanchor);
		    gf.sleep(1000);
		    gf.keyboardtab(1);
		    gf.sleep(2000);
		    gf.click("xpath",preservey);
			gf.sleep(2000);
            gf.click("xpath",updateandnext);
            gf.sleep(2000);
            String schoicedotopt=p.getProperty("review.text.singalchoiceopt");
            String mltdotopt=p.getProperty("review.text.mltdotopt");
            String screviewDeletebtn=p.getProperty("review.text.Deletebtn");
		    gf.click("xpath",schoicedotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",screviewDeletebtn);
		    gf.click("xpath",screviewDeletebtn);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(2000);
	        gf.click("xpath", mltdotopt);
		    gf.sleep(2000);
		    gf.mousemorehover("xpath",screviewDeletebtn);
		    gf.click("xpath",screviewDeletebtn);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(2000);
		    String image=p.getProperty("pre.text.image");
            String typeyourQofimg=p.getProperty("pre.text.imagetpyeyourQ");
            String uploadimagefile=p.getProperty("pre.text.imageupload");
            String addmorimage=p.getProperty("pre.text.addmoreimge");
            String imgdotopt=p.getProperty("review.text.image");
            String showimage=p.getProperty("review.text.showimages");
            String imagecamera=p.getProperty("review.text.imagecameraicon");
            String fourthQ=p.getProperty("review.text.fourthQ");
            String imageQuestion=xcel.getCellData("ReviewData", 1, 5);
            gf.sleep(2000);
            gf.click("xpath", image);
            gf.sleep(2000);
            gf.sendKeys("xpath",typeyourQofimg,imageQuestion);
            gf.sleep(1000);
            gf.click("xpath",uploadimagefile);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(3000);
            gf.click("xpath",addmorimage);
            gf.sleep(2000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            gf.click("xpath",save);
            gf.sleep(2000);
            gf.click("xpath", imgdotopt);
            gf.sleep(2000);
            gf.mousemorehover("xpath",showimage);
            gf.click("xpath",showimage);
            gf.sleep(1000);
            gf.click("xpath", imagecamera);
            gf.sleep(1000);
            gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
            gf.sleep(2000);
            String grid=p.getProperty("review.text.grid");
            String gridtypeyourQ=p.getProperty("pre.text.gridQtextarea");
  		    String option1=p.getProperty("pre.text.option1");
  		    String option2=p.getProperty("pre.text.option2");
  		    String value1=p.getProperty("pre.text.value1");
  		    String value2=p.getProperty("pre.text.value2");
  		    String griddotop=p.getProperty("review.text.griddotopt");
  		    String gridcamera=p.getProperty("review.text.gridcamera");
  		    String presectiondototp=p.getProperty("review.text.preimgdotoptions");
  		    String prefiveQ=p.getProperty("review.text.prefiveQ");
  		    gf.click("xpath",grid);
  		    gf.sleep(2000);
  		    String gridQuestions=xcel.getCellData("ReviewData", 1,4);
  		    String optionFirst=xcel.getCellData("ReviewData", 2,4);
  		    String valueFirst=xcel.getCellData("ReviewData", 3,4);
  		    String optionSecond=xcel.getCellData("ReviewData",4,4);
  		    String valueSecond=xcel.getCellData("ReviewData", 5,4);
  		    gf.sendKeys("xpath",gridtypeyourQ,gridQuestions);
			gf.sendKeys("xpath",option1,optionFirst);
			gf.sendKeys("xpath", value1,valueFirst);
			gf.sendKeys("xpath",option2,optionSecond);
			gf.sendKeys("xpath",value2,valueSecond);
			gf.sleep(1000);
			gf.click("xpath",save);
			gf.sleep(2000);
			gf.click("xpath", griddotop);
			gf.sleep(2000);
			gf.mousemorehover("xpath",showimage);
			gf.click("xpath",showimage);
			gf.sleep(1000);
			gf.click("xpath",gridcamera);
			gf.sleep(1000);
			gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadimage.exe");
	        gf.sleep(2000);
			gf.click("xpath", nextbtn);
			gf.sleep(2000);
			gf.click("xpath",updateandnext);
			gf.sleep(2000);
		    gf.click("xpath", nextbtn);
		    gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
	        gf.click("xpath",fourthQ);
	        gf.sleep(3000);
	        gf.click("xpath",presectiondototp);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",showimage);
	        gf.click("xpath",showimage);
	        gf.sleep(2000);
	        gf.click("xpath",presectiondototp);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",hideimg);
	        gf.click("xpath",hideimg);
	        gf.sleep(2000);
	        String pregriddototp=p.getProperty("review.text.pregriddototp");
	        String griddotoptaftershowimg=p.getProperty("review.text.griddotoptaftershowimg");
	        String questiontwo=p.getProperty("review.text.Questiontwo");
	        gf.click("xpath", prefiveQ);
	        gf.sleep(2000);
	        gf.click("xpath",pregriddototp);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",showimage);
	        gf.click("xpath",showimage);
	        gf.sleep(2000);
	        gf.click("xpath", prefiveQ);
	        gf.sleep(2000);
	        gf.click("xpath",griddotoptaftershowimg);
	        gf.sleep(2000);
	        gf.mousemorehover("xpath",hideimg);
	        gf.click("xpath",hideimg);
	        gf.sleep(2000);
	        gf.click("xpath", questiontwo);
	        /*User (Admin) can make the final payment for the campaign */
	        gf.sleep(2000);
			gf.click("xpath",finishtab);
	        gf.sleep(4000);
	        String finshandpay=p.getProperty("review.text.finshandpay");
	        String internalservererror=p.getProperty("review.text.internalservererror");
	        String reviewtab=p.getProperty("review.text.reviewtab");
	        String revieweDeletebtn=p.getProperty("review.text.checkoutDeletebtn");
	        String reviewcancelbtn=p.getProperty("review.text.videocancelbtn");
	        String addasset=p.getProperty("review.text.addasset");
	        String addanotherassets=p.getProperty("review.text.addanotherassets");
	        gf.click("xpath", finshandpay);
	        gf.sleep(4000);
	        gf.gettextofwebelement("xpath",internalservererror);
	        gf.sleep(3000);
	        gf.click("xpath",reviewtab);
	        gf.sleep(2000);
	        gf.click("xpath",finishtab);
	        gf.sleep(3000);
	        gf.click("xpath",revieweDeletebtn);
	        gf.sleep(2000);
	        gf.click("xpath",reviewcancelbtn);
	        gf.sleep(1000);
	        gf.click("xpath",addasset);
	        gf.sleep(2000);
	        gf.click("xpath",addanotherassets);
	        gf.sleep(3000);
			gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\autoit\\uploadFile.exe");
			gf.sleep(5000);
			gf.click("xpath",video);
			gf.sleep(3000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.cleartext("cssSelector",title);
			gf.sleep(3000);
			String secondassetTitle=xcel.getCellData("ReviewData", 1,6);
			String categories=p.getProperty("review.text.category");
			gf.sendKeys("cssSelector",title,secondassetTitle);
			gf.sleep(2000);
			gf.click("xpath",testtype);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			gf.click("xpath",categories);
			gf.sleep(2000);
	        gf.keyboardDown(1);
	        gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.sleep(2000);
	        gf.keyboardtab(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
	        gf.sleep(1000);
	        gf.keyboardDown(1);
	        gf.sleep(1000);
	        gf.KeyboardEnter(1);
			gf.sleep(2000);
			gf.click("xpath",nail);
            gf.sleep(3000);
            gf.click("xpath",next);
            gf.sleep(9000);
			gf.click("xpath",emotion);
			gf.sleep(2000);
			gf.click("xpath",dislike);
			gf.sleep(2000);
			gf.click("xpath", states);
			gf.sleep(2000);
			gf.keyboardUp(2);
			gf.sleep(2000);
			gf.KeyboardEnter(1);
			gf.sleep(3000);
			String createquotaradiobtn=p.getProperty("review.text.createquotaradiobtn");
			gf.click("xpath",createquotaradiobtn); 
			gf.sleep(3000);
			gf.click("xpath",createquotabtn);
			gf.sleep(4000);
			gf.click("xpath",saveandcontinuebtn);
			gf.sleep(5000);
			gf.click("xpath",addandnext);
			gf.sleep(2000);
			gf.gettextofwebelement("xpath",Questionaddedtoastmsg);
			gf.click("xpath", nextbtn);
			gf.sleep(1000);
			gf.KeyboardEnter(1);
			gf.getTitle();
			gf.sleep(2000);
			gf.click("xpath",addandnext);
			gf.sleep(2000);
			gf.click("xpath",reviewnext);
			gf.sleep(1000);
			gf.KeyboardEnter(1); 	
			gf.sleep(2000);
		    gf.click("xpath",reviewnext);
			gf.sleep(1000);
			gf.KeyboardEnter(1); 	
			gf.sleep(2000);
            gf.click("xpath", finishtab);
	        gf.sleep(2000);
	        gf.getTitle();
	        gf.sleep(2000);
	        gf.closeBrowser();
	        }
    public void imageindextestcase() throws IOException
    {       gf.currentpageUrl();
    	    String logo=p.getProperty("imgindex.text.logo");
    	    ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\imagecompaigneData\\imagecompaignExcelData.xlsx");
    	    String Sspath=xcel.getCellData("imageindexdata",1,0);
    	    /* Verification of Index Page Navigation */
    	    gf.sleep(5000);
    	    gf.click("xpath",logo);
    	    gf.sleep(2000);
    	    gf.screenshot(Sspath,"IP_01");
    	    /* Verification of Option Menu icon */
    	    String optionmenue=p.getProperty("imgindex.text.optionmenue");
    	    gf.click("xpath", optionmenue);
    	    gf.sleep(1000);
    	    gf.screenshot(Sspath, "IP_02");
            /* Verification of Support option inside Option Menu icon*/   
    	    String support=p.getProperty("imgindex.text.support");
    	    gf.mousemorehover("xpath",support);
    	    gf.click("xpath", support);
    	    gf.sleep(2000);
    	    gf.screenshot(Sspath,"IP_03");
    	    /* Verification of Social link of Monet Network that appears inside Support Page*/
    	    String fblink=p.getProperty("imgindex.text.fblink");
    	    String twitterlink=p.getProperty("imgindex.text.twirtter");
    	    String linkedinlink=p.getProperty("imgindex.text.linkedin");
    	    gf.click("xpath",fblink);
    	    gf.sleep(3000);
    	    gf.screenshot(Sspath,"IP_06");
    	    gf.back();
    	    gf.sleep(3000);
    	    gf.click("xpath",twitterlink);
    	    gf.sleep(3000);
    	    gf.screenshot(Sspath, "IP_08");
    	    gf.sleep(2000);
    	    gf.back();
    	    gf.click("xpath",linkedinlink);
    	    gf.sleep(3000);
    	    gf.screenshot(Sspath, "IP_07");
            gf.back();
            gf.sleep(2000);
            String monetlink=p.getProperty("imgindex.text.monetnetworklink");
            gf.click("xpath", monetlink);
            gf.screenshot(Sspath,"IP_04");
            gf.sleep(4000);
            gf.back();
            /* Verification of Logout option inside Option Menu icon*/
            gf.sleep(2000);
            gf.click("xpath",logo);
    	    gf.sleep(2000);
            gf.click("xpath",optionmenue);
    	    String logoutbtn=p.getProperty("imgindex.text.logout");
    	    gf.mousemorehover("xpath", logoutbtn);
    	    gf.screenshot(Sspath,"IP_09");
            gf.click("xpath",logoutbtn);
            gf.sleep(2000);
            String profile=p.getProperty("imgindex.text.profile");
            String emailid=xcel.getCellData("imageindexdata",1,1);
            String password=xcel.getCellData("imageindexdata",1,2);
            login(emailid,password);
            gf.sleep(2000);
            gf.click("xpath",logo);
    	    gf.sleep(2000);
    	    gf.click("xpath", optionmenue);
    	    gf.sleep(2000);
    	    /* Verification of Profile option inside Option Menu icon*/
    	    gf.mousemorehover("xpath",profile);
    	    gf.click("xpath",profile);
    	    gf.sleep(2000);
    	    gf.screenshot(Sspath,"IP_12");
    	    /* User (Admin) can back navigate to the  Index page from Profile Page*/
    	    gf.back();
    	    gf.sleep(2000);
    	    /* Verification of the video inside Index Page*/
    	    String profilevideoicon=p.getProperty("imgindex.text.videolink");
    	    gf.click("xpath",profilevideoicon);
    	    gf.sleep(4000);
    	    gf.click("xpath",profilevideoicon);
    	    /* Watch Now tab should be clickable */
    	    gf.sleep(2000);
    	    String watchnowbtn=p.getProperty("imgindex.text.watchnowbtn");
    	    gf.click("xpath",watchnowbtn);
    	    /* User (Admin) can pause the video*/
    	    gf.sleep(4000);
    	    gf.click("xpath",profilevideoicon);
    	    gf.sleep(1000);
    	    /* Verification of Dashboard tab*/
    	    String dashboard=p.getProperty("imgindex.text.dashboardbtn");
    	    gf.click("xpath", dashboard);
    	    gf.sleep(3000);
    	    gf.back();
    	    gf.sleep(2000);
    	    String createbtn=p.getProperty("imgindex.text.createbtn");
    	    gf.click("xpath", createbtn);
    	    
    	    
    	    
    	    
    }
    public void imageprofiletestcase() throws EncryptedDocumentException, InvalidFormatException, IOException, AWTException
    {       ExcelMethods xcel=new ExcelMethods("C:\\Users\\ASTR-34\\Desktop\\files\\imagecompaigneData\\imagecompaignExcelData.xlsx");
            String Sspath=xcel.getCellData("imageindexdata",1,0);
            String profilename=p.getProperty("imgprofile.text.profilename");
            gf.implicitwait(20);
            gf.click("xpath", profilename);
            gf.screenshot(Sspath,"PP_01");
            gf.refreshBrowser();
            gf.sleep(3000);
           /* User (Admin) should be navigate from Profile Page to Dashboard Page */
            String visitprofilename=p.getProperty("imgprofile.text.visitprofile");
            String help=p.getProperty("imgprofile.text.Help");
            String support=p.getProperty("imgprofile.text.support");
            String overview=p.getProperty("imgprofile.text.overview");
            gf.click("xpath", profilename);
            gf.sleep(1000);
            gf.click("xpath",visitprofilename);
            gf.sleep(2000);
            gf.screenshot(Sspath, "PP_03");
            gf.sleep(2000);
            gf.click("xpath", profilename);
            gf.sleep(1000);
            /* Help Option should be clickable*/
            gf.click("xpath",help);
            gf.sleep(2000);
            gf.screenshot(Sspath, "PP_07");
            gf.click("xpath", profilename);
            gf.sleep(1000);
            /* Support Option should be clickable  */
            gf.click("xpath",support);
            gf.sleep(2000);
            gf.screenshot(Sspath, "PP_08");
            gf.sleep(2000);
            gf.refreshBrowser();
            gf.sleep(3000);
            gf.click("xpath", profilename);
            gf.sleep(1000);
            /* Overview Option should be clickable*/
            gf.click("xpath",overview);
            gf.sleep(2000);
            gf.screenshot(Sspath,"PP_06");
            gf.refreshBrowser();
            gf.sleep(3000);
            /* By default, Overview Option should be highlighted*/
            gf.sleep(2000);
            gf.click("xpath",profilename);
            gf.sleep(1000);
            gf.screenshot(Sspath,"PP_05");
            gf.refreshBrowser();
            gf.sleep(3000);
            /* Verification of Weblink that displayed inside Support window frame */
            String weblink=p.getProperty("imgprofile.text.weblink");
            gf.click("xpath", profilename);
            gf.sleep(1000);
            gf.click("xpath",support);
            gf.sleep(3000);
            gf.click("xpath",weblink);
            gf.sleep(3000);
            gf.screenshot(Sspath, "PP_09");
            gf.back();
            gf.sleep(2000);
            /* Graphlink icon should be clickable inside Support frame  */
            String graphlink=p.getProperty("imgprofile.text.graphlink");
            gf.click("xpath",profilename);
            gf.sleep(1000);
            gf.click("xpath",support);
            gf.sleep(12000);
            gf.mousemorehover("cssSelector",graphlink);
            gf.sleep(5000);
            gf.screenshot(Sspath,"PP_10");
            String  logoutlink=p.getProperty("imgprofile.text.logoutlink");
            String  cancelbtn=p.getProperty("imgprofile.text.cancelbtn");
            gf.click("xpath", logoutlink);
            /* User (Admin) can cancel the log-out activity*/
            gf.screenshot(Sspath,"PP_16");
            gf.sleep(1000);
            gf.click("xpath",cancelbtn);
            gf.sleep(1000);
            gf.click("xpath",profilename);
            gf.sleep(1000);
            gf.click("xpath", logoutlink);
            gf.sleep(1000);
            String alertlogoutbtn=p.getProperty("imgprofile.text.alertlogoutbtn");
            gf.click("xpath", alertlogoutbtn);
            gf.screenshot(Sspath,"PP_15");
            gf.sleep(2000);
            String emailid=xcel.getCellData("imageindexdata",1,1);
            String password=xcel.getCellData("imageindexdata",1,2);
            login(emailid,password);
            /* Verification of Profile pic inside Profile Page*/
            gf.click("xpath", profilename);
            gf.sleep(1000);
            gf.click("xpath",visitprofilename);
            gf.sleep(2000);
            String imageicon=p.getProperty("imgprofile.text.imageicon");
            String imagealertmessage=p.getProperty("imgprofile.text.imagealertmessage");
            /*User (Admin) cannot upload other files except JPEG or PNG File as profile picture inside image logo */
            String profileicon=p.getProperty("imgprofile.text.profileicon");
            gf.click("xpath",imageicon);
            gf.sleep(3000);
 		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\imagecompaigneData\\excel.exe");
 		    gf.sleep(3000);
            gf.screenshot(Sspath,"PP_21");
            gf.refreshBrowser();
            gf.sleep(4000);
            gf.click("xpath",profileicon);
            gf.sleep(3000);
 		    gf.uploadfile("C:\\Users\\ASTR-34\\Desktop\\files\\imagecompaigneData\\image.exe");
 		    gf.sleep(3000);
            gf.gettextofwebelement("xpath",imagealertmessage);
            gf.screenshot(Sspath,"PP_19");
            /* User (Admin) can view profile picture name inside image logo */
            gf.mousemorehover("xpath",imageicon);
            gf.sleep(1000);
            gf.screenshot(Sspath,"PP_20");
            gf.sleep(6000);
            String editprofile=p.getProperty("imgprofile.text.editprofile");
            String savechanges=p.getProperty("imgprofile.text.savechanges");
            String editalertmsg=p.getProperty("imgprofile.text.editalertmsg");
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_22");
            /* Verification of Company Name text field in Profile Info */
            String cmpname=p.getProperty("imgprofile.text.cmpname");
            String companyName=xcel.getCellData("imageprofile",1,0);
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",cmpname);
            gf.sendKeys("xpath", cmpname, companyName);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_23");
            /* User (Admin) cannot update Company Name text field with blank value inside Profile Info */
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath",cmpname);
            gf.Backspace(20);
            gf.sleep(1000);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            String cmpfieldserrormsg=p.getProperty("imgprofile.text.cmpfieldserrormessage");
            gf.gettextofwebelement("xpath", cmpfieldserrormsg);
            gf.screenshot(Sspath,"PP_24");
            /* User (Admin) cannot update Company Name text field with character having First character as blanked space inside Profile Info */
            gf.sleep(1000);
            gf.cleartext("xpath",cmpname);
            gf.sleep(1000);
            gf.space("xpath",cmpname,Keys.SPACE);
            gf.space("xpath",cmpname,Keys.SPACE);
            gf.sendKeys("xpath", cmpname, companyName);
            gf.click("xpath",savechanges);
            gf.screenshot(Sspath,"PP_25");
            /* Verification of Admin Name text field in Profile Info */
            String adminname=p.getProperty("imgprofile.text.adminname");
            String AdminName=xcel.getCellData("imageprofile",1,1);
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",adminname);
            gf.sendKeys("xpath", adminname, AdminName);
            gf.sleep(2000);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_27");
            /* User (Admin) cannot update Admin Name text field with blank value inside Profile Info*/
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath",adminname);
            gf.Backspace(14);
            gf.sleep(1000);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            String adminfielderrormsg=p.getProperty("imgprofile.text.adminfielderrormsg");
            gf.gettextofwebelement("xpath",adminfielderrormsg);
            gf.screenshot(Sspath,"PP_28");
            /* User (Admin) cannot update Admin Name text field with character having First character as blanked space inside Profile Info */
            gf.cleartext("xpath",adminname);
            gf.space("xpath",adminname,Keys.SPACE);
            gf.space("xpath",adminname,Keys.SPACE);
            gf.cleartext("xpath",adminname);
            gf.sendKeys("xpath",adminname, AdminName);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.screenshot(Sspath,"PP_29");
            /* User (Admin) can add Contact Number text field inside Profile Info */
            String contactno=p.getProperty("imgprofile.text.contactNumber");
            String ContactNumber=xcel.getCellData("imageprofile",1,2);
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",contactno);
            gf.sendKeys("xpath", contactno,ContactNumber);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_32");
            /* User (Admin) cannot add Contact Number text field with blank value  inside Profile Info*/
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath",contactno);
            gf.Backspace(20);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            String confielderrormsg=p.getProperty("imgprofile.text.contactnofielderrormsg");
            gf.gettextofwebelement("xpath", confielderrormsg);
            gf.screenshot(Sspath,"PP_33");
            /* User (Admin) cannot add Contact Number text field with the character value inside Profile Info*/
            String contoastmsg=p.getProperty("imgprofile.text.contactnotoastmsg");
            String Concharvalue=xcel.getCellData("imageprofile",1,3);
            gf.sleep(1000);
            gf.cleartext("xpath",contactno);
            gf.sendKeys("xpath", contactno,Concharvalue);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",contoastmsg);
            gf.screenshot(Sspath,"PP_34");
            /* User (Admin) cannot add text field with character having First character as blanked space inside Profile Info */
            String ConFirstcharblankspace=xcel.getCellData("imageprofile",1,4);
            // gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",contactno);
            gf.space("xpath", contactno,Keys.SPACE);
            gf.space("xpath", contactno,Keys.SPACE);
            gf.sendKeys("xpath", contactno,ConFirstcharblankspace);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.screenshot(Sspath,"PP_35");
            /* User (Admin) cannot update Contact Number text field with character having space inside Profile Info*/
            String ConNowithspace=xcel.getCellData("imageprofile",1,5);
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",contactno);
            gf.sendKeys("xpath", contactno,ConNowithspace);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",contoastmsg);
            gf.screenshot(Sspath,"PP_36");
            /* User (Admin) cannot add Contact Number text field with special character inside Profile Info*/
            String ConNowithspecialchar=xcel.getCellData("imageprofile",1,6);
            gf.sleep(1000);
            gf.cleartext("xpath",contactno);
            gf.sendKeys("xpath", contactno,ConNowithspecialchar);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",contoastmsg);
            gf.screenshot(Sspath,"PP_37");
            /* User (Admin) can add Contact Number text field with numerical character that lie in the range of 5-15 digits inside Profile Info*/
            String conrange=xcel.getCellData("imageprofile",1,7);
            gf.sleep(1000);
            gf.cleartext("xpath",contactno);
            gf.sendKeys("xpath", contactno,conrange);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_38");
            /* User (Admin) cannot update Contact Number text field with numerical character that lie outside from the range of 5-15 digits inside Profile Info */
            String connoinvalidrange=xcel.getCellData("imageprofile",1,8);
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",contactno);
            gf.sendKeys("xpath", contactno,connoinvalidrange);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            String contactfieldtoastmsg=p.getProperty("imgprofile.text.contactfielderrormsg");
            gf.gettextofwebelement("xpath",contactfieldtoastmsg);
            gf.screenshot(Sspath,"PP_39");
            /* Verification of Address text field in Profile Info */
            gf.cleartext("xpath",contactno);
            gf.sendKeys("xpath", contactno,conrange);
            String address=p.getProperty("imgprofile.text.address");
            String AddressData=xcel.getCellData("imageprofile",1,9);
            gf.cleartext("xpath",address);
            gf.sendKeys("xpath", address, AddressData);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_40");  
            /* User(Admin) cannot update Address text field with blank value  inside Profile Info */
            String addreserrormsg=p.getProperty("imgprofile.text.addresserrormsg");
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath",address);
            gf.Backspace(30);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",addreserrormsg);
            gf.screenshot(Sspath,"PP_41");
            /* User (Admin) cannot update Address text field with character having First character as blanked space inside Profile Info*/
            gf.space("xpath",address,Keys.SPACE);
            gf.space("xpath",address,Keys.SPACE);
            gf.sendKeys("xpath", address, AddressData);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.screenshot(Sspath,"PP_42");
            /* Verification of Country text field in Profile Info */
            String countrydropdown=p.getProperty("imgprofile.text.countrydropdown");
            String countryname=p.getProperty("imgprofile.text.countryname");
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath", countrydropdown);
            gf.mousemorehover("xpath",countryname);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.click("xpath",savechanges);
            gf.screenshot(Sspath,"PP_43");
            /* Verification of State text field in Profile Info */
            String statedopdown=p.getProperty("imgprofile.text.statedropdown");
            String statename=p.getProperty("imgprofile.text.statename");
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath",statedopdown);
            gf.mousemorehover("xpath",statename);
            gf.sleep(1000);
            gf.KeyboardEnter(1);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_46");
            /* Verification of ZIP Code field in Profile Info */
            String Zipcode=p.getProperty("imgprofile.text.zipcodes");
            String zipcodedata=xcel.getCellData("imageprofile",1,10);
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",Zipcode);
            gf.sendKeys("xpath", Zipcode, zipcodedata);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",editalertmsg);
            gf.screenshot(Sspath,"PP_48");
            /* User (Admin) cannot update ZIP Code field with character having First character as blanked space inside Profile Info*/
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.cleartext("xpath",Zipcode);
            gf.space("xpath",Zipcode,Keys.SPACE);
            gf.space("xpath",Zipcode,Keys.SPACE);
            gf.sendKeys("xpath", Zipcode, zipcodedata);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.screenshot(Sspath,"PP_49");
            /* User (Admin) cannot update ZIP Code field with blank value  inside Profile Info*/
            String zipcodeerrormsg=p.getProperty("imgprofile.text.zipcodeerrormsg");
            gf.sleep(1000);
            gf.click("xpath",editprofile);
            gf.sleep(1000);
            gf.click("xpath",Zipcode);
            gf.Backspace(20);
            gf.click("xpath",savechanges);
            gf.sleep(2000);
            gf.gettextofwebelement("xpath",zipcodeerrormsg);
            gf.screenshot(Sspath,"PP_50");
            /* Verification of Validity under Usage Section */
            String validity=p.getProperty("imgprofile.text.validity");
            String leftdays=p.getProperty("imgprofile.text.remainingday");
            String validitytextdata=p.getProperty("imgprofile.text.validitytextdata");
            String reaminingAssets=p.getProperty("imgprofile.text.remainingasset");
            String Noofassets=p.getProperty("imgprofile.text.noofassets");
            String Assetstextdata=p.getProperty("imgprofile.text.assettextdata");            
            gf.gettextofwebelement("xpath",validity);
            gf.gettextofwebelement("xpath",leftdays);
            gf.gettextofwebelement("xpath",validitytextdata);
            gf.gettextofwebelement("xpath",reaminingAssets);
            gf.gettextofwebelement("xpath", Noofassets);
            gf.gettextofwebelement("xpath",Assetstextdata);
            /* Verification of My Order Section*/
            String myorder=p.getProperty("imgprofile.text.myorder");
            gf.gettextofwebelement("xpath",myorder);
            gf.screenshot(Sspath,"PP_55");
            String myorderscrollbar=p.getProperty("imgprofile.text.myorderscrollbar");
            gf.click("xpath", myorderscrollbar);
            gf.scrollpageDown();
            gf.sleep(1000);
            gf.scrollpageDown();
            gf.sleep(1000);
            gf.scrollpageDown();
            gf.sleep(1000);
            gf.scrollpgeUp();
            gf.sleep(1000);
            gf.scrollpgeUp();
            gf.sleep(1000);
            gf.scrollpgeUp();
            gf.screenshot(Sspath,"PP_56");
            /* Verification of View Plans tab*/
            String viewplans=p.getProperty("imgprofile.text.vieplans");
            gf.click("xpath", viewplans);
            gf.sleep(2000);             
            gf.screenshot(Sspath,"PP_57");
            String viewprofile=p.getProperty("imgprofile.text.viewprofile");
            gf.click("xpath", viewprofile);
            gf.sleep(2000);
            gf.screenshot(Sspath, "PP_57.1");
            String selectplan=p.getProperty("imgprofile.text.selectplan");
            /*Verification of Select Plan tab*/
            gf.click("xpath", selectplan);
            gf.sleep(2000);
            gf.screenshot(Sspath, "PP_59");
            gf.click("xpath", profilename);
            gf.sleep(1000);
            gf.click("xpath",visitprofilename);
            gf.sleep(2000);
            /* Verification of Purchase a suitable Plan */
            gf.click("xpath", selectplan);
            gf.sleep(2000);
            String Payasyougo=p.getProperty("imgprofile.text.payasyougo");
            gf.click("xpath", Payasyougo);
            gf.sleep(2000);
            String cradnumber2=p.getProperty("imgprofile.text.cardNo");
            gf.click("xpath", cradnumber2);
            gf.sleep(2000);
            String makepaymentbtn=p.getProperty("imgprofile.text.makepayment");
            gf.click("xpath", makepaymentbtn);
            gf.sleep(2000);
            String payasyougotoastmsg=p.getProperty("imgprofile.text.payasyougotoastmsg");
            gf.gettextofwebelement("xpath", payasyougotoastmsg);
            
                      
            
 }
    
}
